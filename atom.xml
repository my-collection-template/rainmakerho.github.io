<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>亂馬客 - back to basics</title>
  <icon>https://www.gravatar.com/avatar/cd3aed042ccd7a5a5d9956b0bc07dc81</icon>
  <subtitle>back to basics</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://rainmakerho.github.io/"/>
  <updated>2018-09-17T06:29:44.398Z</updated>
  <id>https://rainmakerho.github.io/</id>
  
  <author>
    <name>亂馬客</name>
    <email>rainmaker_ho@gss.com.tw</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Microsoft Botframework + Adaptive Cards 快速打造 Chatbot 之 2</title>
    <link href="https://rainmakerho.github.io/2018/09/17/2018034/"/>
    <id>https://rainmakerho.github.io/2018/09/17/2018034/</id>
    <published>2018-09-17T01:29:38.000Z</published>
    <updated>2018-09-17T06:29:44.398Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>在 <a href="https://rainmakerho.github.io/2018/08/02/2018030/">Microsoft Botframework + Adaptive Cards 快速打造 Chatbot</a> 一篇中，<br>我們說明如何透過 Adaptive Cards 將所有的動作透過 Action 再依它的 Action Type 來轉換成對應的 Action 物件及處理該 Action 物件的 Strategy 物件。</p><p>但是當我們的 Action 逾來逾多時，原本使用 switch 勢必會造成相對應的複雜度，依 Strategy 的方式是建立對應表，以下將介紹使用 Dictionary&lt;string, Func&lt;T>> 及 Autofac 這2種方式。</p><p>另外，如果 Strategy 物件 中有使用到 Prompt dialogs 時，原本在執行完 Strategy 物件的 Method 後，如果直接呼叫 context.Done(“”); 將會造成 botframework Dialog Stack 運行上的錯誤，我們也將修正 Strategy 物件的 interface 。</p><h3 id="實作"><a href="#實作" class="headerlink" title="實作"></a>實作</h3><h4 id="調整-Strategy-物件的建立方式"><a href="#調整-Strategy-物件的建立方式" class="headerlink" title="調整 Strategy 物件的建立方式"></a>調整 Strategy 物件的建立方式</h4><p>因為對應的 Strategy 物件變成了4個，如果用 switch 判斷的話，程式如下，<br><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 依不同的 Type 決定要用那個 Class</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="type"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">[<span class="meta">Obsolete</span>]</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> IActionStrategy <span class="title">ResolveActionStrategy</span>(<span class="params">BotAction botAction</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    IActionStrategy result = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">switch</span> (botAction.ActionType)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">case</span> ActionTypes.ShowAcountAction:</span><br><span class="line">            result = <span class="keyword">new</span> ShowAccountActionStrategy();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> ActionTypes.AccountAction:</span><br><span class="line">            result = <span class="keyword">new</span> AccountActionStrategy();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> ActionTypes.ShowMenuAction:</span><br><span class="line">            result = <span class="keyword">new</span> ShowMenuActionStrategy();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> ActionTypes.OrderAction:</span><br><span class="line">            result = <span class="keyword">new</span> OrderActionStrategy();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            result = <span class="keyword">new</span> NoneActionStrategy();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><img src="/2018/09/17/2018034/001.png" title="[用 switch 判斷 Strategy 物件]"><p>因為 botframework 已使用 Autofac ，所以我們可以透過 <a href="https://autofaccn.readthedocs.io/en/latest/advanced/keyed-services.html" target="_blank" rel="noopener">Autofac Named Services</a> 方式來建立對應表，所以在 ActionStrategyResolver 物件中建立 ResolveByActionTypes Method 然後在 Global.asax.cs Application_Start Method 中去呼叫 ResolveByActionTypes Method。如下，<br><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 設定 ACTION_TYPE 對應要建立的物件</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="builder"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">ResolveByActionTypes</span>(<span class="params">ContainerBuilder builder</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    builder</span><br><span class="line">        .RegisterType&lt;ShowAccountActionStrategy&gt;()</span><br><span class="line">        .Named&lt;IActionStrategy&gt;(ActionTypes.ShowAcountAction.ToString())</span><br><span class="line">        .InstancePerLifetimeScope();</span><br><span class="line"></span><br><span class="line">    builder</span><br><span class="line">        .RegisterType&lt;AccountActionStrategy&gt;()</span><br><span class="line">        .Named&lt;IActionStrategy&gt;(ActionTypes.AccountAction.ToString())</span><br><span class="line">        .InstancePerLifetimeScope();</span><br><span class="line"></span><br><span class="line">    builder</span><br><span class="line">        .RegisterType&lt;ShowMenuActionStrategy&gt;()</span><br><span class="line">        .Named&lt;IActionStrategy&gt;(ActionTypes.ShowMenuAction.ToString())</span><br><span class="line">        .InstancePerLifetimeScope();</span><br><span class="line"></span><br><span class="line">    builder</span><br><span class="line">        .RegisterType&lt;OrderActionStrategy&gt;()</span><br><span class="line">        .Named&lt;IActionStrategy&gt;(ActionTypes.OrderAction.ToString())</span><br><span class="line">        .InstancePerLifetimeScope();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>而在取得對應的 Strategy 物件時，只要給 Action Type 值 ( var actionStrategy =scope.ResolveNamed<iactionstrategy>(botAction.ActionType.ToString()) )，就可以了哦! 如下，<br><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 透過 ACTION_TYPE 來建立對應的物件</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="botAction"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="context"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">async</span> <span class="keyword">static</span> Task <span class="title">DoActionAsync</span>(<span class="params">BotAction botAction, IDialogContext context</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">using</span> (<span class="keyword">var</span> scope = DialogModule.BeginLifetimeScope(Conversation.Container, context.Activity.AsMessageActivity()))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">var</span> actionStrategy = scope.ResolveNamed&lt;IActionStrategy&gt;(botAction.ActionType.ToString());</span><br><span class="line">        <span class="keyword">await</span> actionStrategy.DoActionAsync(botAction, context);</span><br><span class="line">        <span class="comment">//註:如果您的 strategy 有用到 PromptDialog Or Other ResumeAfter 你就不能在這裡 CALL context.Done()</span></span><br><span class="line">        <span class="keyword">if</span> (actionStrategy.IsContextDone)</span><br><span class="line">        &#123;</span><br><span class="line">            context.Done(<span class="string">""</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></iactionstrategy></p><h4 id="調整-Action-物件的建立方式"><a href="#調整-Action-物件的建立方式" class="headerlink" title="調整 Action 物件的建立方式"></a>調整 Action 物件的建立方式</h4><p>之前在 JsonConverter 中依 ActionType 透過 switch 來建立物件，我們可以建立一個 Dictionary 來對應生成的Function，因為會需要 jtoken 所以建立的 Dictionary為，Dictionary&lt;string, Func&lt;JToken, BotAction>> ，然後在 static construct 時建立它 (ActionConverter是我們的 class name)，如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 設定依 ActionType 來建立物件的 Dictionary</span></span><br><span class="line"><span class="keyword">static</span> Dictionary&lt;<span class="keyword">string</span>, Func&lt;JToken, BotAction&gt;&gt; BotActionMapper;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="title">ActionConverter</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ResolveByActionTypes();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 依 ActionType 來決定要建立那個 Action 及初始化處理</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">ResolveByActionTypes</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Func&lt;JToken, BotAction&gt; acountActionFun = jtoken =&gt; <span class="keyword">new</span> AccountAction();</span><br><span class="line">    Func&lt;JToken, BotAction&gt; orderActionFun = jtoken =&gt;</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">var</span> result = <span class="keyword">new</span> OrderAction();</span><br><span class="line">        <span class="comment">//建立物件後，如果還有其他要處理的事，可以接著寫下去...</span></span><br><span class="line">        <span class="comment">//AssignProducts(result as OrderAction, jtoken as JObject);</span></span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    BotActionMapper = <span class="keyword">new</span> Dictionary&lt;<span class="keyword">string</span>, Func&lt;JToken, BotAction&gt;&gt;()&#123;</span><br><span class="line">        &#123;ActionTypes.AccountAction.ToString(), acountActionFun &#125;,</span><br><span class="line">        &#123;ActionTypes.OrderAction.ToString(), orderActionFun &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>所以原本在 ReadJson Method 裡面的 switch 改成依 ActionType 當成 BotActionMapper 的 Key ，取出生成的 Function ，然後呼叫它( BotAction result = BotActionMapper<a href="jtoken">type.ToString()</a>; )，<br>如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 依 ActionType 來決定要轉回什麼物件</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="reader"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="objectType"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="existingValue"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="serializer"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">object</span> <span class="title">ReadJson</span>(<span class="params">JsonReader reader, Type objectType, <span class="keyword">object</span> existingValue, JsonSerializer serializer</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> jtoken = JToken.ReadFrom(reader);</span><br><span class="line">    <span class="keyword">var</span> type = jtoken[<span class="string">"ActionType"</span>].ToObject&lt;ActionTypes&gt;();</span><br><span class="line">    BotAction result = BotActionMapper[type.ToString()](jtoken);</span><br><span class="line">    serializer.Populate(jtoken.CreateReader(), result);</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="設定是否呼叫-context-Done-“”"><a href="#設定是否呼叫-context-Done-“”" class="headerlink" title="設定是否呼叫 context.Done(“”)"></a>設定是否呼叫 context.Done(“”)</h4><p>之前我們執行完 Strategy 物件的 Method 後，會直接呼叫 context.Done(“”) ，這表示這個 Strategy 物件的事已做好了，再進來的訊息又是會對應到新的 Strategy 物件。</p><p>但有時，Strategy 物件會需要再從使用者那取得回應，例如用了 PromptDialog 相關的 Method， 它需要傳入一個 resume 的 Callback Function，在整個結束才會呼叫 contex.Done(“”)，所以這時候，就不可以直接呼叫 context.Done 。</p><p>所以 Strategy 物件的 interface 多加入一個設定是否呼叫 contex.Done(“”) 的屬性，或是改成不呼叫，全都交由 Strategy 物件自行決定。如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 定義 Action 共通的 interface </span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title">IActionStrategy</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function">Task <span class="title">DoActionAsync</span>(<span class="params">BotAction botAction, IDialogContext context</span>)</span>;</span><br><span class="line">    <span class="keyword">bool</span> IsContextDone &#123; <span class="keyword">get</span>;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>所以在上面的 DoActionAsync 有依 IsContextDone 屬性來判斷是否執行 contex.Done(“”) 。</p><p>經過將 switch 改以 Dictionary or  Autofac DI 方式來建立物件，改善了複雜度，也提升了可讀性。<br>另外在使用 contex.Done 的時機點，大家也要注意一下哦 :)<br>希望對大家以 Microsoft Botframework 來開發 Chatbot 有所幫助。</p><h3 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h3><p><a href="https://rainmakerho.github.io/2018/08/02/2018030/">Microsoft Botframework + Adaptive Cards 快速打造 Chatbot</a><br><a href="https://www.dofactory.com/net/strategy-design-pattern" target="_blank" rel="noopener">Strategy</a><br><a href="https://autofaccn.readthedocs.io/en/latest/advanced/keyed-services.html" target="_blank" rel="noopener">Autofac Named Services</a><br></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;在 &lt;a href=&quot;https://rainmakerho.github.io/2018/08/02/2018030/&quot;&gt;Microsof
      
    
    </summary>
    
    
      <category term="chatbot" scheme="https://rainmakerho.github.io/tags/chatbot/"/>
    
      <category term="botframework" scheme="https://rainmakerho.github.io/tags/botframework/"/>
    
      <category term="adaptivecard" scheme="https://rainmakerho.github.io/tags/adaptivecard/"/>
    
      <category term="adaptive" scheme="https://rainmakerho.github.io/tags/adaptive/"/>
    
      <category term="Autofac" scheme="https://rainmakerho.github.io/tags/Autofac/"/>
    
  </entry>
  
  <entry>
    <title>NHibernate.Exceptions.GenericADOException System.Text.EncoderFallbackException</title>
    <link href="https://rainmakerho.github.io/2018/08/21/2018033/"/>
    <id>https://rainmakerho.github.io/2018/08/21/2018033/</id>
    <published>2018-08-21T10:22:37.000Z</published>
    <updated>2018-08-21T10:36:17.177Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>最近系統上有時會出現「NHibernate.Exceptions.GenericADOException System.Text.EncoderFallbackException」的錯誤，IIS Reset 後，又正常。<br>過一陣子，又會出現。到底怎麼回事呢?<br>錯誤訊息如下，<br>NHibernate.Exceptions.GenericADOException: could not execute query<br>[ select scuserm0_.USR_ID as col_0_0_, scuserm0_.USR_NAME as col_1_0_ from SCUSERM scuserm0_ where scuserm0_.USR_ID in (?) ]<br>Name:Scuserm - Value:RM4303<br>[SQL: select scuserm0_.USR_ID as col_0_0_, scuserm0_.USR_NAME as col_1_0_ from SCUSERM scuserm0_ where scuserm0_.USR_ID in (?)] —&gt; System.Text.EncoderFallbackException: 無法將索引 105 中的 Unicode 字元 \uD83C 轉譯為指定的字碼頁。<br>於 System.Text.EncoderExceptionFallbackBuffer.Fallback(Char charUnknown, Int32 index)<br>於 System.Text.EncoderFallbackBuffer.InternalFallback(Char ch, Char<em>&amp; chars)<br>於 System.Text.UTF8Encoding.GetBytes(Char</em> chars, Int32 charCount, Byte* bytes, Int32 byteCount, EncoderNLS baseEncoder)<br>於 System.Text.EncoderNLS.GetBytes(Char[] chars, Int32 charIndex, Int32 charCount, Byte[] bytes, Int32 byteIndex, Boolean flush)<br>於 System.IO.StreamWriter.Flush(Boolean flushStream, Boolean flushEncoder)<br>於 System.IO.StreamWriter.Write(Char[] buffer, Int32 index, Int32 count)<br>於 System.IO.TextWriter.SyncTextWriter.WriteLine(String value)<br>於 NHibernate.AdoNet.AbstractBatcher.ExecuteReader(IDbCommand cmd)<br>於 NHibernate.Loader.Loader.GetResultSet(IDbCommand st, Boolean autoDiscoverTypes, Boolean callable, RowSelection selection, ISessionImplementor session)<br>於 NHibernate.Loader.Loader.DoQuery(ISessionImplementor session, QueryParameters queryParameters, Boolean returnProxies)<br>於 NHibernate.Loader.Loader.DoQueryAndInitializeNonLazyCollections(ISessionImplementor session, QueryParameters queryParameters, Boolean returnProxies)<br>於 NHibernate.Loader.Loader.DoList(ISessionImplementor session, QueryParameters queryParameters)<br>— 內部例外狀況堆疊追蹤的結尾 —<br>於 NHibernate.Loader.Loader.DoList(ISessionImplementor session, QueryParameters queryParameters)<br>於 NHibernate.Loader.Loader.ListIgnoreQueryCache(ISessionImplementor session, QueryParameters queryParameters)<br>於 NHibernate.Hql.Ast.ANTLR.Loader.QueryLoader.List(ISessionImplementor session, QueryParameters queryParameters)<br>於 NHibernate.Hql.Ast.ANTLR.QueryTranslatorImpl.List(ISessionImplementor session, QueryParameters queryParameters)<br>於 NHibernate.Engine.Query.HQLQueryPlan.PerformList(QueryParameters queryParameters, ISessionImplementor session, IList results)<br>於 NHibernate.Impl.SessionImpl.List(String query, QueryParameters queryParameters, IList results)<br>於 NHibernate.Impl.SessionImpl.List<a href="String query, QueryParameters parameters">T</a><br>於 NHibernate.Impl.QueryImpl.List<a href="">T</a></p><h3 id="研究"><a href="#研究" class="headerlink" title="研究"></a>研究</h3><p>奇怪，查詢資料，為什麼會有 System.IO.TextWriter.SyncTextWriter.WriteLine 呢?<br>於是設定不要寫 log4net 的 log ，還是會出現。<br>後來參考 <a href="https://stackoverflow.com/questions/18504196/periodically-unable-to-translate-unicode-character-x-at-index-y-to-specified-c" target="_blank" rel="noopener">Periodically - Unable to translate Unicode character X at index Y to specified code page</a> 這篇的方式，將設定 show_sql 設為 false 。最近觀察，就沒有再發生那個錯誤了。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">add</span> <span class="attr">key</span>=<span class="string">"hibernate.show_sql"</span> <span class="attr">value</span>=<span class="string">"false"</span> /&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;最近系統上有時會出現「NHibernate.Exceptions.GenericADOException System.Text.Encod
      
    
    </summary>
    
    
      <category term="NHibernate" scheme="https://rainmakerho.github.io/tags/NHibernate/"/>
    
      <category term="GenericADOException" scheme="https://rainmakerho.github.io/tags/GenericADOException/"/>
    
      <category term="EncoderFallbackException" scheme="https://rainmakerho.github.io/tags/EncoderFallbackException/"/>
    
      <category term="Unicode" scheme="https://rainmakerho.github.io/tags/Unicode/"/>
    
  </entry>
  
  <entry>
    <title>.NET Exception Handling</title>
    <link href="https://rainmakerho.github.io/2018/08/21/2018032/"/>
    <id>https://rainmakerho.github.io/2018/08/21/2018032/</id>
    <published>2018-08-21T08:31:47.000Z</published>
    <updated>2018-08-22T05:05:16.311Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>最近還是常常看到同仁在處理 Exception 時，將 Exception throw 出去，但這樣前面的 StackTrace 就會斷掉了哦!</p><h3 id="研究"><a href="#研究" class="headerlink" title="研究"></a>研究</h3><p>許多人常常很習慣地將 ex throw 出去，如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//exception code here</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> (Exception ex)&#123;</span><br><span class="line">    <span class="comment">// do somthing</span></span><br><span class="line">    thorw ex;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>比較好的應該只要寫 throw 就會有完整的 StackTrace 資料，如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//exception code here</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> (Exception ex)&#123;</span><br><span class="line">    <span class="comment">// do somthing</span></span><br><span class="line">    thorw;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="throw-new-Exception"><a href="#throw-new-Exception" class="headerlink" title="throw new Exception"></a>throw new Exception</h4><ul><li>參數值無效<br>一般我們在驗證參數時，如果參數值無效時，可以用 System.ArgumentException ，而參數可以使用 nameof([參數])，如下，</li></ul><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">CopyObject</span>(<span class="params">SampleClass original</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (original == <span class="literal">null</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> System.ArgumentException(<span class="string">"Parameter cannot be null"</span>, <span class="keyword">nameof</span>(original));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果某參數發生了 IndexOutOfRangeException，則可以將它傳入 ArgumentException 作為 InnerException 參數，如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">GetValueFromArray</span>(<span class="params"><span class="keyword">int</span>[] array, <span class="keyword">int</span> index</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> array[index];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (System.IndexOutOfRangeException ex)</span><br><span class="line">    &#123;</span><br><span class="line">        System.ArgumentException argEx = <span class="keyword">new</span> System.ArgumentException(<span class="string">"Index is out of range"</span>, <span class="string">"index"</span>, ex);</span><br><span class="line">        <span class="keyword">throw</span> argEx;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>不適當的操作，則可以使用 System.InvalidOperationException</li></ul><h4 id="自定的-Exception-Class"><a href="#自定的-Exception-Class" class="headerlink" title="自定的 Exception Class"></a>自定的 Exception Class</h4><p>我們可以繼承自 Exception ，並且可序列化，至少需要 4 個建構函式:</p><ol><li>預設建構函式</li><li>設定 Message 的建構函式</li><li>同時設定 Message 和 InnerException 屬性的建構函式</li><li>是用來序列化例外狀況。<br>如下，</li></ol><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">Serializable()</span>]</span><br><span class="line">public class InvalidDepartmentException : System.Exception</span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">InvalidDepartmentException</span>(<span class="params"></span>) : <span class="title">base</span>(<span class="params"></span>) </span>&#123; &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">InvalidDepartmentException</span>(<span class="params"><span class="keyword">string</span> message</span>) : <span class="title">base</span>(<span class="params">message</span>) </span>&#123; &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">InvalidDepartmentException</span>(<span class="params"><span class="keyword">string</span> message, System.Exception inner</span>) : <span class="title">base</span>(<span class="params">message, inner</span>) </span>&#123; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// A constructor is needed for serialization when an</span></span><br><span class="line">    <span class="comment">// exception propagates from a remoting server to the client.</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="title">InvalidDepartmentException</span>(<span class="params">System.Runtime.Serialization.SerializationInfo info,</span></span></span><br><span class="line"><span class="function"><span class="params">        System.Runtime.Serialization.StreamingContext context</span>) </span>&#123; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>詳細可以參考 <a href="https://docs.microsoft.com/zh-tw/dotnet/csharp/programming-guide/exceptions/creating-and-throwing-exceptions" target="_blank" rel="noopener">建立和擲回例外狀況</a>。<br>如果程式中有一堆的 try…catch ，則可以參考 <a href="https://dotblogs.azurewebsites.net/rainmaker/2014/11/19/147361" target="_blank" rel="noopener">包裝程式中共用的 try…catch</a> 透過共用的 try…catch 去封裝。</p><h3 id="實作練習"><a href="#實作練習" class="headerlink" title="實作練習"></a>實作練習</h3><p>我們可以學習 <a href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonException.htm" target="_blank" rel="noopener">JsonException Class</a>的設計方式，來練習。<br><img src="/2018/08/21/2018032/001.png" title="[JsonException Class]"></p><p>以下為<a href="https://app.pluralsight.com/library/courses/c-sharp-error-handling-exceptions/table-of-contents" target="_blank" rel="noopener">Error Handling in C# with Exceptions</a>的範例，大家可以參考一下哦!</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">Serializable()</span>]</span><br><span class="line"><span class="keyword">class</span> <span class="title">CalculationException</span> : <span class="title">Exception</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="keyword">string</span> DefaultMessage = <span class="string">"CalculationException 預設Message"</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CalculationException</span>(<span class="params"></span>) : <span class="title">base</span>(<span class="params">DefaultMessage</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CalculationException</span>(<span class="params"><span class="keyword">string</span> message</span>) : <span class="title">base</span>(<span class="params">message</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CalculationException</span>(<span class="params">Exception innerException</span>)</span></span><br><span class="line"><span class="function">        : <span class="title">base</span> (<span class="params">DefaultMessage, innerException</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CalculationException</span>(<span class="params"><span class="keyword">string</span> message, Exception innerException</span>)</span></span><br><span class="line"><span class="function">        : <span class="title">base</span> (<span class="params">message, innerException</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">[<span class="meta">Serializable()</span>]</span><br><span class="line"><span class="keyword">class</span> <span class="title">CalculationOperationNotSupportedException</span> : <span class="title">CalculationException</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">string</span> Operation &#123; <span class="keyword">get</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CalculationOperationNotSupportedException</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        : <span class="title">base</span>(<span class="params"><span class="string">"Specified operation was out of the range of valid values."</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CalculationOperationNotSupportedException</span>(<span class="params"><span class="keyword">string</span> operation</span>)</span></span><br><span class="line"><span class="function">        : <span class="title">this</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        Operation = operation;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CalculationOperationNotSupportedException</span>(<span class="params"><span class="keyword">string</span> message,</span></span></span><br><span class="line"><span class="function"><span class="params">        Exception innerException</span>) : <span class="title">base</span> (<span class="params">message, innerException</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CalculationOperationNotSupportedException</span>(<span class="params"><span class="keyword">string</span> operation, <span class="keyword">string</span> message</span>)</span></span><br><span class="line"><span class="function">        : <span class="title">base</span> (<span class="params">message</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        Operation = operation;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">string</span> Message</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">get</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">string</span> message = <span class="keyword">base</span>.Message;</span><br><span class="line">            <span class="keyword">if</span> (Operation != <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> message + Environment.NewLine +</span><br><span class="line">                    <span class="string">$"不支援的運算: <span class="subst">&#123;Operation&#125;</span>"</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> message;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>CalculationException 繼承自 Exception ，而 CalculationOperationNotSupportedException 繼承自 CalculationException ，因為有運算子，所以 建構函數多了一個運算子的參數 。並且覆寫 Message 的屬性，讓 Message 可讀性更高。測試程式如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//處理非預期的錯誤</span></span><br><span class="line">AppDomain currentAppDomain = AppDomain.CurrentDomain;</span><br><span class="line">currentAppDomain.UnhandledException</span><br><span class="line">+= <span class="keyword">new</span> UnhandledExceptionEventHandler(HandleException);</span><br><span class="line"></span><br><span class="line">WriteLine(<span class="string">"請輸入第一個數值"</span>);</span><br><span class="line"><span class="keyword">int</span> number1 = <span class="keyword">int</span>.Parse(ReadLine());</span><br><span class="line"></span><br><span class="line">WriteLine(<span class="string">"請輸入第二個數值"</span>);</span><br><span class="line"><span class="keyword">int</span> number2 = <span class="keyword">int</span>.Parse(ReadLine());</span><br><span class="line"></span><br><span class="line">WriteLine(<span class="string">"請輸入運算子"</span>);</span><br><span class="line"><span class="keyword">string</span> op = ReadLine().ToUpperInvariant();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> calculator = <span class="keyword">new</span> Calculator();</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> result = calculator.Calculate(number1, number2, op);</span><br><span class="line">WriteLine(<span class="string">$"結果為: <span class="subst">&#123;result&#125;</span>"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> (CalculationException ex)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// Log.Error(ex);</span></span><br><span class="line">WriteLine(ex);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> (Exception ex)</span><br><span class="line">&#123;</span><br><span class="line">WriteLine(<span class="string">$"發生了錯誤. <span class="subst">&#123;ex&#125;</span>"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">finally</span></span><br><span class="line">&#123;</span><br><span class="line">WriteLine(<span class="string">"... finally ..."</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">WriteLine(<span class="string">"\n請輸入 enter 離開"</span>);</span><br><span class="line">ReadLine();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">HandleException</span>(<span class="params"><span class="keyword">object</span> sender, UnhandledExceptionEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">WriteLine(<span class="string">$"發生非預期的錯誤: <span class="subst">&#123;e.ExceptionObject&#125;</span>"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>當輸入了不 support 的 運算子，output 如下，<br><img src="/2018/08/21/2018032/002.png" title="[不支援的運算]"></p><h3 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h3><p><a href="https://dotblogs.azurewebsites.net/rainmaker/2014/11/19/147361" target="_blank" rel="noopener">包裝程式中共用的 try…catch</a><br><a href="https://docs.microsoft.com/zh-tw/dotnet/csharp/programming-guide/exceptions/creating-and-throwing-exceptions" target="_blank" rel="noopener">建立和擲回例外狀況</a><br><a href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonException.htm" target="_blank" rel="noopener">JsonException Class</a><br><a href="https://app.pluralsight.com/library/courses/c-sharp-error-handling-exceptions/table-of-contents" target="_blank" rel="noopener">Error Handling in C# with Exceptions</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;最近還是常常看到同仁在處理 Exception 時，將 Exception throw 出去，但這樣前面的 StackTrace 就會斷掉了
      
    
    </summary>
    
    
      <category term="c#" scheme="https://rainmakerho.github.io/tags/c/"/>
    
      <category term=".net" scheme="https://rainmakerho.github.io/tags/net/"/>
    
      <category term="exception" scheme="https://rainmakerho.github.io/tags/exception/"/>
    
  </entry>
  
  <entry>
    <title>HTTP 500 內部伺服器錯誤</title>
    <link href="https://rainmakerho.github.io/2018/08/19/2018031/"/>
    <id>https://rainmakerho.github.io/2018/08/19/2018031/</id>
    <published>2018-08-19T15:04:40.000Z</published>
    <updated>2018-08-19T15:18:04.237Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>前陣子遇到了 http 403 的問題，今天又遇到了 http 500 的問題。<br>同事說，同一個資料，User A 連就 Ok, User B 連就出現 HTTP 500 內部伺服器錯誤 ，如下圖<br><img src="/2018/08/19/2018031/001.png" title="[HTTP 500]"></p><h3 id="研究"><a href="#研究" class="headerlink" title="研究"></a>研究</h3><p>透過，IE 開發者工具的網路來查看發現的確是回 500，但回應本文中，卻有內容。<br>想說是不是「顯示易懂的 HTTP 錯誤訊息」被勾起來了，詳細可參考<a href="https://dotblogs.com.tw/rainmaker/2012/11/22/84984" target="_blank" rel="noopener">讓 IE 跟你說實話，http 500(網站無法顯示該網頁)再見!</a> ,結果是沒勾的。</p><p>後來請同事拿一下 IIS Log 看一下，結果發現的確是 500，但後面有其他的訊息，如下，</p><p>2018-08-17 01:50:14 172.16.33.71 GET /RMAP/LMP/rm001.ASP MPagKey=abc&amp;GSSMPagFUNC<em>RW=R&amp;GSStxtFunDeep=0&amp;GSStxtActFlag=UPT|140|800a000d|類型不符:</em>‘mobjSCUser.FunChk’ 80 - 172.16.33.72 Mozilla/4.0+(compatible;+MSIE+7.0;+Windows+NT+6.1;+WOW64;+Trident/7.0;+SLCC2;+.NET+CLR+2.0.50727;+.NET+CLR+3.5.30729;+.NET+CLR+3.0.30729;+.NET4.0C;+.NET4.0E;+Media+Center+PC+6.0) - 500 0 0 250</p><p><strong>類型不符:_‘mobjSCUser.FunChk’</strong><br>似乎是在檢查使用者使用權限時，發生錯誤。<br>同事檢查後發現，不能使用的使用者，的確使用權限沒有設定好。</p><p>這要跟大家分享的是，當發生 http 500 時，如果 Log 也沒寫到想到的資訊時，也可以看一下 iis log 哦!</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;前陣子遇到了 http 403 的問題，今天又遇到了 http 500 的問題。&lt;br&gt;同事說，同一個資料，User A 連就 Ok, Us
      
    
    </summary>
    
    
      <category term="http" scheme="https://rainmakerho.github.io/tags/http/"/>
    
      <category term="500" scheme="https://rainmakerho.github.io/tags/500/"/>
    
      <category term="內部伺服器錯誤" scheme="https://rainmakerho.github.io/tags/%E5%85%A7%E9%83%A8%E4%BC%BA%E6%9C%8D%E5%99%A8%E9%8C%AF%E8%AA%A4/"/>
    
  </entry>
  
  <entry>
    <title>Microsoft Botframework + Adaptive Cards 快速打造 Chatbot</title>
    <link href="https://rainmakerho.github.io/2018/08/02/2018030/"/>
    <id>https://rainmakerho.github.io/2018/08/02/2018030/</id>
    <published>2018-08-02T09:55:13.000Z</published>
    <updated>2018-08-21T10:30:51.941Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>今年的 Chatbot 很火紅，不知大家都用什麼來開發 Chatbot 呢?<br>筆者使用的是 Microsoft Botframework 來開發，它提供了很多語言的 SDK，讓我們可以快速的開發出 Chatbot。<br>最近開發 Vitals ESP (KM) Chatbot，一開始規劃好畫面及流程後，很快就開發完成了。<br>接下來就跟大家分享開發的過程 :)</p><h3 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h3><p>Vitals ESP 是 KM 系統，希望 KM Chatbot 可以方便讓人查詢，在手機上畫面不大，所以需要分頁。如果有人 Mention 到你的話，也可以發通知到 Chatbot 上，讓你可以快速地回覆。<br>所以需求主要有 2 個，</p><h4 id="1-使用者在輸入框輸入文字，立即依關鍵字查詢，並顯示出查詢結果-分頁-，使用者可以按上一頁、下一頁去瀏覽，並可按文章串到系統去。"><a href="#1-使用者在輸入框輸入文字，立即依關鍵字查詢，並顯示出查詢結果-分頁-，使用者可以按上一頁、下一頁去瀏覽，並可按文章串到系統去。" class="headerlink" title="1.使用者在輸入框輸入文字，立即依關鍵字查詢，並顯示出查詢結果(分頁)，使用者可以按上一頁、下一頁去瀏覽，並可按文章串到系統去。"></a>1.使用者在輸入框輸入文字，立即依關鍵字查詢，並顯示出查詢結果(分頁)，使用者可以按上一頁、下一頁去瀏覽，並可按文章串到系統去。</h4><p>下圖為使用者在輸入框輸入「關鍵字」去查詢，並顯示出查詢結果<br><img src="/2018/08/02/2018030/001.png" title="[輸入關鍵字查詢]"></p><p>下圖為使用者按「下一頁」，系統切到第 2 頁<br><img src="/2018/08/02/2018030/002.png" title="[顯示第2頁]"></p><h4 id="2-當其他人在文章中有-Mention-到使用者時，使用者可以立馬收到別人在-Cue-你的內容。"><a href="#2-當其他人在文章中有-Mention-到使用者時，使用者可以立馬收到別人在-Cue-你的內容。" class="headerlink" title="2.當其他人在文章中有 Mention 到使用者時，使用者可以立馬收到別人在 Cue 你的內容。"></a>2.當其他人在文章中有 Mention 到使用者時，使用者可以立馬收到別人在 Cue 你的內容。</h4><p>下圖為當 KM 系統收到有人在 Cue 使用者時，除了 Mail 通知外，現在會再通知 IM ，讓使用者可以立馬可以知道<br><img src="/2018/08/02/2018030/003.png" title="[及時通知]"></p><p>下圖為使用者收到被 Cue 的內容後，可以針對該內容進行回覆<br><img src="/2018/08/02/2018030/004.png" title="[立即回覆文章]"></p><h3 id="實作"><a href="#實作" class="headerlink" title="實作"></a>實作</h3><h4 id="1-定義-Actions"><a href="#1-定義-Actions" class="headerlink" title="1.定義 Actions"></a>1.定義 Actions</h4><p>從需求來看，可以將目前行為規劃為 2 個 Action ，一個是 Keyword Search ，另一個是 Mention 回覆。<br>當使用者從輸入框輸入文字的查詢，它的查詢頁為第 1 頁，卡片中的上、下頁，則依 Acton 中的頁碼來決定。<br>Mention 回覆則需要記錄要要回覆的文章相關資訊及回覆的內容。<br>所以以下就建立這 2 個 Action 的類別，如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> KMActionType</span><br><span class="line">&#123;</span><br><span class="line">none = <span class="number">0</span>,</span><br><span class="line">SearchKeyword,</span><br><span class="line">ReplyDoc</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">[<span class="meta">JsonConverter(typeof(KMActionConverter))</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">KMAction</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span> KMActionType Action &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//查詢 Keyword 的 Action</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">KMSearchAction</span> : <span class="title">KMAction</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">KMSearchAction</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Action = KMActionType.SearchKeyword;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">string</span> Keyword &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">int</span> PageIndex &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//回覆 Mention 的 Action</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">KMReplyMentionAction</span> : <span class="title">KMAction</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">KMReplyMentionAction</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Action = KMActionType.ReplyDoc;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//這個是讓 User 輸入的內容，會對應到 TextInput 的 Id</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">string</span> ReplyContent &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//這個是要回覆所需要的資訊</span></span><br><span class="line"><span class="keyword">public</span> KMPost PostInfo &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//回覆所需要的資訊物件</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">KMPost</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">string</span> ParentId &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125; <span class="comment">//這裡指的是 Document Id</span></span><br><span class="line"><span class="comment">// .....</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span>/https://blog.mbwarez.dk/deserializing-different-types-based-on-properties-with-newtonsoft-json/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">KMActionConverter</span> : <span class="title">JsonConverter</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 依 KMActionType 來決定要轉回什麼物件</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="reader"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="objectType"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="existingValue"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="serializer"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">object</span> <span class="title">ReadJson</span>(<span class="params">JsonReader reader, Type objectType, <span class="keyword">object</span> existingValue, JsonSerializer serializer</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">var</span> jObject = JToken.ReadFrom(reader);</span><br><span class="line">KMActionType type = jObject[<span class="string">"Action"</span>].ToObject&lt;KMActionType&gt;();</span><br><span class="line"></span><br><span class="line">KMAction result = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">switch</span> (type)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> KMActionType.SearchKeyword:</span><br><span class="line">result = <span class="keyword">new</span> KMSearchAction();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> KMActionType.ReplyDoc:</span><br><span class="line">result = <span class="keyword">new</span> KMReplyMentionAction();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> ArgumentOutOfRangeException();</span><br><span class="line">&#125;</span><br><span class="line">serializer.Populate(jObject.CreateReader(), result);</span><br><span class="line"><span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">WriteJson</span>(<span class="params">JsonWriter writer, <span class="keyword">object</span> <span class="keyword">value</span>, JsonSerializer serializer</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> NotImplementedException();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">bool</span> <span class="title">CanConvert</span>(<span class="params">Type objectType</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// Not needed, as we register our converter directly on Vehicle</span></span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> NotImplementedException();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//只做Read，不做Write</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">bool</span> CanWrite =&gt; <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>從上面可以發現我們定義了 2 個 Action ，分別為 KMSearchAction 及 KMReplyMentionAction ，它們都繼承自 KMAction 。<br>而設定 KMActionConverter 可以讓我們依 KMActionType 來分別 Deserialize 到對應的物件 ，如下的程式，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//會依 KMActionType 來分別轉成對應的物件 (KMSearchAction or KMReplyMentionAction )</span></span><br><span class="line">messageAction = JsonConvert.DeserializeObject&lt;KMAction&gt;(dataValue);</span><br></pre></td></tr></table></figure><p>當使用者按 上、下頁時，透過 JsonConvert.DeserializeObject<kmaction> 時，實際上會轉換成 KMSearchAction 類別，<br><img src="/2018/08/02/2018030/006.png" title="[查詢的 KMSearchAction]"></kmaction></p><p>當使用者在回覆卡片上按下送出時，透過 JsonConvert.DeserializeObject<kmaction> 時，實際上會轉換成 KMReplyMentionAction 類別，<br><img src="/2018/08/02/2018030/007.png" title="[回覆文章的 KMReplyMentionAction]"></kmaction></p><ul><li>註:詳細可參考 <a href="https://blog.mbwarez.dk/deserializing-different-types-based-on-properties-with-newtonsoft-json/" target="_blank" rel="noopener">Deserializing different types based on properties, with Newtonsoft.Json</a></li></ul><h4 id="2-建立查詢結果及-Mention-回覆的-Adaptive-Cards"><a href="#2-建立查詢結果及-Mention-回覆的-Adaptive-Cards" class="headerlink" title="2.建立查詢結果及 Mention 回覆的 Adaptive Cards"></a>2.建立查詢結果及 Mention 回覆的 Adaptive Cards</h4><p>使用 Adaptive Cards 時，需要從 Nuget 中安裝 AdaptiveCards 套件，如下，<br><img src="/2018/08/02/2018030/005.png" title="[AdaptiveCards 套件]"></p><p>AdaptiveSubmitAction 物件有一個 DataJson 的屬性，是可以讓我們放入物件的 JSON 字串 。<br>所以在建立畫面這些 Button 時，就可以建立 Action 物件後，將它們的 JSON 放到 DataJson 屬性中 。<br>當使用者按下 Button 時，它的值就會在 MessageActivity 的 Value 屬性之中 。<br>所以在 RootDialog 中，我們就可以用這個屬性值來區分是按下 Button 進來的，還是使用者從輸入框輸入字串進來的，如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">public class RootDialog : IDialog&lt;object&gt;</span><br><span class="line">&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task <span class="title">StartAsync</span>(<span class="params">IDialogContext context</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">context.Wait(MessageReceivedAsync);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">async</span> Task <span class="title">MessageReceivedAsync</span>(<span class="params">IDialogContext context, IAwaitable&lt;IMessageActivity&gt; result</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">var</span> message = <span class="keyword">await</span> result;</span><br><span class="line"><span class="keyword">var</span> searchKeyword = message.Text;</span><br><span class="line">KMAction messageAction = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">var</span> dataValue = message.Value?.ToString();</span><br><span class="line"><span class="comment">//如果 value 有值，就是按 action 進來的</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">string</span>.IsNullOrWhiteSpace(dataValue))</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//button 進來的</span></span><br><span class="line"><span class="comment">//會透過 KMActionConverter 來自動轉換</span></span><br><span class="line">messageAction = JsonConvert.DeserializeObject&lt;KMAction&gt;(dataValue);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//從輸入框進來的 Keyword，所以是在第一頁(base 0)</span></span><br><span class="line"><span class="keyword">var</span> pageIndex = <span class="number">0</span>;</span><br><span class="line">messageAction = <span class="keyword">new</span> KMSearchAction</span><br><span class="line">&#123;</span><br><span class="line">Action = KMActionType.SearchKeyword,</span><br><span class="line">Keyword = searchKeyword,</span><br><span class="line">PageIndex = pageIndex</span><br><span class="line">&#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> kmUser = GetKMUser(message);</span><br><span class="line"><span class="comment">//依不同的 Action 來產生對應的處理 Class</span></span><br><span class="line"><span class="keyword">var</span> actionStrategy = ActionStrategyResolver.ResolveActionStrategy(messageAction.Action);</span><br><span class="line"><span class="keyword">await</span> actionStrategy.DoAction(context, kmUser, messageAction);</span><br><span class="line">context.Done(<span class="string">""</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 取得使用者的 UserName</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="userToBotMessage"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> KMUser <span class="title">GetKMUser</span>(<span class="params">IMessageActivity userToBotMessage</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">var</span> loginId = <span class="keyword">new</span> KMUser(userToBotMessage.From.Id);</span><br><span class="line"><span class="keyword">return</span> loginId;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>筆者建立執行 Action 的 IActionStrategy interface，然後將 Keywrod Search 與 回覆 Mention 分別放到不同的類別之中，並實作 IActionStrategy 。<br>然後再透過 KMActionType 來決定要生成那個類別，最後執行 DoAction 就可以了 。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 定義 Action 共通的 interface</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title">IActionStrategy</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="function">Task <span class="title">DoAction</span>(<span class="params">IDialogContext context, KMUser user, KMAction action</span>)</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ActionStrategyResolver</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 依不同的 Type 決定要用那個 Class</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="type"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> IActionStrategy <span class="title">ResolveActionStrategy</span>(<span class="params">KMActionType type</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">IActionStrategy result = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">switch</span> (type)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> KMActionType.SearchKeyword:</span><br><span class="line">result = <span class="keyword">new</span> SearchKeywordActionStrategy();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> KMActionType.ReplyDoc:</span><br><span class="line">result = <span class="keyword">new</span> ReplyMentionActionStrategy();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> ArgumentOutOfRangeException();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在 SearchKeywordActionStrategy Class 中，依 KMSearchAction 的內容，來建立查詢結果的 Adaptive Card</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 專門處理 KM Keyword Search</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">SearchKeywordActionStrategy</span> : <span class="title">IActionStrategy</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 處理Search Keyword動作</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="context"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="userName"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="messageAction"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task <span class="title">DoAction</span>(<span class="params">IDialogContext context, KMUser kmUser, KMAction messageAction</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">var</span> action = messageAction <span class="keyword">as</span> KMSearchAction;</span><br><span class="line"></span><br><span class="line"><span class="comment">//先做 Action 前的驗證</span></span><br><span class="line"><span class="comment">//1.必需要2個字(以上)</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> lowestLength = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">string</span>.IsNullOrWhiteSpace(action.Keyword) || action.Keyword.Length &lt; lowestLength)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> BotException(<span class="string">$"查詢文字請至少<span class="subst">&#123;lowestLength&#125;</span>個字元，謝謝您!"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> attachment = <span class="keyword">await</span> BuildSearchResultCard(kmUser.LoginId, action);</span><br><span class="line"><span class="keyword">if</span> (attachment == <span class="literal">null</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//查不到</span></span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> BotException(<span class="string">$"查不到任到資料，請重新查詢..."</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> replyMessage = context.MakeMessage();</span><br><span class="line">replyMessage.Attachments.Add(attachment);</span><br><span class="line"><span class="keyword">await</span> context.PostAsync(replyMessage);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 依使用者及Action 建立 Search結果的卡片</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="userId"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="action"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">async</span> Task&lt;Attachment&gt; <span class="title">BuildSearchResultCard</span>(<span class="params"><span class="keyword">string</span> userId, KMSearchAction action</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">var</span> pageIndex = action.PageIndex;</span><br><span class="line"><span class="keyword">var</span> searchKeyword = action.Keyword;</span><br><span class="line"><span class="comment">//同時取回 文章及總筆數</span></span><br><span class="line"><span class="keyword">var</span> searchResult = SearchKM(searchKeyword, pageIndex);</span><br><span class="line"><span class="keyword">var</span> searchCount = searchResult.Item2;</span><br><span class="line"><span class="comment">//沒任何資料</span></span><br><span class="line"><span class="keyword">if</span> (searchCount == <span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> card = <span class="keyword">new</span> AdaptiveCard();</span><br><span class="line">card.Body.Add(<span class="keyword">new</span> AdaptiveTextBlock()</span><br><span class="line">&#123;</span><br><span class="line">Text = <span class="string">$"查詢「<span class="subst">&#123;searchKeyword&#125;</span>」共 <span class="subst">&#123;searchCount&#125;</span> 筆，"</span>,</span><br><span class="line">Weight = AdaptiveTextWeight.Bolder</span><br><span class="line">&#125;);</span><br><span class="line">card.Body.Add(<span class="keyword">new</span> AdaptiveTextBlock()</span><br><span class="line">&#123;</span><br><span class="line">Text = VitalsESPHelper.GetRangeString(pageIndex, searchCount),</span><br><span class="line">Weight = AdaptiveTextWeight.Bolder</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//內容</span></span><br><span class="line"><span class="keyword">foreach</span> (<span class="keyword">var</span> doc <span class="keyword">in</span> searchResult.Item1)</span><br><span class="line">&#123;</span><br><span class="line">card.Body.Add(<span class="keyword">new</span> AdaptiveTextBlock()</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//markdown link</span></span><br><span class="line">Text = <span class="string">$"[<span class="subst">&#123;doc.Title&#125;</span>](<span class="subst">&#123;doc.Url&#125;</span>)"</span>,</span><br><span class="line">Weight = AdaptiveTextWeight.Bolder</span><br><span class="line">&#125;);</span><br><span class="line">card.Body.Add(<span class="keyword">new</span> AdaptiveTextBlock()</span><br><span class="line">&#123;</span><br><span class="line">Text = <span class="string">$"...子資訊..."</span>,</span><br><span class="line">IsSubtle = <span class="literal">true</span></span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//產生上、下一頁</span></span><br><span class="line"><span class="keyword">var</span> pageSize = <span class="number">5</span>;</span><br><span class="line"><span class="keyword">var</span> totalPage = (searchCount + pageSize - <span class="number">1</span>) / pageSize;</span><br><span class="line"><span class="keyword">if</span> (pageIndex &gt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//上一頁</span></span><br><span class="line"><span class="keyword">var</span> actionPageIndex = pageIndex - <span class="number">1</span>;</span><br><span class="line"><span class="keyword">var</span> preAction = <span class="keyword">new</span> KMSearchAction</span><br><span class="line">&#123;</span><br><span class="line">Action = KMActionType.SearchKeyword,</span><br><span class="line">Keyword = searchKeyword,</span><br><span class="line">PageIndex = actionPageIndex</span><br><span class="line">&#125;;</span><br><span class="line">card.Actions.Add(<span class="keyword">new</span> AdaptiveSubmitAction()</span><br><span class="line">&#123;</span><br><span class="line">Title = <span class="string">"上一頁"</span>,</span><br><span class="line">Data = <span class="string">$""</span>,</span><br><span class="line">DataJson = JsonConvert.SerializeObject(preAction)</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ((pageIndex + <span class="number">1</span>) &lt; totalPage)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//下一頁</span></span><br><span class="line"><span class="keyword">var</span> actionPageIndex = pageIndex + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">var</span> nextAction = <span class="keyword">new</span> KMSearchAction</span><br><span class="line">&#123;</span><br><span class="line">Action = KMActionType.SearchKeyword,</span><br><span class="line">Keyword = searchKeyword,</span><br><span class="line">PageIndex = actionPageIndex</span><br><span class="line">&#125;;</span><br><span class="line">card.Actions.Add(<span class="keyword">new</span> AdaptiveSubmitAction()</span><br><span class="line">&#123;</span><br><span class="line">Title = <span class="string">"下一頁"</span>,</span><br><span class="line">Data = <span class="string">$""</span>,</span><br><span class="line">DataJson = JsonConvert.SerializeObject(nextAction)</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> attachment = <span class="keyword">new</span> Attachment()</span><br><span class="line">&#123;</span><br><span class="line">ContentType = AdaptiveCard.ContentType,</span><br><span class="line">Content = card</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">return</span> attachment;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//依 keyword 去Search，取回查詢結果</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">async</span> Task&lt;Tuple&lt;List&lt;KMDocument&gt;, <span class="keyword">int</span>&gt;&gt; SearchKM(<span class="keyword">string</span> keyword, <span class="keyword">int</span> pageIndex)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">var</span> searchCount = search 總筆數;</span><br><span class="line"><span class="keyword">var</span> kmDocs = search 總文件;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> Tuple&lt;List&lt;KMDocument&gt;, <span class="keyword">int</span>&gt;(kmDocs, searchCount);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面建立 <a href="https://adaptivecards.io/" target="_blank" rel="noopener">Adaptive Cards</a> ，我是透過 Card Elements 一個一個來加入 。<br>您也可以到 <a href="https://acdesignerbeta.azurewebsites.net/" target="_blank" rel="noopener">Adaptive Cards Designer</a> 設計好之後，將 json 存檔後，透過 <a href="https://docs.microsoft.com/en-us/adaptive-cards/sdk/authoring-cards/net#example-parse-an-adaptivecard-from-json" target="_blank" rel="noopener">AdaptiveCard.FromJson</a>將它們匯進來哦!</p><p>建立 Mention 回覆的 Adaptive Cards ，是在另一個 Controller 在收到通知後，就建立它。<br>主要部份是建立 KMReplyMentionAction Class 一樣給 AdaptiveSubmitAction 的 DataJson 屬性，而 AdaptiveTextInput 的 Id 值要跟 KMReplyMentionAction Class 中的屬性值相同，只是 KMReplyMentionAction 是 PascalCase ，AdaptiveTextInput 的 Id 值是 CamelCase ，如下,</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">async</span> Task&lt;Attachment&gt; <span class="title">BuildMentionCard</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//顯示 mention reply card</span></span><br><span class="line"><span class="keyword">var</span> card = <span class="keyword">new</span> AdaptiveCard();</span><br><span class="line"><span class="comment">// Body content</span></span><br><span class="line">card.Body.Add(<span class="keyword">new</span> AdaptiveTextBlock()</span><br><span class="line">&#123;</span><br><span class="line">Text = <span class="string">$"誰誰誰在一篇文件(那篇文章)中提到你"</span>,</span><br><span class="line">Weight = AdaptiveTextWeight.Bolder,</span><br><span class="line">Wrap = <span class="literal">true</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//mention 內容</span></span><br><span class="line">card.Body.Add(<span class="keyword">new</span> AdaptiveTextBlock()</span><br><span class="line">&#123;</span><br><span class="line">Text = <span class="string">$"...文章內容..."</span>,</span><br><span class="line">IsSubtle = <span class="literal">true</span>,</span><br><span class="line">Wrap = <span class="literal">true</span>,</span><br><span class="line">Separator = <span class="literal">true</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//reply</span></span><br><span class="line">card.Body.Add(<span class="keyword">new</span> AdaptiveTextInput()</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//id要跟 KMReplyMentionAction 中的 ReplyContent 屬性一樣</span></span><br><span class="line">Id = <span class="string">"replyContent"</span>,</span><br><span class="line">IsMultiline = <span class="literal">true</span>,</span><br><span class="line">Placeholder = <span class="string">$"訊息請回覆於此"</span>,</span><br><span class="line"><span class="comment">// IsRequired = true (未來才會實作)</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> post = 從km取得要回覆的相關資訊;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> replyAction = <span class="keyword">new</span> KMReplyMentionAction</span><br><span class="line">&#123;</span><br><span class="line">Action = KMActionType.ReplyDoc,</span><br><span class="line">PostInfo = post</span><br><span class="line">&#125;;</span><br><span class="line">card.Actions.Add(<span class="keyword">new</span> AdaptiveSubmitAction()</span><br><span class="line">&#123;</span><br><span class="line">Title = <span class="string">"送出"</span>,</span><br><span class="line">DataJson = JsonConvert.SerializeObject(replyAction)</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> attachment = <span class="keyword">new</span> Attachment()</span><br><span class="line">&#123;</span><br><span class="line">ContentType = AdaptiveCard.ContentType,</span><br><span class="line">Content = card</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">return</span> attachment;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>處理使用者回覆的 ReplyMentionActionStrategy Class ，只要呼叫 KM API 檢查狀態 OK ，就可以了，如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ReplyMentionActionStrategy</span> : <span class="title">IActionStrategy</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 處理快速回覆的Action</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="context"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="kmUser"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="messageAction"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task <span class="title">DoAction</span>(<span class="params">IDialogContext context, KMUser kmUser, KMAction messageAction</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">var</span> action = messageAction <span class="keyword">as</span> KMReplyMentionAction;</span><br><span class="line"><span class="keyword">var</span> replyMessage = context.MakeMessage();</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">string</span>.IsNullOrWhiteSpace(action.ReplyContent))</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//將內容reply進去</span></span><br><span class="line"><span class="keyword">var</span> postResult = <span class="keyword">await</span> 呼叫KMAPI;</span><br><span class="line">replyMessage.Text = <span class="string">$"回覆完成!"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> BotException(<span class="string">$"您回覆的內容為「空白」，無法回覆!"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">await</span> context.PostAsync(replyMessage);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>而在上面有些檢查筆者是 throw BotException，然後透過 <a href="https://rainmakerho.github.io/2018/02/13/2018008/">Bot Framework Custom Error Messages and Exception Handling</a> 來將訊息顯示給使用者，如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">BotException</span> : <span class="title">Exception</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">BotException</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">BotException</span>(<span class="params"><span class="keyword">string</span> message</span>) : <span class="title">base</span>(<span class="params">message</span>)</span></span><br><span class="line"><span class="function"></span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">BotException</span>(<span class="params"><span class="keyword">string</span> message, Exception inner</span>) : <span class="title">base</span>(<span class="params">message, inner</span>)</span></span><br><span class="line"><span class="function"></span>&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PostUnhandledExceptionToUserOverrideTask</span> : <span class="title">IPostToBot</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">readonly</span> ResourceManager resources;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">readonly</span> IPostToBot inner;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">readonly</span> IBotToUser botToUser;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">readonly</span> TraceListener trace;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">PostUnhandledExceptionToUserOverrideTask</span>(<span class="params">IPostToBot inner, IBotToUser botToUser, ResourceManager resources, TraceListener trace</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">SetField.NotNull(<span class="keyword">out</span> <span class="keyword">this</span>.inner, <span class="keyword">nameof</span>(inner), inner);</span><br><span class="line">SetField.NotNull(<span class="keyword">out</span> <span class="keyword">this</span>.botToUser, <span class="keyword">nameof</span>(botToUser), botToUser);</span><br><span class="line">SetField.NotNull(<span class="keyword">out</span> <span class="keyword">this</span>.resources, <span class="keyword">nameof</span>(resources), resources);</span><br><span class="line">SetField.NotNull(<span class="keyword">out</span> <span class="keyword">this</span>.trace, <span class="keyword">nameof</span>(trace), trace);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task <span class="title">PostAsync</span>(<span class="params">IActivity activity, CancellationToken token</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">await</span> inner.PostAsync(activity, token);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> (Exception ex)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//顯示 Message 給使用者看</span></span><br><span class="line"><span class="keyword">await</span> botToUser.PostAsync(ex.Message, cancellationToken: token);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> (Exception inner)</span><br><span class="line">&#123;</span><br><span class="line">trace.WriteLine(inner);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">throw</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下圖是系統收到 Exception 後，透過客製的錯誤處理將訊息傳送給使用者，<br><img src="/2018/08/02/2018030/008.png" title="[BotException]"></p><ul><li>註:在 Application_Start 那記得要跟 Autofac 註冊 PostUnhandledExceptionToUserOverrideTask 哦!</li></ul><h3 id="結論"><a href="#結論" class="headerlink" title="結論"></a>結論</h3><p>從上面的分享中，可以透過自定的 JsonConverter (KMActionConverter)，在 JsonConvert.DeserializeObject 時，取回正確的物件，再交給對應的 Strategy 類別來處理。<br>所以只要規劃好流程腳本，再透過 <a href="https://dev.botframework.com/" target="_blank" rel="noopener">Microsoft Bot Framework</a>，就可以讓我們快速開發出 Chatbot, 而 <a href="https://adaptivecards.io/" target="_blank" rel="noopener">Adaptive Cards</a> 則讓我們可以在 Chatbot 中建構出完整的 UI ，透過 <a href="https://adaptivecards.io/explorer/Action.Submit.html" target="_blank" rel="noopener">Action.Submit</a> 將 UI 轉化成需要的 Model 大大簡化開發的複雜度。<br>未來如果再加一個 Action 的話，只要擴充 KMActionType 及對應的 Action 及 ActionStrategy 就可以了哦。</p><ul><li><p>註 1: 目前 <a href="https://adaptivecards.io/" target="_blank" rel="noopener">Adaptive Cards</a> 的 Action 只能放在最下面，未來版本應該可以放在 Card 的中間，可以到 <a href="https://acdesignerbeta.azurewebsites.net/" target="_blank" rel="noopener">Adaptive Cards Designer</a> 設計看看哦~</p></li><li><p>註 2: 上述範例中，因為有使用 Makedown 的 link ，所以如果用 webchat 測試的話，請加入以下的 script 哦!</p></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">"https://cdnjs.cloudflare.com/ajax/libs/markdown-it/8.4.2/markdown-it.js"</span> /&gt;</span><br></pre></td></tr></table></figure><ul><li>註 3:有時想要讓使用者知道 Chatbot 有收到它的輸入，可以在 MessagesController 的 Post Method 中一收到訊息時，就先回個 Typing 的訊息給使用者，如下，</li></ul><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//先發送 typing 的 message</span></span><br><span class="line"><span class="keyword">var</span> connector = <span class="keyword">new</span> GssConnectorClient(<span class="keyword">new</span> Uri(activity.ServiceUrl));</span><br><span class="line"><span class="keyword">var</span> isTypingReply = activity.CreateReply();</span><br><span class="line">isTypingReply.Type = ActivityTypes.Typing;</span><br><span class="line"><span class="keyword">await</span> connector.Conversations.ReplyToActivityAsync(isTypingReply);</span><br></pre></td></tr></table></figure><h3 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h3><p><a href="http://adaptivecards.io/explorer/" target="_blank" rel="noopener">Schema Explorer</a><br><a href="https://acdesignerbeta.azurewebsites.net/" target="_blank" rel="noopener">Adaptive Cards Designer</a><br><a href="https://blog.mbwarez.dk/deserializing-different-types-based-on-properties-with-newtonsoft-json/" target="_blank" rel="noopener">Deserializing different types based on properties, with Newtonsoft.Json</a><br><a href="https://rainmakerho.github.io/2018/02/13/2018008/">Bot Framework Custom Error Messages and Exception Handling</a><br><a href="https://github.com/rainmakerho/WebChatCustomization" target="_blank" rel="noopener">BotFramework-WebChat Customization</a><br><a href="http://www.garypretty.co.uk/2016/07/18/bot-framework-typing-activity-let-users-know-your-bot-is-responding/" target="_blank" rel="noopener">Bot Framework Typing Activity – Let users know your bot is responding (and know when they are too)</a><br><a href="https://blog.gss.com.tw/index.php/2018/05/11/microsoftbotframeworkwebchat/" target="_blank" rel="noopener">Customize Web Chat for your websites - 亂馬客</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;今年的 Chatbot 很火紅，不知大家都用什麼來開發 Chatbot 呢?&lt;br&gt;筆者使用的是 Microsoft Botframewor
      
    
    </summary>
    
    
      <category term="chatbot" scheme="https://rainmakerho.github.io/tags/chatbot/"/>
    
      <category term="botframework" scheme="https://rainmakerho.github.io/tags/botframework/"/>
    
      <category term="Adaptive Cards" scheme="https://rainmakerho.github.io/tags/Adaptive-Cards/"/>
    
      <category term="Microsoft Botframework" scheme="https://rainmakerho.github.io/tags/Microsoft-Botframework/"/>
    
      <category term="Customize Web Chat for your websites" scheme="https://rainmakerho.github.io/tags/Customize-Web-Chat-for-your-websites/"/>
    
  </entry>
  
  <entry>
    <title>IIS 403 - 禁止: 拒絕存取 跟 403.4 - Forbidden 問題</title>
    <link href="https://rainmakerho.github.io/2018/08/02/2018029/"/>
    <id>https://rainmakerho.github.io/2018/08/02/2018029/</id>
    <published>2018-08-02T08:41:33.000Z</published>
    <updated>2018-08-02T09:19:35.912Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>最近同事在裝機時，從 Client 端 Browser 去開系統時，發現圖檔都沒有顯示出來。<br>將圖檔的 url 貼到 browser 網址列上來看，結果出現「403 - 禁止: 拒絕存取」。如下圖所示，<br><img src="/2018/08/02/2018029/001.png" title="[403 - 禁止: 拒絕存取]"></p><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>看起來似乎是權限不足，於是開啟檔案總管，將 IUser , Network Service 等帳號都加進去。 再看，還是 403 。天呀 ~~~ 怎麼回事呢?</p><p>今天另一位同事在 Server 上開 Browser 去試，結果出現的錯誤一樣是 403 ，但多了一個 .4 。<br>下面還寫著一行「<strong>您嘗試存取的網頁受到安全通訊端層(SSL)的保護</strong>」。 如下，<br><img src="/2018/08/02/2018029/002.png" title="[403.4 - Forbidden]"><br>查看 IIS 的設定，果然勾選了 「需要 SSL」 ，如下，<br><img src="/2018/08/02/2018029/003.png" title="[SSL 設定]"><br>結果改走 https 就好了。<br>所以如果出 403 的話，除了權限外，也請 Check 一下 SSL 的部份。<br>或是在 Server 上測試，這樣如果有錯誤的話，訊息會比較多一些。才不會浪費許多時間。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;最近同事在裝機時，從 Client 端 Browser 去開系統時，發現圖檔都沒有顯示出來。&lt;br&gt;將圖檔的 url 貼到 browser 
      
    
    </summary>
    
    
      <category term="iis" scheme="https://rainmakerho.github.io/tags/iis/"/>
    
      <category term="403" scheme="https://rainmakerho.github.io/tags/403/"/>
    
      <category term="403.4" scheme="https://rainmakerho.github.io/tags/403-4/"/>
    
      <category term="403 - 禁止: 拒絕存取" scheme="https://rainmakerho.github.io/tags/403-%E7%A6%81%E6%AD%A2-%E6%8B%92%E7%B5%95%E5%AD%98%E5%8F%96/"/>
    
      <category term="403.4 - Forbidden" scheme="https://rainmakerho.github.io/tags/403-4-Forbidden/"/>
    
  </entry>
  
  <entry>
    <title>RxJS 學習之旅 ~ Html DOM 操作</title>
    <link href="https://rainmakerho.github.io/2018/08/01/2018028/"/>
    <id>https://rainmakerho.github.io/2018/08/01/2018028/</id>
    <published>2018-08-01T09:41:36.000Z</published>
    <updated>2018-08-02T02:08:52.304Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>在前篇<a href="https://rainmakerho.github.io/2018/07/26/2018027/">RxJS 學習之旅 ~ 環境設定</a>設定好之後，就可以開始來練習使用 RxJS 常常會舉到的例子，透過 Mouse 在 Canvas 上畫圖。<br>如果直接寫程式的話，大約會設定一個 isMouseDown 的變數，然後在 mousedown event 中設定它為 true, 而在 mouseup event 中，設定它為 false，而在 mousemove event 中，如果 isMouseDown 為 true ，就把線畫到那上面去。<br>如果透過 RxJS 要如何做呢?</p><h3 id="實作"><a href="#實作" class="headerlink" title="實作"></a>實作</h3><p>首先，修改 index.html ，加入 canvas 做為我們的畫布 ，如下</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>RxJS Demo<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>RxJS Demo<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">"canvas"</span> <span class="attr">width</span>=<span class="string">"500"</span> <span class="attr">height</span>=<span class="string">"500"</span> <span class="attr">style</span>=<span class="string">"border:1px solid #000000;"</span>&gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"/bundle.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然後我們就可以透過 RxJS 來觀察 mouse 的 event ，然後將線畫出來。<br>mouse down (移動點) -&gt; mouse move (畫線) -&gt; mouse up (停止畫線)<br>因為畫線只需要 x, y ，所以我們將 MouseEvent 轉成 x, y 比較方便。</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; fromEvent, merge &#125; <span class="keyword">from</span> <span class="string">'rxjs'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; map, concatMap, takeUntil, tap &#125; <span class="keyword">from</span> <span class="string">'rxjs/operators'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> canvas = &lt;HTMLCanvasElement&gt;<span class="built_in">document</span>.getElementById(<span class="string">'canvas'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> rect = canvas.getBoundingClientRect();</span><br><span class="line"><span class="keyword">const</span> ctx = canvas.getContext(<span class="string">'2d'</span>);</span><br><span class="line"></span><br><span class="line">ctx.beginPath(); <span class="comment">// 開始畫畫</span></span><br><span class="line"><span class="keyword">var</span> draw = <span class="function"><span class="keyword">function</span>(<span class="params">to: <span class="built_in">any</span></span>) </span>&#123;</span><br><span class="line">ctx.lineTo(to.x, to.y);</span><br><span class="line">ctx.stroke();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> mouseEventToCoordinate = <span class="function">(<span class="params">mouseEvent: <span class="built_in">any</span></span>) =&gt;</span> &#123;</span><br><span class="line">mouseEvent.preventDefault();</span><br><span class="line"><span class="keyword">return</span> &#123;</span><br><span class="line">x: mouseEvent.clientX - rect.left,</span><br><span class="line">y: mouseEvent.clientY - rect.top</span><br><span class="line">&#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> mouseDowns = fromEvent(canvas, <span class="string">'mousedown'</span>).pipe(</span><br><span class="line">map(mouseEventToCoordinate)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">const</span> mouseMoves = fromEvent(canvas, <span class="string">'mousemove'</span>).pipe(</span><br><span class="line">map(mouseEventToCoordinate)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">const</span> mouseUps = fromEvent(<span class="built_in">window</span>, <span class="string">'mouseup'</span>).pipe(</span><br><span class="line">map(<span class="function"><span class="params">e</span> =&gt;</span> &#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'mouseup'</span>);</span><br><span class="line"><span class="keyword">return</span> mouseEventToCoordinate(e);</span><br><span class="line">&#125;)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">//mouse down (移動點) -&gt; mouse move (畫線) -&gt; mouse up (停止畫線)</span></span><br><span class="line"><span class="keyword">const</span> mouseDraw = mouseDowns.pipe(</span><br><span class="line">tap(<span class="function"><span class="params">p</span> =&gt;</span> &#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'mouseDowns'</span>);</span><br><span class="line">ctx.moveTo(p.x, p.y);</span><br><span class="line">&#125;),</span><br><span class="line">concatMap(<span class="function"><span class="params">p</span> =&gt;</span> mouseMoves.pipe(takeUntil(mouseUps)))</span><br><span class="line">);</span><br><span class="line"><span class="comment">//將線畫出來</span></span><br><span class="line">mouseDraw.subscribe(<span class="function"><span class="params">p</span> =&gt;</span> draw(p));</span><br></pre></td></tr></table></figure><p>結果如下，<br><img src="/2018/08/01/2018028/001.png" title="[Mouse Draw]"></p><p>除了 mouse 外，我們還有 touch event ，所以 touch 也是一樣可以做這樣子的處理哦!</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> touchEventToCoordinate = <span class="function">(<span class="params">touchEvent: <span class="built_in">any</span></span>) =&gt;</span> &#123;</span><br><span class="line">touchEvent.preventDefault();</span><br><span class="line"><span class="keyword">return</span> &#123;</span><br><span class="line">x: touchEvent.changedTouches[<span class="number">0</span>].clientX - rect.left,</span><br><span class="line">y: touchEvent.changedTouches[<span class="number">0</span>].clientY - rect.top</span><br><span class="line">&#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> touchStarts = fromEvent(canvas, <span class="string">'touchstart'</span>).pipe(</span><br><span class="line">map(touchEventToCoordinate)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">const</span> touchMoves = fromEvent(canvas, <span class="string">'touchmove'</span>).pipe(</span><br><span class="line">map(touchEventToCoordinate)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">//在asus touchscreen nb is not firing</span></span><br><span class="line"><span class="keyword">const</span> touchEnds = fromEvent(<span class="built_in">window</span>, <span class="string">'touched'</span>).pipe(</span><br><span class="line">map(<span class="function"><span class="params">e</span> =&gt;</span> &#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'touched'</span>);</span><br><span class="line"><span class="keyword">return</span> touchEventToCoordinate(e);</span><br><span class="line">&#125;)</span><br><span class="line">);</span><br><span class="line"><span class="comment">//在asus touchscreen nb is not firing</span></span><br><span class="line"><span class="keyword">const</span> touchCancels = fromEvent(<span class="built_in">window</span>, <span class="string">'touchcancel '</span>).pipe(</span><br><span class="line">map(<span class="function"><span class="params">e</span> =&gt;</span> &#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'touchcancel'</span>);</span><br><span class="line"><span class="keyword">return</span> touchEventToCoordinate;</span><br><span class="line">&#125;)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> touchDraw = touchStarts.pipe(</span><br><span class="line">tap(<span class="function"><span class="params">p</span> =&gt;</span> &#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'touchStarts'</span>);</span><br><span class="line">ctx.moveTo(p.x, p.y);</span><br><span class="line">&#125;),</span><br><span class="line">concatMap(<span class="function"><span class="params">p</span> =&gt;</span> touchMoves.pipe(takeUntil(touchEnds)))</span><br><span class="line">);</span><br><span class="line"><span class="comment">//將線畫出來 touch</span></span><br><span class="line">touchDraw.subscribe(<span class="function"><span class="params">p</span> =&gt;</span> draw(p));</span><br></pre></td></tr></table></figure><p>在上面的程式中，我們將原本 MouseEvent 及 TouchEvent 的內容，透過 map 轉換成了 x, y。<br>所以我們可以透過 merge 將 mouseDowns 與 touchStarts , mouseMoves 與 touchMoves , mouseUps, touchEnds, touchCancels 組合，然後在這些組合中去畫線，如下，</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> starts = merge(mouseDowns, touchStarts);</span><br><span class="line"><span class="keyword">const</span> moves = merge(mouseMoves, touchMoves);</span><br><span class="line"><span class="keyword">const</span> ends = merge(mouseUps, touchEnds, touchCancels);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> draws = starts.pipe(</span><br><span class="line">tap(<span class="function"><span class="params">p</span> =&gt;</span> &#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'starts'</span>);</span><br><span class="line">ctx.moveTo(p.x, p.y);</span><br><span class="line">&#125;),</span><br><span class="line">concatMap(<span class="function"><span class="params">p</span> =&gt;</span> moves.pipe(takeUntil(ends)))</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">//合併mouse &amp; touch</span></span><br><span class="line">draws.subscribe(<span class="function"><span class="params">p</span> =&gt;</span> &#123;</span><br><span class="line">draw(p);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li>註: 因為 touch 事件在筆電上有可以不會被觸發，所以有可能在 touch 畫完後，mouse 一移動會一直畫線，是因為 touched 事件被沒觸發到。</li></ul><h3 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h3><p><a href="https://codepen.io/HunorMarton/post/handling-complex-mouse-and-touch-events-with-rxjs" target="_blank" rel="noopener">Handling complex mouse and touch events with RxJS</a><br><a href="https://developer.mozilla.org/zh-TW/docs/Web/API/Touch_events" target="_blank" rel="noopener">touch events may not fire at all on laptop</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;在前篇&lt;a href=&quot;https://rainmakerho.github.io/2018/07/26/2018027/&quot;&gt;RxJS 學習
      
    
    </summary>
    
    
      <category term="RxJS" scheme="https://rainmakerho.github.io/tags/RxJS/"/>
    
      <category term="DOM" scheme="https://rainmakerho.github.io/tags/DOM/"/>
    
      <category term="events" scheme="https://rainmakerho.github.io/tags/events/"/>
    
      <category term="mousedown" scheme="https://rainmakerho.github.io/tags/mousedown/"/>
    
      <category term="mousemove" scheme="https://rainmakerho.github.io/tags/mousemove/"/>
    
      <category term="mouseup" scheme="https://rainmakerho.github.io/tags/mouseup/"/>
    
      <category term="touchstart" scheme="https://rainmakerho.github.io/tags/touchstart/"/>
    
      <category term="touchmove" scheme="https://rainmakerho.github.io/tags/touchmove/"/>
    
      <category term="touched" scheme="https://rainmakerho.github.io/tags/touched/"/>
    
      <category term="darw" scheme="https://rainmakerho.github.io/tags/darw/"/>
    
  </entry>
  
  <entry>
    <title>RxJS 學習之旅 ~ 環境設定</title>
    <link href="https://rainmakerho.github.io/2018/07/26/2018027/"/>
    <id>https://rainmakerho.github.io/2018/07/26/2018027/</id>
    <published>2018-07-26T02:58:59.000Z</published>
    <updated>2018-07-26T05:29:11.703Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>在學習 RxJS 之前，我們要做環境設定，讓我們可以順利的完成我們的學習。<br>我是依 <a href="https://codingthesmartway.com/getting-started-with-rxjs-part-1-setting-up-the-development-environment-creating-observables/" target="_blank" rel="noopener">Getting Started With RxJS – Part 1: Setting Up The Development Environment &amp; Creating Observables</a> 這篇來實作。</p><h3 id="實作"><a href="#實作" class="headerlink" title="實作"></a>實作</h3><p>一開始建立測試的目錄，然後到目錄裡，透過 npm init -y 來建立 package.json，如下，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir rxjs-test</span><br><span class="line">cd rxjs-test</span><br><span class="line">npm init -y</span><br></pre></td></tr></table></figure><p>再來就是安裝需要的套件, 如下，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install rxjs core-js</span><br><span class="line">npm install webpack webpack-dev-server typescript ts-loader webpack-cli --save-dev</span><br></pre></td></tr></table></figure><p>如果我們有用到 Promise 的話，需要多加上 core-js 哦! 如果不會用到話，就可以不需要加它。</p><p>再來就是在 package.json 的 “scripts” 中加入 “start” ，讓我們可以啟動 webpack-dev-server 來測試，</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"scripts"</span>: &#123;</span><br><span class="line">    <span class="string">"start"</span>: <span class="string">"webpack-dev-server --mode development"</span></span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><p>因為打包是透過 webpack ，所以我們新增 <em>webpack.config.js</em> 來讓 webpack 執行打包作業，</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">entry: [<span class="string">'core-js/fn/promise'</span>, <span class="string">'./src/index.ts'</span>],</span><br><span class="line">devtool: <span class="string">'inline-source-map'</span>,</span><br><span class="line"><span class="built_in">module</span>: &#123;</span><br><span class="line">rules: [</span><br><span class="line">&#123;</span><br><span class="line">test: <span class="regexp">/\.tsx?$/</span>,</span><br><span class="line">use: <span class="string">'ts-loader'</span>,</span><br><span class="line">exclude: <span class="regexp">/node_modules/</span></span><br><span class="line">&#125;</span><br><span class="line">]</span><br><span class="line">&#125;,</span><br><span class="line">resolve: &#123;</span><br><span class="line">extensions: [<span class="string">'.tsx'</span>, <span class="string">'.ts'</span>, <span class="string">'.js'</span>]</span><br><span class="line">&#125;,</span><br><span class="line">output: &#123;</span><br><span class="line">filename: <span class="string">'bundle.js'</span>,</span><br><span class="line">path: path.resolve(__dirname, <span class="string">'dist'</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// webpack-dev-server is serving bundle.js from memory</span></span><br></pre></td></tr></table></figure><p>如果會用到 Promis 的話，就需要多加 <em>core-js/fn/promise</em> 。<br>因為我們是使用 TypeScript ，所以新增 <em>tsconfig.json</em> 來決定要輸出到那裡，因為 webpack 是從 dist 目錄去找，所以這裡也要設定輸出到 dist 目錄 ，如下，</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="string">"compilerOptions"</span>: &#123;</span><br><span class="line"><span class="string">"outDir"</span>: <span class="string">"./dist/"</span>,</span><br><span class="line"><span class="string">"sourceMap"</span>: <span class="literal">true</span>,</span><br><span class="line"><span class="string">"noImplicitAny"</span>: <span class="literal">true</span>,</span><br><span class="line"><span class="string">"module"</span>: <span class="string">"commonjs"</span>,</span><br><span class="line"><span class="string">"moduleResolution"</span>: <span class="string">"node"</span>,</span><br><span class="line"><span class="string">"target"</span>: <span class="string">"es5"</span>,</span><br><span class="line"><span class="string">"allowJs"</span>: <span class="literal">true</span>,</span><br><span class="line"><span class="string">"lib"</span>: [<span class="string">"es2017"</span>, <span class="string">"dom"</span>]</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>準備好 TypeScript ，打包工具 webpack 後，再來就是新增測試的 <em>index.html</em> ，script 的 src 是 /bundle.js 是因為 webpack 產出的就是 bundle.js , 如下，</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>RxJS Demo<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-tag">body</span> &#123; <span class="attribute">font-family</span>: <span class="string">'Arial'</span>; <span class="attribute">background</span>: lightgray &#125;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">ul</span> &#123; <span class="attribute">list-style-type</span>: none; <span class="attribute">padding</span>: <span class="number">20px</span>; &#125;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">li</span> &#123; <span class="attribute">padding</span>: <span class="number">15px</span>; <span class="attribute">background</span>: lightcoral; <span class="attribute">margin-bottom</span>: <span class="number">10px</span>; &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>RxJS Demo<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">"list"</span>&gt;</span><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"/bundle.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>有了 UI 後，我們就可以寫簡單的 RxJS 練習看看了，所以建立 <em>src</em> 目錄，然後新增 index.ts 。 logItem function 主要是將內容顯示到網頁上。</p><p>example 1 : 是建立一個 Observable 的物件，complete() 後的 next 是不會輸出的哦!</p><p>example 2 : 從一個 number array 來產生一個 Observable 物件，再透過 pipe 將 map 與 filter 串接起來。</p><p>example 3 : 建立一個會發出 error 的 Obserable 物件。</p><p>example 4 : 透過 setTimeout 來模擬 Stream 的感覺，所以資料會過 3 秒後才會再呈現在 UI 上面。</p><p>Promise 是測試 js 在 IE 上是否可以正常運行，</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 2 mb</span></span><br><span class="line"><span class="keyword">import</span> &#123; Observable, <span class="keyword">from</span> &#125; <span class="keyword">from</span> <span class="string">'rxjs'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; map, filter &#125; <span class="keyword">from</span> <span class="string">'rxjs/operators'</span>;</span><br><span class="line"><span class="comment">// import 'rxjs/add/operator/map';</span></span><br><span class="line"><span class="comment">// import 'rxjs/add/operator/filter';</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 從個別的模組載入 1 mb</span></span><br><span class="line"><span class="comment">// import &#123; Observable &#125; from 'rxjs/internal/Observable';</span></span><br><span class="line"><span class="comment">// import &#123; from &#125; from 'rxjs/internal/observable/from';</span></span><br><span class="line"><span class="comment">// import &#123; map &#125; from 'rxjs/internal/operators/map';</span></span><br><span class="line"><span class="comment">// import &#123; filter &#125; from 'rxjs/internal/operators/filter';</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//example 1</span></span><br><span class="line"><span class="keyword">var</span> observable = Observable.create(<span class="function">(<span class="params">observer: <span class="built_in">any</span></span>) =&gt;</span> &#123;</span><br><span class="line">observer.next(<span class="string">'Hello World!'</span>);</span><br><span class="line">observer.next(<span class="string">'example 1:Hello Again!'</span>);</span><br><span class="line">observer.complete();</span><br><span class="line">observer.next(<span class="string">'example 1:Bye Bye! After Complete'</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">observable.subscribe(</span><br><span class="line">(x: <span class="built_in">any</span>) =&gt; logItem(<span class="string">`example 1:<span class="subst">$&#123;x&#125;</span>`</span>),</span><br><span class="line">(error: <span class="built_in">any</span>) =&gt; logItem(<span class="string">`example 1:Error: <span class="subst">$&#123;error&#125;</span>`</span>),</span><br><span class="line">() =&gt; logItem(<span class="string">'example 1:Completed'</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">//example 2</span></span><br><span class="line"><span class="keyword">let</span> numbers = [<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">10</span>];</span><br><span class="line"><span class="keyword">let</span> numbersSource = <span class="keyword">from</span>(numbers).pipe(</span><br><span class="line">map(<span class="function"><span class="params">x</span> =&gt;</span> x + <span class="number">1</span>),</span><br><span class="line">filter(<span class="function"><span class="params">x</span> =&gt;</span> x &gt; <span class="number">3</span>)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">class</span> NumberObserver &#123;</span><br><span class="line">next(value: <span class="built_in">any</span>) &#123;</span><br><span class="line">logItem(<span class="string">`NumberObserver:<span class="subst">$&#123;value&#125;</span>`</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">error(e: <span class="built_in">any</span>) &#123;</span><br><span class="line">logItem(<span class="string">`NumberObserver:Error: <span class="subst">$&#123;e&#125;</span>`</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">complete() &#123;</span><br><span class="line">logItem(<span class="string">'NumberObserver:Completed'</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">numbersSource.subscribe(<span class="keyword">new</span> NumberObserver());</span><br><span class="line"></span><br><span class="line"><span class="comment">//example 3 with error</span></span><br><span class="line"><span class="keyword">var</span> obsservableErr = Observable.create(<span class="function">(<span class="params">observer: <span class="built_in">any</span></span>) =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> n of numbers) &#123;</span><br><span class="line">observer.next(n);</span><br><span class="line"><span class="keyword">if</span> (n === <span class="number">5</span>) &#123;</span><br><span class="line">observer.error(<span class="string">`number can't be 5`</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">observer.complete();</span><br><span class="line">&#125;);</span><br><span class="line">obsservableErr.subscribe(<span class="keyword">new</span> NumberObserver());</span><br><span class="line"></span><br><span class="line"><span class="comment">//example 4 setTimeout</span></span><br><span class="line"><span class="keyword">var</span> obsservableTimeout = Observable.create(<span class="function">(<span class="params">observer: <span class="built_in">any</span></span>) =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">let</span> index = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">let</span> produceValue = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">observer.next(numbers[index++]);</span><br><span class="line"><span class="keyword">if</span> (index &lt; numbers.length) &#123;</span><br><span class="line">setTimeout(produceValue, <span class="number">3000</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">observer.complete();</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">produceValue();</span><br><span class="line">&#125;);</span><br><span class="line">obsservableTimeout.subscribe(<span class="keyword">new</span> NumberObserver());</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">logItem</span>(<span class="params">val: <span class="built_in">any</span></span>) </span>&#123;</span><br><span class="line"><span class="keyword">var</span> node = <span class="built_in">document</span>.createElement(<span class="string">'li'</span>);</span><br><span class="line"><span class="keyword">var</span> textnode = <span class="built_in">document</span>.createTextNode(val);</span><br><span class="line">node.appendChild(textnode);</span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">'list'</span>).appendChild(node);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> t1 = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span>(<span class="params">a</span>) </span>&#123;&#125;);</span><br></pre></td></tr></table></figure><p>這時可以在 command 下輸入 npm start, 執行結果如下，<br><img src="/2018/07/26/2018027/001.png" title="[RxJS Demo]"></p><p>環境設定好了之後，我們就可以開始練習 RxJS 的相關操作了哦 :)</p><h3 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h3><p><a href="https://legacy.gitbook.com/book/chrisnoring/rxjs-5-ultimate/details" target="_blank" rel="noopener">Rxjs ultimate gitbook</a></p><p><a href="https://codingthesmartway.com/getting-started-with-rxjs-part-1-setting-up-the-development-environment-creating-observables/" target="_blank" rel="noopener">Getting Started With RxJS – Part 1: Setting Up The Development Environment &amp; Creating Observables</a></p><p><a href="https://stackoverflow.com/questions/35642223/angular2-why-do-we-need-the-es6-shim" target="_blank" rel="noopener">Angular2 why do we need the es6-shim</a></p><p><a href="https://stackoverflow.com/questions/38960490/how-can-i-polyfill-promise-with-webpack/39824671" target="_blank" rel="noopener">How can I polyfill Promise with webpack?</a></p><p><a href="https://stackoverflow.com/questions/50186371/property-from-does-not-exist-on-type-typeof-observable-angular-6" target="_blank" rel="noopener">Property ‘from’ does not exist on type ‘typeof Observable’</a></p><p><a href="https://github.com/ReactiveX/rxjs/blob/master/docs_app/content/guide/v6/migration.md" target="_blank" rel="noopener">RxJS v5.x to v6 Update Guide</a></p><p><a href="https://medium.com/coding-snippets/rxjs-5-5-property-map-does-not-exist-on-type-observable-e825129c2068" target="_blank" rel="noopener">Property ‘map’ does not exist on type Observable…</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;在學習 RxJS 之前，我們要做環境設定，讓我們可以順利的完成我們的學習。&lt;br&gt;我是依 &lt;a href=&quot;https://codingth
      
    
    </summary>
    
    
      <category term="RxJS" scheme="https://rainmakerho.github.io/tags/RxJS/"/>
    
      <category term="Development Environment" scheme="https://rainmakerho.github.io/tags/Development-Environment/"/>
    
      <category term="環境設定" scheme="https://rainmakerho.github.io/tags/%E7%92%B0%E5%A2%83%E8%A8%AD%E5%AE%9A/"/>
    
  </entry>
  
  <entry>
    <title>為什麼設定了 DataColumn.DefaultValue 會無效?</title>
    <link href="https://rainmakerho.github.io/2018/07/20/2018026/"/>
    <id>https://rainmakerho.github.io/2018/07/20/2018026/</id>
    <published>2018-07-20T05:04:16.000Z</published>
    <updated>2018-07-22T09:18:56.114Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>最近需要將原本從資料庫取出的資料再加入額外的欄位，並給預設值。但是預設值卻沒有顯示出來，是什麼原因呢?</p><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>我們的程式寫法如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//取得原始的資料</span></span><br><span class="line"><span class="keyword">var</span> dtFromDB = GetDataSource();</span><br><span class="line"><span class="comment">//要額外加入欄位，並給予預設值</span></span><br><span class="line"><span class="keyword">var</span> colMemo1 = dtFromDB.Columns.Add(<span class="string">"缺料註記"</span>, <span class="keyword">typeof</span>(<span class="keyword">string</span>));</span><br><span class="line">colMemo1.DefaultValue = <span class="string">"是 否 "</span>;</span><br><span class="line">GridView1.DataSource = dtFromDB;</span><br><span class="line">GridView1.DataBind();</span><br></pre></td></tr></table></figure><p>先加入欄位，並設定 DataColumn.DefaultValue ，結果呈現如下，<br><img src="/2018/07/20/2018026/001.png" title="[DataColumn.DefaultValue 無效]"></p><p>因為我們是先將欄位加入，才設定值，所以它會沒有效。<br>所以如果這時，我們再加入一筆新的資料，它就會有效果，如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//取得原始的資料</span></span><br><span class="line"><span class="keyword">var</span> dtFromDB = GetDataSource();</span><br><span class="line"><span class="comment">//要額外加入欄位，並給予預設值</span></span><br><span class="line"><span class="keyword">var</span> colMemo1 = dtFromDB.Columns.Add(<span class="string">"缺料註記"</span>, <span class="keyword">typeof</span>(<span class="keyword">string</span>));</span><br><span class="line">colMemo1.DefaultValue = <span class="string">"是 否 "</span>;</span><br><span class="line">dtFromDB.Rows.Add(<span class="number">999</span>, <span class="string">$"產品名稱-999"</span>, <span class="string">$"產品描述 -999 "</span>, <span class="number">999</span>, DateTime.Now.ToString(<span class="string">"yyyy/MM/dd HH:mm:ss"</span>));</span><br><span class="line">GridView1.DataSource = dtFromDB;</span><br><span class="line">GridView1.DataBind();</span><br></pre></td></tr></table></figure><img src="/2018/07/20/2018026/003.png" title="[新增的 DataRow DataColumn.DefaultValue 有效]"><p>所以，要讓 DataColumn.DefaultValue 一開始就要有效，就需要在建立 DataColumn 時，就指定它的預設值，如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//取得原始的資料</span></span><br><span class="line"><span class="keyword">var</span> dtFromDB = GetDataSource();</span><br><span class="line"><span class="comment">//要額外加入欄位，並給予預設值</span></span><br><span class="line"><span class="comment">//要先設定，再加入</span></span><br><span class="line"><span class="keyword">var</span> colMemo1 = <span class="keyword">new</span> DataColumn(<span class="string">"缺料註記"</span>, <span class="keyword">typeof</span>(<span class="keyword">string</span>));</span><br><span class="line">colMemo1.DefaultValue = <span class="string">"是 否 "</span>;</span><br><span class="line">dtFromDB.Columns.Add(colMemo1);</span><br><span class="line">GridView1.DataSource = dtFromDB;</span><br><span class="line">GridView1.DataBind();</span><br></pre></td></tr></table></figure><img src="/2018/07/20/2018026/002.png" title="[先新增 DataColumn， DataColumn.DefaultValue 有效]"><p>雖然多一行，但是 DataColumn.DefaultValue 有效了哦! :)</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> DataTable <span class="title">GetDataSource</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// Instantiating a "Products" DataTable object</span></span><br><span class="line"><span class="keyword">var</span> dataTable = <span class="keyword">new</span> DataTable(<span class="string">"Products"</span>);</span><br><span class="line"><span class="comment">// Adding columns to the DataTable object</span></span><br><span class="line">dataTable.Columns.Add(<span class="string">"ProductID"</span>, <span class="keyword">typeof</span>(Int32));</span><br><span class="line">dataTable.Columns.Add(<span class="string">"ProductName"</span>, <span class="keyword">typeof</span>(<span class="keyword">string</span>));</span><br><span class="line">dataTable.Columns.Add(<span class="string">"ProductDesc"</span>, <span class="keyword">typeof</span>(<span class="keyword">string</span>));</span><br><span class="line">dataTable.Columns.Add(<span class="string">"Units"</span>, <span class="keyword">typeof</span>(Double));</span><br><span class="line">dataTable.Columns.Add(<span class="string">"CreDte"</span>, <span class="keyword">typeof</span>(DateTime));</span><br><span class="line"><span class="keyword">var</span> rand = <span class="keyword">new</span> Random();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">90</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">dataTable.Rows.Add(i, <span class="string">$"產品名稱-<span class="subst">&#123;i&#125;</span> 讓產品名稱自己說話 abc <span class="subst">&#123;i&#125;</span> ...<span class="subst">&#123;i&#125;</span>"</span>, <span class="string">$"產品描述 -<span class="subst">&#123;i&#125;</span>塑造出帶有「情感」的品牌概念 -<span class="subst">&#123;i&#125;</span>產品描述 -產品描述 -產品描述 -"</span>, rand.NextDouble(), DateTime.Now.ToString(<span class="string">"yyyy/MM/dd HH:mm:ss"</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> dataTable;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;最近需要將原本從資料庫取出的資料再加入額外的欄位，並給預設值。但是預設值卻沒有顯示出來，是什麼原因呢?&lt;/p&gt;
&lt;h3 id=&quot;解法&quot;&gt;&lt;a
      
    
    </summary>
    
    
      <category term="DataColumn" scheme="https://rainmakerho.github.io/tags/DataColumn/"/>
    
      <category term="DefaultValue" scheme="https://rainmakerho.github.io/tags/DefaultValue/"/>
    
  </entry>
  
  <entry>
    <title>In-House certificate 要過期了怎麼辦?</title>
    <link href="https://rainmakerho.github.io/2018/07/20/2018025/"/>
    <id>https://rainmakerho.github.io/2018/07/20/2018025/</id>
    <published>2018-07-20T01:17:13.000Z</published>
    <updated>2018-07-25T07:10:20.615Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>我們公司 Apple Enterprise Store 中的 In-House certificate 快過期了，而所有依據它所建罝出來的 Provisioning Profiles 也跟著快過期了，要怎麼辦呢? Revoke 嗎?</p><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>如下圖，我們公司的 In-House certificate 有效只到 2018/8/2 ，到時我們相對應的 iOS App 不就 GG 了。 我們就只能等著它過期嗎 ? 過期後，會自動 renew 嗎?<br><img src="/2018/07/20/2018025/001.png" title="[快過期的In-House certificate]"></p><h4 id="Apple-Developer"><a href="#Apple-Developer" class="headerlink" title="Apple Developer"></a><a href="https://developer.apple.com" target="_blank" rel="noopener">Apple Developer</a></h4><p>嗯… 這時就需要再建立一個 In-House certificate，到 (<a href="https://developer.apple.com/account/ios/certificate/" target="_blank" rel="noopener">certificate</a>=&gt;Certificates) 按右上方的 + 號，Production 那選取「In-House and Ad Hoc」，如下圖(因為我已建立，最多同時只能有 2 個)，然後按下 Continue<br><img src="/2018/07/20/2018025/002.png" title="[新增In-House certificate]"></p><p>下個畫面就從本機上建立一個 Certificate Signing Request (CSR) 後，上傳給它，就可以建立第 2 個 In-House certificate 了哦! 如下圖，<br><img src="/2018/07/20/2018025/003.png" title="[建立第2個In-House certificate]"></p><p>新的 In-House certificate 建立好了之後，在 App 那的 Provisioning Profiles 就可以選取新的 In-House certificate 後，按下 Generate 就可以了哦，如下圖，<br><img src="/2018/07/20/2018025/004.png" title="[選取新的In-House certificate來建立 Provisioning Profile]"></p><h4 id="Mac-開發環境"><a href="#Mac-開發環境" class="headerlink" title="Mac 開發環境"></a>Mac 開發環境</h4><p>在 <a href="https://developer.apple.com" target="_blank" rel="noopener">Apple Developer</a> 設定好了後，就可以在 Mac 開發環境中，開啟 Xcode 然後將 Provisioning Profiles 下載下來，如下圖，<br><img src="/2018/07/20/2018025/005.png" title="[Xcode Preferences]"><br><img src="/2018/07/20/2018025/006.png" title="[Download Provisioning Profile]"></p><p>然後就可以 Build 了哦!<br>那別的開發人員呢? 這時要將這台 In-House certificate 匯出(含 private key)給他們去安裝。</p><p>所以要開啟 keychain ，然後將 In-House certificate 匯出成 p12 的檔案 (含 private key)，並設定密碼，如下圖，<br><img src="/2018/07/20/2018025/007.png" title="[Export In-House certificate]"><br><img src="/2018/07/20/2018025/008.png" title="[Export In-House certificate include private key]"></p><p>別人開發人員再匯入自已的 keychain (輸入該密碼)後，就可以從 Xcode 下載新的 Provisioning Profiles 來，並選取使用新的 In-House certificate 來 Build 哦!</p><p>註:</p><ol><li>這時您會發現環境中有 2 個 In-House certificate ，如果不會用到舊的就可以將它從 keychain 那刪除 (記得先備份出 p12 檔哦!)。</li><li>如果您出現 「error : No installed provisioning profiles match the installed iOS signing identities.」的錯誤，那應該是沒有下載對應的 Provisioning Profiles ，請重 Xcode 那手動下載。</li></ol><p>感謝同事 Henry 的幫忙 :)</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;我們公司 Apple Enterprise Store 中的 In-House certificate 快過期了，而所有依據它所建罝出來的 
      
    
    </summary>
    
    
      <category term="In-House certificate" scheme="https://rainmakerho.github.io/tags/In-House-certificate/"/>
    
      <category term="expired" scheme="https://rainmakerho.github.io/tags/expired/"/>
    
      <category term="Provisioning Profiles" scheme="https://rainmakerho.github.io/tags/Provisioning-Profiles/"/>
    
      <category term="Revoke" scheme="https://rainmakerho.github.io/tags/Revoke/"/>
    
      <category term="keychain" scheme="https://rainmakerho.github.io/tags/keychain/"/>
    
      <category term="No installed provisioning profiles" scheme="https://rainmakerho.github.io/tags/No-installed-provisioning-profiles/"/>
    
  </entry>
  
  <entry>
    <title>透過 Aspose 將 datatable 的資料轉出成有浮水印的 PDF 檔 (2)</title>
    <link href="https://rainmakerho.github.io/2018/07/13/2018024/"/>
    <id>https://rainmakerho.github.io/2018/07/13/2018024/</id>
    <published>2018-07-13T05:44:05.000Z</published>
    <updated>2018-07-17T05:55:29.704Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>在 <a href="https://rainmakerho.github.io/2018/07/03/2018022/">透過 Aspose 將 datatable 的資料轉出成有浮水印的 PDF 檔</a> 一文中，驗證可透過 Aspose 元件來達到將 DataTable 的資料轉成有浮水印的 PDF 檔案。但實際用在專案上還有段距離，例如，</p><ol><li>設定表頭/表尾</li><li>欄位名稱可否換行，對齊方式</li><li>可否設定欄位的寬度，格式(日期、數值)，對齊方式</li><li>可否設定列印比例</li><li>浮水印要有一定的覆蓋比率</li></ol><h3 id="實作"><a href="#實作" class="headerlink" title="實作"></a>實作</h3><p><strong>DataTable =&gt; 換 ColumnName =&gt; Excel =&gt; Pdf =&gt; Pdf+浮水印</strong><br>以上面的需求，我們可以將程式切分成 2 段，一是 DataTable 轉資料到 Excel 轉存成 PDF，二再將該 PDF 加上浮水印。</p><ol><li><p><strong>設定表頭/表尾</strong><br>可以透過 PageSetup.SetHeader(0, “表頭左邊”); 或是 PageSetup.SetFooter(2, “表尾右邊”); 它是使用 0 ~ 2 來表示 左、中、右 區段。這裡有一個部份要注意的是，如果在表頭、表尾區段要換行的話，也是使用 \n 嗎? 不可以哦~ 用 \n 中間會多一行哦! 所以這裡要改用 <strong>\r</strong> 才可以哦!</p></li><li><p><strong>欄位名稱可否換行，對齊方式</strong><br>在 ColumnName 中加入 \n 來換行，同時要設定 Cell 的 Stype IsTextWrapped 值為 true。如果 IsTextWrapped 設定為 fasle 的話，在 ColumnName 設定 \n 也不會換行的哦! 另外，程式中會呼叫 <a href="https://apireference.aspose.com/net/cells/aspose.cells/worksheet/methods/autofitcolumns" target="_blank" rel="noopener">AutoFitColumns</a> 及 <a href="https://apireference.aspose.com/net/cells/aspose.cells/worksheet/methods/autofitrows" target="_blank" rel="noopener">AutoFitRows</a> ，所以要讓它可以計算正常的話，請記得要設定系統中有的字型哦~ 例如「標楷體」</p></li><li><p><strong>可否設定欄位的寬度，格式(日期、數值)，對齊方式</strong><br>可以透過 Worksheet.Cells.SetColumnWidth 來設定欄寬 (0~255)<a href="https://apireference.aspose.com/net/cells/aspose.cells/cells/methods/setcolumnwidth" target="_blank" rel="noopener">Cells.SetColumnWidth</a>，因為在設定欄位部份，除了設定顯示名稱之外，多了一個設定欄寬 及 欄位的屬性(用於格式(日期、數值)，對齊方式)，所以傳遞參數中我們改用 <a href="https://msdn.microsoft.com/zh-tw/library/system.tuple(v=vs.110" target="_blank" rel="noopener">Tuple</a>.aspx&gt;) 可以讓我們存放多個值。</p></li><li><p><strong>可否設定列印比例</strong><br>可以設定 PageSetup.Zoom 的值 (10~400)，預設值是 100。有時如果我們的內容太長時，有可能會跨頁，所以我們可以設定「列印比例」來讓 Excel 印到 PDF 時，可以縮到一頁以內，這時就可以設定這個值了哦!</p></li><li><p><strong>浮水印要有一定的覆蓋比率</strong><br>在 PDF 要使用浮水印，我們可以透過 Stamp 物件來貼到 PDF 文件之中，因為我們範例是使用文字，所以是建立 TextStamp 物件，要針對文字做處理，可以透過 FormattedText 來處理。所以，如果浮水印要換行的話，可以使用 \n 或是加入 Environment.NewLine 即可。<br>建立好 TextStamp 後，就要依需求來貼到 PDF 之中，如果是蓋滿整個 PDF 文件的話，就可以設定 TextStamp 物件的 Width, Height 跟 PDF Page 的 CropBox Width 及 Height 一樣的大小。<br>如果是要依 TextStamp 物件去蓋滿 PDF Page 的話，就可以從 PDF Page 的 CropBox Width 及 Height 去 loop 貼到 PDF Page 上。</p></li></ol><p>透過以上的分析後，我們就可以將它抽出來成為公用的 PDFReportUtility Class，如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PDFReportUtility</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 增加功能</span></span><br><span class="line"><span class="comment">// 1.excel header 及 footer 及 可設定欄寬</span></span><br><span class="line"><span class="comment">// 2.pdf watermark 整頁或是充滿</span></span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> DataTable 轉到 Excel 的參數</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;remarks&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 2018/07/16 欄位需要設定數值或是日期</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/remarks&gt;</span></span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">struct</span> ExportDataTable2ExcelArg</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span> DataTable dataSource;</span><br><span class="line"><span class="comment">//columnId, columnDisplayName, columnWidth, cloumnStyle</span></span><br><span class="line"><span class="keyword">public</span> Dictionary&lt;<span class="keyword">string</span>, Tuple&lt;<span class="keyword">string</span>, <span class="keyword">double</span>, Style&gt;&gt; ColumnInfos;</span><br><span class="line"><span class="comment">//是否允許換行</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">bool</span> IsTextWrapped;</span><br><span class="line"><span class="comment">//字型名稱，如果不允許換行的話，autoFitColumns 會依字型去算寬度</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">string</span> FontName;</span><br><span class="line"><span class="comment">//直/橫 印</span></span><br><span class="line"><span class="keyword">public</span> PageOrientationType PageOrientation;</span><br><span class="line"><span class="comment">//縮放比例</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">int</span> PageScale; <span class="comment">//10~400</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//表頭 左、中、右</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">string</span> HeaderLeft;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">string</span> HeaderCenter;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">string</span> HeaderRight;</span><br><span class="line"><span class="comment">//表尾 左、中、右</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">string</span> FooterLeft;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">string</span> FooterCenter;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">string</span> FooterRight;</span><br><span class="line"><span class="comment">//欄位對齊方式</span></span><br><span class="line"><span class="keyword">public</span> TextAlignmentType HeaderHorizontalAlignment;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 浮水印設定參數</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">struct</span> WatermarkArg</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//浮水印字串</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">string</span> Watermark;</span><br><span class="line"><span class="comment">//浮水印 Stamp 的 Height</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">double</span> WatermarkHeight;</span><br><span class="line"><span class="comment">//浮水印 Stamp 的 Width</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">double</span> WatermarkWidth;</span><br><span class="line"><span class="comment">//浮水印 Stamp 的 水平間隔</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">double</span> WatermarkHorizontalSpace;</span><br><span class="line"><span class="comment">//浮水印 Stamp 的 垂直間隔</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">double</span> WatermarkVerticalSpace;</span><br><span class="line"><span class="comment">//浮水印 Stamp 貼上Style，目前有蓋滿一頁及水平蓋滿</span></span><br><span class="line"><span class="keyword">public</span> WatermarkStyle WMStyle;</span><br><span class="line"><span class="comment">//不透明度 0~ `</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">double</span> Opacity;</span><br><span class="line"><span class="comment">//旋轉角度</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">double</span> RotateAngle;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> WatermarkStyle</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//蓋滿一頁</span></span><br><span class="line">FitPage,</span><br><span class="line"><span class="comment">//水平蓋滿</span></span><br><span class="line">RepeatHorizontal</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 設定 DataTable 的 Column Name</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="dt"&gt;</span>datatable<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="columnInfos"&gt;</span>item1:Column Name, item2:Column Width<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">ChangedDataTableColumnName</span>(<span class="params">DataTable dt, Dictionary&lt;<span class="keyword">string</span>, Tuple&lt;<span class="keyword">string</span>, <span class="keyword">double</span>, Style&gt;&gt; columnInfos</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//change columnName</span></span><br><span class="line"><span class="keyword">if</span> (columnInfos != <span class="literal">null</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">foreach</span> (KeyValuePair&lt;<span class="keyword">string</span>, Tuple&lt;<span class="keyword">string</span>, <span class="keyword">double</span>, Style&gt;&gt; columnInfo <span class="keyword">in</span> columnInfos)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (dt.Columns[columnInfo.Key] != <span class="literal">null</span>)</span><br><span class="line">dt.Columns[columnInfo.Key].ColumnName = columnInfo.Value.Item1;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 設定 Worksheet 的 欄位寬度</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="sheet"&gt;</span>綁定 DataTable 的 Worksheet <span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="columnInfos"&gt;</span>item1:Column Name, item2:Column Width<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">ChangedSheetColumnStyle</span>(<span class="params">Worksheet sheet, Dictionary&lt;<span class="keyword">string</span>, Tuple&lt;<span class="keyword">string</span>, <span class="keyword">double</span>, Style&gt;&gt; columnInfos, TextAlignmentType headerHorizontalAlignment</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//change columnName</span></span><br><span class="line"><span class="keyword">if</span> (columnInfos != <span class="literal">null</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">var</span> columnIndex = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">foreach</span> (KeyValuePair&lt;<span class="keyword">string</span>, Tuple&lt;<span class="keyword">string</span>, <span class="keyword">double</span>, Style&gt;&gt; columnInfo <span class="keyword">in</span> columnInfos)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (columnInfo.Value.Item2 &gt; <span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line">sheet.Cells.SetColumnWidth(columnIndex, columnInfo.Value.Item2);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(columnInfo.Value.Item3 != <span class="literal">null</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">var</span> styleFlag = <span class="keyword">new</span> StyleFlag();</span><br><span class="line">styleFlag.NumberFormat = <span class="literal">true</span>;</span><br><span class="line">styleFlag.HorizontalAlignment = <span class="literal">true</span>;</span><br><span class="line">sheet.Cells.Columns[columnIndex].ApplyStyle(columnInfo.Value.Item3, styleFlag);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//設定 header 列</span></span><br><span class="line"><span class="keyword">var</span> cellStyle = sheet.Cells[columnIndex, <span class="number">0</span>].GetStyle();</span><br><span class="line"><span class="keyword">var</span> cellStyleFlag = <span class="keyword">new</span> StyleFlag();</span><br><span class="line">cellStyleFlag.HorizontalAlignment = <span class="literal">true</span>;</span><br><span class="line">cellStyle.HorizontalAlignment = headerHorizontalAlignment;</span><br><span class="line">sheet.Cells[<span class="number">0</span>, columnIndex].SetStyle(cellStyle, cellStyleFlag);</span><br><span class="line">columnIndex++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 將 DataTable 的資料轉到Excel處理並存成 PDF Stream</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="arg"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> MemoryStream <span class="title">GenPDFFromDataTable</span>(<span class="params">ExportDataTable2ExcelArg arg</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//Change DataTable's ColumnName</span></span><br><span class="line">ChangedDataTableColumnName(arg.dataSource, arg.ColumnInfos);</span><br><span class="line"></span><br><span class="line"><span class="comment">//proc excel</span></span><br><span class="line"><span class="comment">// Instantiating a Workbook object</span></span><br><span class="line"><span class="keyword">var</span> workbook = <span class="keyword">new</span> Workbook();</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">string</span>.IsNullOrWhiteSpace(arg.FontName))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">var</span> wbStyle = workbook.DefaultStyle;</span><br><span class="line">wbStyle.Font.Name = arg.FontName;</span><br><span class="line">workbook.DefaultStyle = wbStyle;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> worksheet = workbook.Worksheets[<span class="number">0</span>];</span><br><span class="line">worksheet.Cells.ImportDataTable(arg.dataSource, <span class="literal">true</span>, <span class="string">"A1"</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//https://docs.aspose.com/display/cellsnet/Setting+Page+Options</span></span><br><span class="line"><span class="keyword">var</span> pageSetup = workbook.Worksheets[<span class="number">0</span>].PageSetup;</span><br><span class="line">pageSetup.PrintTitleRows = <span class="string">"$1:$1"</span>;</span><br><span class="line">pageSetup.IsPercentScale = <span class="literal">true</span>;</span><br><span class="line">pageSetup.Orientation = arg.PageOrientation;</span><br><span class="line">pageSetup.Zoom = arg.PageScale &lt; <span class="number">10</span> ? <span class="number">100</span> : arg.PageScale;</span><br><span class="line"><span class="comment">//https://docs.aspose.com/display/cellsnet/Setting+Headers+and+Footers</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">string</span>.IsNullOrEmpty(arg.HeaderLeft))</span><br><span class="line">&#123;</span><br><span class="line">pageSetup.SetHeader(<span class="number">0</span>, arg.HeaderLeft);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">string</span>.IsNullOrEmpty(arg.HeaderCenter))</span><br><span class="line">&#123;</span><br><span class="line">pageSetup.SetHeader(<span class="number">1</span>, arg.HeaderCenter);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">string</span>.IsNullOrEmpty(arg.HeaderRight))</span><br><span class="line">&#123;</span><br><span class="line">pageSetup.SetHeader(<span class="number">2</span>, arg.HeaderRight);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">string</span>.IsNullOrEmpty(arg.FooterLeft))</span><br><span class="line">&#123;</span><br><span class="line">pageSetup.SetFooter(<span class="number">0</span>, arg.FooterLeft);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">string</span>.IsNullOrEmpty(arg.FooterCenter))</span><br><span class="line">&#123;</span><br><span class="line">pageSetup.SetFooter(<span class="number">1</span>, arg.FooterCenter);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">string</span>.IsNullOrEmpty(arg.FooterRight))</span><br><span class="line">&#123;</span><br><span class="line">pageSetup.SetFooter(<span class="number">2</span>, arg.FooterRight);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> range = worksheet.Cells.MaxDisplayRange;</span><br><span class="line"><span class="comment">//border</span></span><br><span class="line"><span class="comment">//Setting border for each cell in the range</span></span><br><span class="line"><span class="keyword">var</span> style = workbook.CreateStyle();</span><br><span class="line"><span class="keyword">var</span> colorBlack = System.Drawing.Color.Black;</span><br><span class="line">style.SetBorder(BorderType.BottomBorder, CellBorderType.Medium, colorBlack);</span><br><span class="line">style.SetBorder(BorderType.LeftBorder, CellBorderType.Medium, colorBlack);</span><br><span class="line">style.SetBorder(BorderType.RightBorder, CellBorderType.Medium, colorBlack);</span><br><span class="line">style.SetBorder(BorderType.TopBorder, CellBorderType.Medium, colorBlack);</span><br><span class="line">style.IsTextWrapped = arg.IsTextWrapped;</span><br><span class="line">range.SetStyle(style);</span><br><span class="line">worksheet.AutoFitColumns();</span><br><span class="line"><span class="comment">//adjust columns</span></span><br><span class="line">ChangedSheetColumnStyle(worksheet, arg.ColumnInfos, arg.HeaderHorizontalAlignment);</span><br><span class="line">worksheet.AutoFitRows();</span><br><span class="line"><span class="comment">//string xlsFile = Path.Combine(HttpContext.Current.Server.MapPath("./data"), $"test.xlsx");</span></span><br><span class="line"><span class="comment">//workbook.Save(xlsFile, Aspose.Cells.SaveFormat.Xlsx);</span></span><br><span class="line"><span class="comment">//save to stream</span></span><br><span class="line"><span class="keyword">var</span> pdfStream = <span class="keyword">new</span> MemoryStream();</span><br><span class="line">workbook.Save(pdfStream, Aspose.Cells.SaveFormat.Pdf);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> pdfStream;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 將 PDF 加上 浮水印</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="pdfStream"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="arg"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> MemoryStream <span class="title">AddWatermark</span>(<span class="params">MemoryStream pdfStream, WatermarkArg arg</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> pdfDocument = <span class="keyword">new</span> Aspose.Pdf.Document(pdfStream);</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">string</span>.IsNullOrWhiteSpace(arg.Watermark))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">var</span> text = <span class="keyword">new</span> FormattedText(arg.Watermark);</span><br><span class="line"><span class="keyword">foreach</span> (<span class="keyword">var</span> page <span class="keyword">in</span> pdfDocument.Pages)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">switch</span> (arg.WMStyle)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> WatermarkStyle.FitPage:</span><br><span class="line">AddWatermarkFitPage(page, arg);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> WatermarkStyle.RepeatHorizontal:</span><br><span class="line">AddWatermarkRepeatHorizontal(page, arg);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> newPdfStream = <span class="keyword">new</span> MemoryStream();</span><br><span class="line">pdfDocument.Save(newPdfStream);</span><br><span class="line"><span class="keyword">return</span> newPdfStream;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 浮水印跟頁面一樣大</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="pdfPage"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="arg"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">AddWatermarkFitPage</span>(<span class="params">Aspose.Pdf.Page pdfPage, WatermarkArg arg</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">var</span> text = <span class="keyword">new</span> FormattedText(arg.Watermark);</span><br><span class="line"><span class="keyword">var</span> stamp = <span class="keyword">new</span> TextStamp(text);</span><br><span class="line">stamp.RotateAngle = arg.RotateAngle;</span><br><span class="line">stamp.XIndent = arg.WatermarkHorizontalSpace;</span><br><span class="line">stamp.YIndent = arg.WatermarkVerticalSpace;</span><br><span class="line">stamp.Opacity = arg.Opacity;</span><br><span class="line">stamp.Width = pdfPage.CropBox.Width;</span><br><span class="line">stamp.Height = pdfPage.CropBox.Height;</span><br><span class="line">pdfPage.AddStamp(stamp);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//最小的 浮水印 長、寬</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> minValue = <span class="number">30</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 依 浮水印 水平地蓋滿整個頁面</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="pdfPage"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="arg"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">AddWatermarkRepeatHorizontal</span>(<span class="params">Aspose.Pdf.Page pdfPage, WatermarkArg arg</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (arg.WatermarkHeight &lt; minValue)</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> ArgumentException(<span class="string">$"<span class="subst">&#123;<span class="keyword">nameof</span>(arg.WatermarkHeight)&#125;</span> must greater than <span class="subst">&#123;minValue&#125;</span>"</span>);</span><br><span class="line"><span class="keyword">if</span> (arg.WatermarkWidth &lt; minValue)</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> ArgumentException(<span class="string">$"<span class="subst">&#123;<span class="keyword">nameof</span>(arg.WatermarkWidth)&#125;</span> must greater than <span class="subst">&#123;minValue&#125;</span>"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> text = <span class="keyword">new</span> FormattedText(arg.Watermark);</span><br><span class="line"><span class="keyword">var</span> yIndent = pdfPage.CropBox.Height - arg.WatermarkHeight;</span><br><span class="line"><span class="keyword">var</span> yLimit = <span class="number">0</span> - (arg.WatermarkHeight + arg.WatermarkVerticalSpace);</span><br><span class="line"><span class="keyword">var</span> pageWidth = pdfPage.CropBox.Width;</span><br><span class="line"><span class="keyword">var</span> xIndent = <span class="number">0</span>d;</span><br><span class="line"><span class="keyword">while</span> (yIndent &gt; yLimit)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span> (xIndent &lt; pageWidth)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">var</span> stamp = <span class="keyword">new</span> TextStamp(text);</span><br><span class="line">stamp.RotateAngle = arg.RotateAngle;</span><br><span class="line">stamp.XIndent = xIndent;</span><br><span class="line">stamp.YIndent = yIndent;</span><br><span class="line">stamp.Opacity = arg.Opacity;</span><br><span class="line">stamp.Width = arg.WatermarkWidth;</span><br><span class="line">stamp.Height = arg.WatermarkHeight;</span><br><span class="line">pdfPage.AddStamp(stamp);</span><br><span class="line">xIndent += (arg.WatermarkWidth + arg.WatermarkHorizontalSpace);</span><br><span class="line">&#125;</span><br><span class="line">xIndent = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">var</span> yIdentReduce = (arg.WatermarkHeight + arg.WatermarkVerticalSpace);</span><br><span class="line"></span><br><span class="line">yIndent -= yIdentReduce;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 以角度線性期function來呈現</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="pdfPage"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="arg"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">AddWatermarkRepeatRotateAngle</span>(<span class="params">Aspose.Pdf.Page pdfPage, WatermarkArg arg</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (arg.WatermarkHeight &lt; minValue)</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> ArgumentException(<span class="string">$"<span class="subst">&#123;<span class="keyword">nameof</span>(arg.WatermarkHeight)&#125;</span> must greater than <span class="subst">&#123;minValue&#125;</span>"</span>);</span><br><span class="line"><span class="keyword">if</span> (arg.WatermarkWidth &lt; minValue)</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> ArgumentException(<span class="string">$"<span class="subst">&#123;<span class="keyword">nameof</span>(arg.WatermarkWidth)&#125;</span> must greater than <span class="subst">&#123;minValue&#125;</span>"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> text = <span class="keyword">new</span> FormattedText(arg.Watermark);</span><br><span class="line"><span class="keyword">var</span> yIndent = pdfPage.CropBox.Height - arg.WatermarkHeight;</span><br><span class="line"><span class="keyword">var</span> yLimit = <span class="number">0</span> - (arg.WatermarkHeight + arg.WatermarkVerticalSpace);</span><br><span class="line"><span class="keyword">var</span> pageWidth = pdfPage.CropBox.Width;</span><br><span class="line"><span class="keyword">var</span> pageHeight = pdfPage.CropBox.Height;</span><br><span class="line"><span class="keyword">var</span> xIndent = <span class="number">0</span>d;</span><br><span class="line"><span class="keyword">while</span> (yIndent &gt; yLimit)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">var</span> y = yIndent;</span><br><span class="line"><span class="keyword">while</span> (xIndent &lt; pageWidth &amp;&amp; y &lt; pageHeight)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">var</span> stamp = <span class="keyword">new</span> TextStamp(text);</span><br><span class="line">stamp.RotateAngle = arg.RotateAngle;</span><br><span class="line">stamp.XIndent = xIndent;</span><br><span class="line">stamp.YIndent = y;</span><br><span class="line">stamp.Opacity = arg.Opacity;</span><br><span class="line">stamp.Width = arg.WatermarkWidth;</span><br><span class="line">stamp.Height = arg.WatermarkHeight;</span><br><span class="line">pdfPage.AddStamp(stamp);</span><br><span class="line">xIndent += (arg.WatermarkWidth + arg.WatermarkHorizontalSpace);</span><br><span class="line">xIndent = xIndent + Math.Cos(<span class="number">30</span>) * arg.WatermarkWidth;</span><br><span class="line">y = y + Math.Sign(<span class="number">30</span>) * (arg.WatermarkHeight + arg.WatermarkVerticalSpace);</span><br><span class="line">&#125;</span><br><span class="line">xIndent = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">var</span> yIdentReduce = (arg.WatermarkHeight + arg.WatermarkVerticalSpace);</span><br><span class="line">yIndent -= yIdentReduce;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//到底了，要再連走 X</span></span><br><span class="line"><span class="keyword">var</span> baseX = <span class="number">0</span>d;</span><br><span class="line"><span class="keyword">while</span> (baseX &lt; pageWidth)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">var</span> y = yIndent;</span><br><span class="line">xIndent = baseX;</span><br><span class="line"><span class="keyword">while</span> (xIndent &lt; pageWidth)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">var</span> stamp = <span class="keyword">new</span> TextStamp(text);</span><br><span class="line">stamp.RotateAngle = arg.RotateAngle;</span><br><span class="line">stamp.XIndent = xIndent;</span><br><span class="line">stamp.YIndent = y;</span><br><span class="line">stamp.Opacity = arg.Opacity;</span><br><span class="line">stamp.Width = arg.WatermarkWidth;</span><br><span class="line">stamp.Height = arg.WatermarkHeight;</span><br><span class="line">pdfPage.AddStamp(stamp);</span><br><span class="line">xIndent += (arg.WatermarkWidth + arg.WatermarkHorizontalSpace);</span><br><span class="line">xIndent = xIndent + Math.Cos(<span class="number">30</span>) * arg.WatermarkWidth;</span><br><span class="line">y = y + Math.Sign(<span class="number">30</span>) * (arg.WatermarkHeight + arg.WatermarkVerticalSpace);</span><br><span class="line">&#125;</span><br><span class="line">baseX += (arg.WatermarkWidth + arg.WatermarkHorizontalSpace); ;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="測試"><a href="#測試" class="headerlink" title="測試"></a>測試</h3><p>所以我們新增 2 個 Button 來測試，</p><p><em>註: 因為共用的 function 都是回傳 Stream，所以這們可以將做好的 PDF 檔放到 Byte Array 之中，再透過 Response.BinaryWrite 傳給使用者下載檔案 ^\</em>^_</p><p>產生測試的 DataTable</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> DataTable <span class="title">GetDataSource</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// Instantiating a "Products" DataTable object</span></span><br><span class="line"><span class="keyword">var</span> dataTable = <span class="keyword">new</span> DataTable(<span class="string">"Products"</span>);</span><br><span class="line"><span class="comment">// Adding columns to the DataTable object</span></span><br><span class="line">dataTable.Columns.Add(<span class="string">"ProductID"</span>, <span class="keyword">typeof</span>(Int32));</span><br><span class="line">dataTable.Columns.Add(<span class="string">"ProductName"</span>, <span class="keyword">typeof</span>(<span class="keyword">string</span>));</span><br><span class="line">dataTable.Columns.Add(<span class="string">"ProductDesc"</span>, <span class="keyword">typeof</span>(<span class="keyword">string</span>));</span><br><span class="line">dataTable.Columns.Add(<span class="string">"Units"</span>, <span class="keyword">typeof</span>(Double));</span><br><span class="line">dataTable.Columns.Add(<span class="string">"CreDte"</span>, <span class="keyword">typeof</span>(DateTime));</span><br><span class="line"><span class="keyword">var</span> rand = <span class="keyword">new</span> Random();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">90</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">dataTable.Rows.Add(i, <span class="string">$"產品名稱-<span class="subst">&#123;i&#125;</span> 讓產品名稱自己說話 abc <span class="subst">&#123;i&#125;</span> ...<span class="subst">&#123;i&#125;</span>"</span>, <span class="string">$"產品描述 -<span class="subst">&#123;i&#125;</span>塑造出帶有「情感」的品牌概念 -<span class="subst">&#123;i&#125;</span>產品描述 -產品描述 -產品描述 -"</span>, rand.NextDouble(), DateTime.Now.ToString(<span class="string">"yyyy/MM/dd HH:mm:ss"</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> dataTable;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>1.ColumnName 換行，IsTextWrapped = true, 設定寬度為 5，右表頭加入 2 列(換行)，設定日期格式，第一列表頭對齊方式為置中，浮水印蓋滿一頁。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">btnGenPDFFitPage_Click</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> excelArg = <span class="keyword">new</span> ExportDataTable2ExcelArg</span><br><span class="line">&#123;</span><br><span class="line">dataSource = GetDataSource(),</span><br><span class="line">HeaderCenter = <span class="string">"&amp;24 This is Report Header ..."</span>,</span><br><span class="line">HeaderRight = <span class="string">$"&amp;10 使用者:Rainmaker\r日期:<span class="subst">&#123;DateTime.Now.ToString(<span class="string">"yyyy/MM/dd HH:mm:ss"</span>)&#125;</span>"</span>,</span><br><span class="line">FooterRight = <span class="string">"&amp;10 &amp;P/&amp;N"</span>,</span><br><span class="line">ColumnInfos = <span class="keyword">new</span> Dictionary&lt;<span class="keyword">string</span>, Tuple&lt;<span class="keyword">string</span>, <span class="keyword">double</span>, Aspose.Cells.Style&gt;&gt;</span><br><span class="line">&#123;</span><br><span class="line">&#123;<span class="string">"ProductID"</span>, <span class="keyword">new</span> Tuple&lt;<span class="keyword">string</span>, <span class="keyword">double</span>, Aspose.Cells.Style&gt;(<span class="string">$"產品\n代號"</span>, <span class="number">5</span>, <span class="literal">null</span>) &#125;,</span><br><span class="line">&#123;<span class="string">"ProductName"</span>, <span class="keyword">new</span> Tuple&lt;<span class="keyword">string</span>, <span class="keyword">double</span>, Aspose.Cells.Style&gt;(<span class="string">"產品名稱"</span> , <span class="number">-1</span>, <span class="literal">null</span>) &#125;,</span><br><span class="line">&#123;<span class="string">"ProductDesc"</span>, <span class="keyword">new</span> Tuple&lt;<span class="keyword">string</span>, <span class="keyword">double</span>, Aspose.Cells.Style&gt;(<span class="string">"產品 \n描述"</span> , <span class="number">-1</span>,<span class="literal">null</span>) &#125;,</span><br><span class="line">&#123;<span class="string">"Units"</span>, <span class="keyword">new</span> Tuple&lt;<span class="keyword">string</span>, <span class="keyword">double</span>, Aspose.Cells.Style&gt;(<span class="string">"產品 庫存"</span> , <span class="number">-1</span>, <span class="keyword">new</span> Aspose.Cells.Style&#123;  HorizontalAlignment= TextAlignmentType.Center&#125;)&#125;,</span><br><span class="line"> &#123;<span class="string">"CreDte"</span>, <span class="keyword">new</span> Tuple&lt;<span class="keyword">string</span>, <span class="keyword">double</span>, Aspose.Cells.Style&gt;(<span class="string">"日期"</span> , <span class="number">20</span>, <span class="keyword">new</span> Aspose.Cells.Style&#123; Number=<span class="number">22</span>, Custom = <span class="string">"yyyy/mm/dd hh:mm:ss"</span> , HorizontalAlignment= TextAlignmentType.Center&#125;) &#125;</span><br><span class="line">&#125;,</span><br><span class="line">PageOrientation = PageOrientationType.Landscape,</span><br><span class="line">IsTextWrapped = <span class="literal">true</span>,</span><br><span class="line">PageScale = <span class="number">80</span>,</span><br><span class="line">HeaderHorizontalAlignment = TextAlignmentType.Center</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> pdfStream = GenPDFFromDataTable(excelArg);</span><br><span class="line"><span class="keyword">var</span> fileNameWithoutExt = <span class="string">$"<span class="subst">&#123;Guid.NewGuid().ToString(<span class="string">"N"</span>)&#125;</span>"</span>;</span><br><span class="line"><span class="comment">//string pdfFileName = Path.Combine(Server.MapPath("./data"), $"&#123;fileNameWithoutExt&#125;_temp.pdf");</span></span><br><span class="line"><span class="comment">//using (FileStream file = new FileStream(pdfFileName, FileMode.Create, System.IO.FileAccess.Write))</span></span><br><span class="line"><span class="comment">//    pdfStream.CopyTo(file);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> watermarkArg = <span class="keyword">new</span> WatermarkArg</span><br><span class="line">&#123;</span><br><span class="line">Watermark = <span class="string">$"* 使用者:亂馬客 *<span class="subst">&#123;Environment.NewLine&#125;</span><span class="subst">&#123;DateTime.Now.ToString(<span class="string">"yyyy/MM/dd HH:mm:ss"</span>)&#125;</span>"</span>,</span><br><span class="line">WMStyle = WatermarkStyle.FitPage,</span><br><span class="line">RotateAngle = <span class="number">0</span>,</span><br><span class="line">Opacity = <span class="number">.1</span></span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> waterStream = AddWatermark(pdfStream, watermarkArg);</span><br><span class="line"><span class="comment">//另存檔案</span></span><br><span class="line"><span class="comment">//string watermarkFileName = Path.Combine(Server.MapPath("./data"), $"&#123;fileNameWithoutExt&#125;.pdf");</span></span><br><span class="line"><span class="comment">//using (FileStream file = new FileStream(watermarkFileName, FileMode.Create, System.IO.FileAccess.Write))</span></span><br><span class="line"><span class="comment">//    waterStream.CopyTo(file);</span></span><br><span class="line"><span class="comment">//直接給Client</span></span><br><span class="line">Response.ContentType = <span class="string">"application/pdf"</span>;</span><br><span class="line">Response.AddHeader(<span class="string">"content-disposition"</span>, <span class="string">"attachment; filename="</span> + <span class="string">$"<span class="subst">&#123;fileNameWithoutExt&#125;</span>.pdf"</span>);</span><br><span class="line"><span class="keyword">var</span> fileSize = waterStream.Length;</span><br><span class="line"><span class="keyword">byte</span>[] pdfBuffer = <span class="keyword">new</span> <span class="keyword">byte</span>[(<span class="keyword">int</span>)fileSize];</span><br><span class="line">waterStream.Read(pdfBuffer, <span class="number">0</span>, (<span class="keyword">int</span>)fileSize);</span><br><span class="line">waterStream.Close();</span><br><span class="line">Response.BinaryWrite(pdfBuffer);</span><br><span class="line">Response.End();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>產生出來的 PDF 如下圖，<br><img src="/2018/07/13/2018024/onePage.png" title="[浮水印蓋滿一頁的PDF]"></p><p>2.ColumnName 自動調整，IsTextWrapped = false，列印比例設定為 90，右表頭加入 2 列(換行)，Cell 字型設定為 “標楷體”(請檢查 Windows\fonts 中是否有該字型)，浮水印水平蓋滿一頁，旋轉角度 30 度。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">btnGenPDFRepeatHorizontal_Click</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">var</span> excelArg = <span class="keyword">new</span> ExportDataTable2ExcelArg</span><br><span class="line">&#123;</span><br><span class="line">dataSource = GetDataSource(),</span><br><span class="line">HeaderCenter = <span class="string">"&amp;24 This is Report Header ..."</span>,</span><br><span class="line">HeaderRight = <span class="string">$"&amp;12 使用者:Rainmaker\r日期:<span class="subst">&#123;DateTime.Now.ToString(<span class="string">"yyyy/MM/dd HH:mm:ss"</span>)&#125;</span>"</span>,</span><br><span class="line">FooterRight = <span class="string">"&amp;10 &amp;P/&amp;N"</span>,</span><br><span class="line">ColumnInfos = <span class="keyword">new</span> Dictionary&lt;<span class="keyword">string</span>, Tuple&lt;<span class="keyword">string</span>, <span class="keyword">double</span>, Aspose.Cells.Style&gt;&gt;</span><br><span class="line">&#123;</span><br><span class="line">&#123;<span class="string">"ProductID"</span>, <span class="keyword">new</span> Tuple&lt;<span class="keyword">string</span>, <span class="keyword">double</span>, Aspose.Cells.Style&gt;(<span class="string">$"產品代號"</span>, <span class="number">-1</span>, <span class="literal">null</span>) &#125;,</span><br><span class="line">&#123;<span class="string">"ProductName"</span>, <span class="keyword">new</span> Tuple&lt;<span class="keyword">string</span>, <span class="keyword">double</span>, Aspose.Cells.Style&gt;(<span class="string">"產品名稱"</span> , <span class="number">-1</span>, <span class="literal">null</span>) &#125;,</span><br><span class="line">&#123;<span class="string">"ProductDesc"</span>, <span class="keyword">new</span> Tuple&lt;<span class="keyword">string</span>, <span class="keyword">double</span>, Aspose.Cells.Style&gt;(<span class="string">"產品描述"</span> , <span class="number">-1</span>, <span class="literal">null</span>) &#125;,</span><br><span class="line">&#123;<span class="string">"Units"</span>, <span class="keyword">new</span> Tuple&lt;<span class="keyword">string</span>, <span class="keyword">double</span>, Aspose.Cells.Style&gt;(<span class="string">"產品 庫存"</span> , <span class="number">-1</span>, <span class="literal">null</span>) &#125;,</span><br><span class="line">&#123;<span class="string">"CreDte"</span>, <span class="keyword">new</span> Tuple&lt;<span class="keyword">string</span>, <span class="keyword">double</span>, Aspose.Cells.Style&gt;(<span class="string">"日期"</span> , <span class="number">10</span>, <span class="keyword">new</span> Aspose.Cells.Style&#123; Number = <span class="number">14</span> &#125;) &#125;</span><br><span class="line">&#125;,</span><br><span class="line">PageOrientation = PageOrientationType.Landscape,</span><br><span class="line">IsTextWrapped = <span class="literal">false</span>,</span><br><span class="line">PageScale = <span class="number">80</span>,</span><br><span class="line">FontName = <span class="string">"標楷體"</span>,</span><br><span class="line">HeaderHorizontalAlignment = TextAlignmentType.Center</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> pdfStream = GenPDFFromDataTable(excelArg);</span><br><span class="line"><span class="keyword">var</span> fileNameWithoutExt = <span class="string">$"<span class="subst">&#123;Guid.NewGuid().ToString(<span class="string">"N"</span>)&#125;</span>"</span>;</span><br><span class="line"><span class="comment">//string pdfFileName = Path.Combine(Server.MapPath("./data"), $"&#123;fileNameWithoutExt&#125;_temp.pdf");</span></span><br><span class="line"><span class="comment">//using (FileStream file = new FileStream(pdfFileName, FileMode.Create, System.IO.FileAccess.Write))</span></span><br><span class="line"><span class="comment">//    pdfStream.CopyTo(file);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> watermarkArg = <span class="keyword">new</span> WatermarkArg</span><br><span class="line">&#123;</span><br><span class="line">Watermark = <span class="string">$"* 使用者:亂馬客  *<span class="subst">&#123;Environment.NewLine&#125;</span><span class="subst">&#123;DateTime.Now.ToString(<span class="string">"yyyy/MM/dd HH:mm:ss"</span>)&#125;</span>"</span>,</span><br><span class="line">WMStyle = WatermarkStyle.RepeatHorizontal,</span><br><span class="line">WatermarkHeight = <span class="number">100</span>,</span><br><span class="line">WatermarkWidth = <span class="number">130</span>,</span><br><span class="line">WatermarkHorizontalSpace = <span class="number">50</span>,</span><br><span class="line">WatermarkVerticalSpace = <span class="number">30</span>,</span><br><span class="line">RotateAngle = <span class="number">30</span>,</span><br><span class="line">Opacity = <span class="number">.1</span></span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> waterStream = AddWatermark(pdfStream, watermarkArg);</span><br><span class="line"><span class="comment">//string watermarkFileName = Path.Combine(Server.MapPath("./data"), $"&#123;fileNameWithoutExt&#125;.pdf");</span></span><br><span class="line"><span class="comment">//using (FileStream file = new FileStream(watermarkFileName, FileMode.Create, System.IO.FileAccess.Write))</span></span><br><span class="line"><span class="comment">//    waterStream.CopyTo(file);</span></span><br><span class="line">Response.ContentType = <span class="string">"application/pdf"</span>;</span><br><span class="line">Response.AddHeader(<span class="string">"content-disposition"</span>, <span class="string">"attachment; filename="</span> + <span class="string">$"<span class="subst">&#123;fileNameWithoutExt&#125;</span>.pdf"</span>);</span><br><span class="line"><span class="keyword">var</span> fileSize = waterStream.Length;</span><br><span class="line"><span class="keyword">byte</span>[] pdfBuffer = <span class="keyword">new</span> <span class="keyword">byte</span>[(<span class="keyword">int</span>)fileSize];</span><br><span class="line">waterStream.Read(pdfBuffer, <span class="number">0</span>, (<span class="keyword">int</span>)fileSize);</span><br><span class="line">waterStream.Close();</span><br><span class="line">Response.BinaryWrite(pdfBuffer);</span><br><span class="line">Response.End();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>產生出來的 PDF 如下圖，<br><img src="/2018/07/13/2018024/repeatPage.png" title="[浮水印水平蓋滿一頁的PDF]"></p><h3 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h3><p><a href="https://rainmakerho.github.io/2018/07/03/2018022/">透過 Aspose 將 datatable 的資料轉出成有浮水印的 PDF 檔</a><br><a href="https://docs.aspose.com/display/cellsnet/Setting+Page+Options" target="_blank" rel="noopener">Setting Page Options</a><br><a href="https://docs.aspose.com/display/cellsnet/Setting+Headers+and+Footers" target="_blank" rel="noopener">Setting Headers and Footers</a><br><a href="https://github.com/aspose-pdf/Aspose.PDF-for-.NET/tree/master/Examples/CSharp/AsposePDF/Stamps-Watermarks" target="_blank" rel="noopener">Aspose Stamps-Watermarks</a><br><a href="https://apireference.aspose.com/net/cells/aspose.cells/style/properties/number" target="_blank" rel="noopener">Aspose Cells Style.Number Property</a><br><a href="https://support.microsoft.com/en-us/help/264372/how-to-control-and-understand-settings-in-the-format-cells-dialog-box" target="_blank" rel="noopener">How to control and understand settings in the Format Cells dialog box in Excel</a><br><a href="https://forum.aspose.com/t/column-number-format-to-4-decimal-places/41465" target="_blank" rel="noopener">Column Number format to 4 decimal places</a></p><p>Demo 專案:<a href="https://github.com/rainmakerho/asposeExcel2PDF" target="_blank" rel="noopener">rainmakerho/asposeExcel2PDF</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;在 &lt;a href=&quot;https://rainmakerho.github.io/2018/07/03/2018022/&quot;&gt;透過 Aspos
      
    
    </summary>
    
    
      <category term="Aspose" scheme="https://rainmakerho.github.io/tags/Aspose/"/>
    
      <category term="Aspose.Cells" scheme="https://rainmakerho.github.io/tags/Aspose-Cells/"/>
    
      <category term="datatable" scheme="https://rainmakerho.github.io/tags/datatable/"/>
    
      <category term="Aspose.Pdf" scheme="https://rainmakerho.github.io/tags/Aspose-Pdf/"/>
    
      <category term="pdf" scheme="https://rainmakerho.github.io/tags/pdf/"/>
    
      <category term="watermark" scheme="https://rainmakerho.github.io/tags/watermark/"/>
    
      <category term="浮水印" scheme="https://rainmakerho.github.io/tags/%E6%B5%AE%E6%B0%B4%E5%8D%B0/"/>
    
      <category term="asp.net" scheme="https://rainmakerho.github.io/tags/asp-net/"/>
    
      <category term="Aspose.Pdf.Facades.Stamp" scheme="https://rainmakerho.github.io/tags/Aspose-Pdf-Facades-Stamp/"/>
    
  </entry>
  
  <entry>
    <title>從 Bot 送訊息到 IM Channel 時，加入額外的 Header 資訊</title>
    <link href="https://rainmakerho.github.io/2018/07/05/2018023/"/>
    <id>https://rainmakerho.github.io/2018/07/05/2018023/</id>
    <published>2018-07-05T02:45:19.000Z</published>
    <updated>2018-07-05T07:07:54.804Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>我們使用 <a href="https://github.com/rainmakerho/offline_dl" target="_blank" rel="noopener">offline_dl</a> 來達到使用 botframework 開發全地端的 Chatbot (<a href="https://rainmakerhoblog.wordpress.com/2017/08/30/20170830/" target="_blank" rel="noopener">使用 Microsoft Bot Framework 地端的 WebChat 機器人(企業內)</a>).<br>我們想要在 <a href="https://github.com/rainmakerho/offline_dl" target="_blank" rel="noopener">offline_dl</a> 中去驗證由 Bot 送過來的訊息是否可靠，所以想在 Bot 發送訊息時 (Conversations.ReplyToActivityAsync or DialogContext.PostAsync)，多加入一個 Header 的資料，來讓 <a href="https://github.com/rainmakerho/offline_dl" target="_blank" rel="noopener">offline_dl</a> 中可以去驗證。</p><h3 id="實作"><a href="#實作" class="headerlink" title="實作"></a>實作</h3><p>一開始有看到 Conversations 有一個 <a href="https://github.com/Microsoft/botbuilder-dotnet/blob/master/libraries/Microsoft.Bot.Connector/Conversations.cs#L903" target="_blank" rel="noopener">ReplyToActivityWithHttpMessagesAsync</a> Method ，可以讓我們放要額外加的 Header ，但那就要從 <a href="https://github.com/Microsoft/BotBuilder/blob/master/CSharp/Library/Microsoft.Bot.Connector.Shared/ConnectorAPI/ConversationsExtensions.cs#L333" target="_blank" rel="noopener">ReplyToActivityAsync</a> 改成 <a href="https://github.com/Microsoft/botbuilder-dotnet/blob/master/libraries/Microsoft.Bot.Connector/Conversations.cs#L903" target="_blank" rel="noopener">ReplyToActivityWithHttpMessagesAsync</a>. 那用 <a href="https://github.com/Microsoft/BotBuilder/blob/master/CSharp/Library/Microsoft.Bot.Builder/Dialogs/DialogContext.cs#L85" target="_blank" rel="noopener">DialogContext.PostAsync</a> Method 要怎麼辦呢?</p><p>參考 github 上的一些討論後發現，其實可以透過抽換 ConnectorClient 來達到我們的需求。從 Bot Call Connector 是透過 ConnectorClient 的 HttpClient 來處理的。所以只要 2 步驟就可以了哦!</p><h4 id="1-繼承自-ConnectorClient-，然後在建構子中，將我們想要加的-Header-加到-HttpClient-DefaultRequestHeaders-之中，如下。"><a href="#1-繼承自-ConnectorClient-，然後在建構子中，將我們想要加的-Header-加到-HttpClient-DefaultRequestHeaders-之中，如下。" class="headerlink" title="1.繼承自 ConnectorClient ，然後在建構子中，將我們想要加的 Header 加到 HttpClient.DefaultRequestHeaders 之中，如下。"></a>1.繼承自 ConnectorClient ，然後在建構子中，將我們想要加的 Header 加到 HttpClient.DefaultRequestHeaders 之中，如下。</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">MyConnectorClient</span> : <span class="title">ConnectorClient</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="title">MyConnectorClient</span>(<span class="params"><span class="keyword">params</span> DelegatingHandler[] handlers</span>)</span></span><br><span class="line"><span class="function">: <span class="title">base</span>(<span class="params">handlers</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">AddCustomHeaders();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">MyConnectorClient</span>(<span class="params">ServiceClientCredentials credentials, <span class="keyword">params</span> DelegatingHandler[] handlers</span>)</span></span><br><span class="line"><span class="function">:<span class="title">base</span>(<span class="params">credentials, handlers</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">AddCustomHeaders();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">MyConnectorClient</span>(<span class="params">HttpClientHandler rootHandler, <span class="keyword">params</span> DelegatingHandler[] handlers</span>) : <span class="title">base</span>(<span class="params">rootHandler, handlers</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">AddCustomHeaders();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">MyConnectorClient</span>(<span class="params">Uri baseUri, <span class="keyword">string</span> microsoftAppId = <span class="literal">null</span>, <span class="keyword">string</span> microsoftAppPassword = <span class="literal">null</span>, <span class="keyword">params</span> DelegatingHandler[] handlers</span>)</span></span><br><span class="line"><span class="function">: <span class="title">base</span>(<span class="params">baseUri, microsoftAppId, microsoftAppPassword, handlers</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">AddCustomHeaders();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">MyConnectorClient</span>(<span class="params">Uri baseUri, MicrosoftAppCredentials credentials, <span class="keyword">bool</span> addJwtTokenRefresher = <span class="literal">true</span>, <span class="keyword">params</span> DelegatingHandler[] handlers</span>)</span></span><br><span class="line"><span class="function">: <span class="title">base</span>(<span class="params">baseUri, credentials, addJwtTokenRefresher, handlers</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">AddCustomHeaders();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">MyConnectorClient</span>(<span class="params">Uri baseUri, MicrosoftAppCredentials credentials, HttpClientHandler httpClientHandler, <span class="keyword">bool</span> addJwtTokenRefresher = <span class="literal">true</span>, <span class="keyword">params</span> DelegatingHandler[] handlers</span>)</span></span><br><span class="line"><span class="function">:<span class="title">base</span>(<span class="params">baseUri, credentials, httpClientHandler, addJwtTokenRefresher, handlers</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">AddCustomHeaders();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">MyConnectorClient</span>(<span class="params">Uri uri, MicrosoftAppCredentials microsoftAppCredentials</span>)</span></span><br><span class="line"><span class="function">: <span class="title">base</span>(<span class="params">uri, microsoftAppCredentials</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">AddCustomHeaders();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">MyConnectorClient</span>(<span class="params">Uri uri</span>)</span></span><br><span class="line"><span class="function">: <span class="title">base</span>(<span class="params">uri</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">AddCustomHeaders();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">MyConnectorClient</span>(<span class="params"></span>) : <span class="title">base</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">AddCustomHeaders();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">AddCustomHeaders</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//在這裡操作 HttpClient</span></span><br><span class="line"><span class="keyword">base</span>.HttpClient.DefaultRequestHeaders.TryAddWithoutValidation(<span class="string">"x-rm"</span>, <span class="string">"rmvalue"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-透過-Autofac-將原本的-ConnectorClient-置換成-MyConnectorClient-，如下，"><a href="#2-透過-Autofac-將原本的-ConnectorClient-置換成-MyConnectorClient-，如下，" class="headerlink" title="2.透過 Autofac 將原本的 ConnectorClient 置換成 MyConnectorClient ，如下，"></a>2.透過 Autofac 將原本的 ConnectorClient 置換成 MyConnectorClient ，如下，</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Conversation.UpdateContainer(builder =&gt;</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//ConnectorClient override add custom headers</span></span><br><span class="line">builder</span><br><span class="line">.Register(c =&gt; <span class="keyword">new</span> MyConnectorClient(<span class="keyword">new</span> Uri(c.Resolve&lt;IAddress&gt;().ServiceUrl)</span><br><span class="line">, c.Resolve&lt;MicrosoftAppCredentials&gt;()))</span><br><span class="line">.As&lt;IConnectorClient&gt;()</span><br><span class="line">.InstancePerMatchingLifetimeScope(<span class="keyword">typeof</span>(DialogModule));</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><br><br>所以在 Dialog 中使用 await context.PostAsync 就會直接用到我們的 MyConnectorClient. 而如果在 Controller 中使用的話，就要將原本是 new ConnectorClient 改成 MyConnectorClient. 不然就要透過 Autofac 來建立它，如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> (<span class="keyword">var</span> scope = DialogModule.BeginLifetimeScope(Conversation.Container, message))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">var</span> RootDialog_Welcome_Message = <span class="string">"你好，我是亂馬客，很高興為您服務 ^_^"</span>;</span><br><span class="line"><span class="keyword">var</span> reply = message.CreateReply(RootDialog_Welcome_Message);</span><br><span class="line"><span class="keyword">var</span> connector = scope.Resolve&lt;IConnectorClient&gt;();</span><br><span class="line"><span class="keyword">await</span> connector.Conversations.ReplyToActivityAsync(reply);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>從 <a href="https://github.com/rainmakerho/offline_dl" target="_blank" rel="noopener">offline_dl</a> 的 v3/conversations/:conversationId/activities/:activityId log Request 的 Headers ，可以發現，它已經包含了我們新增的 Header (x-rm)了哦! 如下，<br><img src="/2018/07/05/2018023/CustomHeader.png" title="[offline_dl log Request.Headers]"></p><h3 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h3><p><a href="https://github.com/Microsoft/BotBuilder/issues/4075" target="_blank" rel="noopener">[Question] How can I override Autofac configuration to provide my own custom ConnectorClient?</a><br><a href="https://github.com/Microsoft/BotBuilder/issues/954" target="_blank" rel="noopener">Intercepting every message between bot and user</a><br><a href="https://rainmakerhoblog.wordpress.com/2017/08/30/20170830/" target="_blank" rel="noopener">使用 Microsoft Bot Framework 地端的 WebChat 機器人(企業內)</a><br><a href="https://stackoverflow.com/questions/51128475/add-custom-header-when-call-conversations-replytoactivityasync-and-dialogcontext" target="_blank" rel="noopener">Add custom header when call Conversations.ReplyToActivityAsync and DialogContext.PostAsync</a><br><a href="https://github.com/rainmakerho/offline_dl" target="_blank" rel="noopener">offline_dl</a><br><a href="https://github.com/Microsoft/BotBuilder/issues/2258" target="_blank" rel="noopener">Conversation.SendAsync Authentication using custom multi-tenant authentication (Bot Builder 3.5.2)</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;我們使用 &lt;a href=&quot;https://github.com/rainmakerho/offline_dl&quot; target=&quot;_blan
      
    
    </summary>
    
    
      <category term="botframework" scheme="https://rainmakerho.github.io/tags/botframework/"/>
    
      <category term="BotToUser" scheme="https://rainmakerho.github.io/tags/BotToUser/"/>
    
      <category term="ConnectorClient" scheme="https://rainmakerho.github.io/tags/ConnectorClient/"/>
    
      <category term="TryAddWithoutValidation" scheme="https://rainmakerho.github.io/tags/TryAddWithoutValidation/"/>
    
      <category term="Header" scheme="https://rainmakerho.github.io/tags/Header/"/>
    
  </entry>
  
  <entry>
    <title>透過 Aspose 將 datatable 的資料轉出成有浮水印的 PDF 檔</title>
    <link href="https://rainmakerho.github.io/2018/07/03/2018022/"/>
    <id>https://rainmakerho.github.io/2018/07/03/2018022/</id>
    <published>2018-07-03T07:55:15.000Z</published>
    <updated>2018-07-09T09:12:59.978Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>最近同事想要將 datatable 轉出 excel, 但又需要不能讓使用者修改，上面還要有浮水印.<br>本來想要直接 Render 出 Html 的 Table 並加入 page-break-after 去讓 Browser 分頁, 但 CSS 控制上不是很順利.</p><h3 id="實作"><a href="#實作" class="headerlink" title="實作"></a>實作</h3><p>Aspose.Cells 可以將各種資料源轉成 Excel (可參考<a href="https://apireference.aspose.com/net/cells/aspose.cells/cells/methods/index" target="_blank" rel="noopener">cells methods</a>的 Import 相關 Methods).<br>所以我們想要的做法如下，</p><p><strong>DataTable =&gt; 換 ColumnName =&gt; Excel =&gt; Pdf =&gt; Pdf+浮水印</strong></p><p>所以就可以抽一個共用的 Method 出來如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 輸入 DataTable 轉成 有浮水印 的 PDF</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="dt"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="columnNameMappings"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="folderName"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="watermark"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="pot"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span>產生的 pdf 檔名 (fullpath) <span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">string</span> <span class="title">GenPDF</span>(<span class="params">DataTable dt, Dictionary&lt;<span class="keyword">string</span>, <span class="keyword">string</span>&gt; columnNameMappings</span></span></span><br><span class="line"><span class="function"><span class="params">, <span class="keyword">string</span> folderName, <span class="keyword">string</span> watermark, PageOrientationType pot</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ChangeColumnDisplayName(dt, columnNameMappings);</span><br><span class="line"></span><br><span class="line"><span class="comment">//output file name</span></span><br><span class="line"><span class="keyword">var</span> fileNameWithoutExt = <span class="string">$"<span class="subst">&#123;Guid.NewGuid().ToString(<span class="string">"N"</span>)&#125;</span>"</span>;</span><br><span class="line"><span class="keyword">var</span> outputExcel = Path.Combine(folderName, <span class="string">$"<span class="subst">&#123;fileNameWithoutExt&#125;</span>_tmp.xlsx"</span>);</span><br><span class="line"><span class="keyword">var</span> tempPdf = Path.Combine(folderName, <span class="string">$"<span class="subst">&#123;fileNameWithoutExt&#125;</span>_tmp.pdf"</span>);</span><br><span class="line"><span class="keyword">var</span> outputPdf = Path.Combine(folderName, <span class="string">$"<span class="subst">&#123;fileNameWithoutExt&#125;</span>.pdf"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//proc excel</span></span><br><span class="line"><span class="comment">// Instantiating a Workbook object</span></span><br><span class="line"><span class="keyword">var</span> workbook = <span class="keyword">new</span> Workbook();</span><br><span class="line"><span class="keyword">var</span> worksheet = workbook.Worksheets[<span class="number">0</span>];</span><br><span class="line">worksheet.Cells.ImportDataTable(dt, <span class="literal">true</span>, <span class="string">"A1"</span>);</span><br><span class="line">worksheet.AutoFitColumns();</span><br><span class="line">worksheet.AutoFitRows();</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> range = worksheet.Cells.MaxDisplayRange;</span><br><span class="line"><span class="keyword">var</span> pageSetup = workbook.Worksheets[<span class="number">0</span>].PageSetup;</span><br><span class="line"><span class="comment">//var titleEndColumnName = CellsHelper.ColumnIndexToName(range.ColumnCount-1);</span></span><br><span class="line"><span class="comment">//pageSetup.PrintTitleColumns = $"$A:$&#123;titleEndColumnName&#125;";</span></span><br><span class="line">pageSetup.PrintTitleRows = <span class="string">"$1:$1"</span>;</span><br><span class="line">pageSetup.IsPercentScale = <span class="literal">true</span>;</span><br><span class="line">pageSetup.Orientation = pot;</span><br><span class="line"><span class="comment">//縮放比例(column 資料太長，可設定縮放比例)</span></span><br><span class="line">    <span class="comment">//pageSetup.Zoom = zoom;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//border</span></span><br><span class="line"><span class="comment">//Setting border for each cell in the range</span></span><br><span class="line"><span class="keyword">var</span> style = workbook.CreateStyle();</span><br><span class="line"><span class="keyword">var</span> colorBlack = System.Drawing.Color.Black;</span><br><span class="line">style.SetBorder(BorderType.BottomBorder, CellBorderType.Medium, colorBlack);</span><br><span class="line">style.SetBorder(BorderType.LeftBorder, CellBorderType.Medium, colorBlack);</span><br><span class="line">style.SetBorder(BorderType.RightBorder, CellBorderType.Medium, colorBlack);</span><br><span class="line">style.SetBorder(BorderType.TopBorder, CellBorderType.Medium, colorBlack);</span><br><span class="line">range.SetStyle(style);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Saving the Excel file</span></span><br><span class="line"><span class="comment">//workbook.Save(outputExcel);</span></span><br><span class="line"><span class="comment">//workbook.Save(tempPdf);</span></span><br><span class="line"><span class="comment">//save to stream</span></span><br><span class="line"><span class="keyword">var</span> pdfStream = <span class="keyword">new</span> MemoryStream();</span><br><span class="line">workbook.Save(pdfStream, Aspose.Cells.SaveFormat.Pdf);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> pdfDocument = <span class="keyword">new</span> Aspose.Pdf.Document(pdfStream);</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">string</span>.IsNullOrWhiteSpace(watermark))</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//針對 PDF 加入 Watermark</span></span><br><span class="line">Aspose.Pdf.Facades.Stamp aStamp = <span class="keyword">new</span> Aspose.Pdf.Facades.Stamp();</span><br><span class="line">aStamp.Rotation = <span class="number">45</span>;</span><br><span class="line"><span class="keyword">var</span> textStamp = <span class="keyword">new</span> TextStamp(watermark);</span><br><span class="line"><span class="comment">//set properties of the stamp</span></span><br><span class="line"><span class="comment">// textStamp.Background = true;</span></span><br><span class="line">textStamp.Opacity = <span class="number">0.2</span>;</span><br><span class="line">textStamp.TextState.FontSize = <span class="number">60.0</span>F;</span><br><span class="line">textStamp.HorizontalAlignment = HorizontalAlignment.Center;</span><br><span class="line">textStamp.VerticalAlignment = VerticalAlignment.Center;</span><br><span class="line">textStamp.RotateAngle = aStamp.Rotation;</span><br><span class="line">textStamp.TextState.Font = FontRepository.FindFont(<span class="string">"Arial"</span>);</span><br><span class="line">textStamp.TextState.ForegroundColor = Aspose.Pdf.Color.Gray;</span><br><span class="line"><span class="keyword">foreach</span> (<span class="keyword">var</span> page <span class="keyword">in</span> pdfDocument.Pages)</span><br><span class="line">&#123;</span><br><span class="line">page.AddStamp(textStamp);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">pdfDocument.Save(outputPdf);</span><br><span class="line"><span class="keyword">return</span> outputPdf;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 將目前DataTable的資料依 Dictionary 來改它的 ColumnName</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="dt"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="columnNameMappings"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">ChangeColumnDisplayName</span>(<span class="params">DataTable dt, Dictionary&lt;<span class="keyword">string</span>, <span class="keyword">string</span>&gt; columnNameMappings</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//change columnName</span></span><br><span class="line"><span class="keyword">if</span> (columnNameMappings != <span class="literal">null</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">foreach</span> (KeyValuePair&lt;<span class="keyword">string</span>, <span class="keyword">string</span>&gt; columnMapping <span class="keyword">in</span> columnNameMappings)</span><br><span class="line">&#123;</span><br><span class="line">dt.Columns[columnMapping.Key].ColumnName = columnMapping.Value;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>所以可以用測試的 DataTable 資料來測試看看，如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> DataTable <span class="title">GetDataSource</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// Instantiating a "Products" DataTable object</span></span><br><span class="line"><span class="keyword">var</span> dataTable = <span class="keyword">new</span> DataTable(<span class="string">"Products"</span>);</span><br><span class="line"><span class="comment">// Adding columns to the DataTable object</span></span><br><span class="line">dataTable.Columns.Add(<span class="string">"ProductID"</span>, <span class="keyword">typeof</span>(Int32));</span><br><span class="line">dataTable.Columns.Add(<span class="string">"ProductName"</span>, <span class="keyword">typeof</span>(<span class="keyword">string</span>));</span><br><span class="line">dataTable.Columns.Add(<span class="string">"ProductDesc"</span>, <span class="keyword">typeof</span>(<span class="keyword">string</span>));</span><br><span class="line">dataTable.Columns.Add(<span class="string">"Units"</span>, <span class="keyword">typeof</span>(Double));</span><br><span class="line"><span class="keyword">var</span> rand = <span class="keyword">new</span> Random();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">90</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">dataTable.Rows.Add(i, <span class="string">$"產品名稱-<span class="subst">&#123;i&#125;</span>"</span>, <span class="string">$"產品描述 -<span class="subst">&#123;i&#125;</span>"</span>, rand.NextDouble());</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> dataTable;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">btnGenPDF_Click</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">var</span> ds = GetDataSource();</span><br><span class="line"><span class="keyword">var</span> columnMapping = <span class="keyword">new</span> Dictionary&lt;<span class="keyword">string</span>, <span class="keyword">string</span>&gt;</span><br><span class="line">&#123;</span><br><span class="line">&#123;<span class="string">"ProductID"</span>, <span class="string">"產品代號"</span> &#125;,</span><br><span class="line">&#123;<span class="string">"ProductName"</span>, <span class="string">"產品名稱"</span> &#125;,</span><br><span class="line">&#123;<span class="string">"ProductDesc"</span>, <span class="string">"產品 描述"</span> &#125;,</span><br><span class="line"> &#123;<span class="string">"Units"</span>, <span class="string">"產品 庫存"</span> &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> outFileName = GenPDF(ds, columnMapping,</span><br><span class="line">Server.MapPath(<span class="string">"./data"</span>), <span class="string">"你好，我是亂馬客!!!"</span></span><br><span class="line">, PageOrientationType.Landscape);</span><br><span class="line">Response.Write(<span class="string">$"&lt;hr&gt;Export to Pdf-1:<span class="subst">&#123;outFileName&#125;</span>"</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> ds2 = GetDataSource();</span><br><span class="line"><span class="comment">//沒有 mapping 就用原生的 Column Name</span></span><br><span class="line"><span class="keyword">var</span> outFileName2 = GenPDF(ds2, <span class="literal">null</span>,</span><br><span class="line">Server.MapPath(<span class="string">"./data"</span>), <span class="string">""</span></span><br><span class="line">, PageOrientationType.Portrait);</span><br><span class="line">Response.Write(<span class="string">$"&lt;hr&gt;Export to Pdf-2:<span class="subst">&#123;outFileName2&#125;</span>"</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>所以產生的結果如下，<br><img src="/2018/07/03/2018022/dt2pdf.png" title="[DataTable產生pdf]"><br>註:</p><ol><li>因為使用 Aspose.Cells 及 Aspose.Pdf ，所以請記得從 Nuget 去下載哦~</li><li>有時資料欄位太多時，可以設定列印的縮放比例 pageSetup.Zoom 的值，詳細請參考<a href="https://docs.aspose.com/display/cellsnet/Setting+Page+Options#SettingPageOptions-ScalingFactor" target="_blank" rel="noopener">Scaling Factor</a></li></ol><p>Demo 專案:<a href="https://github.com/rainmakerho/asposeExcel2PDF" target="_blank" rel="noopener">rainmakerho/asposeExcel2PDF</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;最近同事想要將 datatable 轉出 excel, 但又需要不能讓使用者修改，上面還要有浮水印.&lt;br&gt;本來想要直接 Render 出 
      
    
    </summary>
    
    
      <category term="Aspose" scheme="https://rainmakerho.github.io/tags/Aspose/"/>
    
      <category term="Aspose.Cells" scheme="https://rainmakerho.github.io/tags/Aspose-Cells/"/>
    
      <category term="datatable" scheme="https://rainmakerho.github.io/tags/datatable/"/>
    
      <category term="Aspose.Pdf" scheme="https://rainmakerho.github.io/tags/Aspose-Pdf/"/>
    
      <category term="pdf" scheme="https://rainmakerho.github.io/tags/pdf/"/>
    
      <category term="watermark" scheme="https://rainmakerho.github.io/tags/watermark/"/>
    
      <category term="浮水印" scheme="https://rainmakerho.github.io/tags/%E6%B5%AE%E6%B0%B4%E5%8D%B0/"/>
    
      <category term="asp.net" scheme="https://rainmakerho.github.io/tags/asp-net/"/>
    
      <category term="Aspose.Pdf.Facades.Stamp" scheme="https://rainmakerho.github.io/tags/Aspose-Pdf-Facades-Stamp/"/>
    
  </entry>
  
  <entry>
    <title>Open Html Excel File from Aspose.Cells 透過 Aspose.Cells 開啟 Html 格式的 Excel 檔案</title>
    <link href="https://rainmakerho.github.io/2018/07/02/2018021/"/>
    <id>https://rainmakerho.github.io/2018/07/02/2018021/</id>
    <published>2018-07-02T02:41:25.000Z</published>
    <updated>2018-07-02T02:59:48.200Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>我們之前透過程式產生 Excel 檔時，是先將一份 Excel 另存成 Html 格式的檔案，然後在裡面設定一些 Tag 。<br>程式就透過去 Replace 這些 Tag 後，再將程式另存，並將檔名改成 xls 。<br>這樣使用者就可以透過 Excel 去開啟它了。<br>只是最近的 Excel 開啟這樣的檔案，都會先 alert 使用者 (可以透過調整 機碼 讓它不要 alert)。<br>那有辦法讓它變成真正的 Excel 檔，或是轉成 PDF 嗎?</p><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>我們可以透過 Aspose 的元件來處理哦! 它有提供一個 HTMLLoadOptions 可以讓我們達到這樣子的目的哦! 程式如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> filePath = <span class="string">"hr840401.xls"</span>;</span><br><span class="line"><span class="keyword">var</span> opts = <span class="keyword">new</span> HTMLLoadOptions(LoadFormat.Html);</span><br><span class="line"><span class="keyword">var</span> workbook = <span class="keyword">new</span> Workbook(filePath, opts);</span><br><span class="line">workbook.Save(<span class="string">"hr840401_out.xls"</span>);</span><br></pre></td></tr></table></figure><p>它還可以載其他的格式哦，詳細可以參考<a href="https://apireference.aspose.com/net/pdf/aspose.pdf/loadformat" target="_blank" rel="noopener">Aspose LoadFormat Enumeration</a></p><h3 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h3><p><a href="https://forum.aspose.com/t/open-excel-html-file/44690/3" target="_blank" rel="noopener">Open Excel/html file</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;我們之前透過程式產生 Excel 檔時，是先將一份 Excel 另存成 Html 格式的檔案，然後在裡面設定一些 Tag 。&lt;br&gt;程式就透
      
    
    </summary>
    
    
      <category term="aspose" scheme="https://rainmakerho.github.io/tags/aspose/"/>
    
      <category term="aspose.cells" scheme="https://rainmakerho.github.io/tags/aspose-cells/"/>
    
      <category term="Html" scheme="https://rainmakerho.github.io/tags/Html/"/>
    
      <category term="Excell" scheme="https://rainmakerho.github.io/tags/Excell/"/>
    
  </entry>
  
  <entry>
    <title>IBotDataStore.FlushAsync Exception: The data is changed</title>
    <link href="https://rainmakerho.github.io/2018/07/01/2018020/"/>
    <id>https://rainmakerho.github.io/2018/07/01/2018020/</id>
    <published>2018-07-01T03:29:38.000Z</published>
    <updated>2018-07-01T04:06:36.657Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>最新有個需求就是要判斷目前 User 是不是在進行某項作業, 如果不是就推送包含 Button 的訊息給 User, 不然就推文字通知訊息等目前的作業完成後，再顯示待辦的 Button 訊息給 User .</p><h3 id="研究"><a href="#研究" class="headerlink" title="研究"></a>研究</h3><p>最簡單的就是將這個 flag 寫在 BotState 之中，所以我們可以在使用者加入時，將它的 Conversation 記錄下來，如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (message.Type == ActivityTypes.ConversationUpdate)</span><br><span class="line">&#123;</span><br><span class="line">Func&lt;ChannelAccount, <span class="keyword">bool</span>&gt; isChatbot =</span><br><span class="line">channelAcct =&gt; channelAcct.Id == message.Recipient.Id;</span><br><span class="line"><span class="keyword">if</span> (message.MembersAdded.Any(isChatbot))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">var</span> memberAdded = message.MembersAdded.FirstOrDefault();</span><br><span class="line"><span class="comment">//這裡請自行處理將該 user 的 Conversation 儲存起來，為了方便，這裡將它存在一個變數之中</span></span><br><span class="line">WebApiApplication._ConversationReference = message.ToConversationReference();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然後在申請作業記錄這個 Flag ，當然，結束時請記得將這個 Flag 清除哦!</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> (<span class="keyword">var</span> scope = DialogModule.BeginLifetimeScope(Conversation.Container, context.Activity.AsMessageActivity()))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">var</span> botDataStore = scope.Resolve&lt;IBotDataStore&lt;BotData&gt;&gt;();</span><br><span class="line"><span class="keyword">var</span> key = Address.FromActivity(context.Activity);</span><br><span class="line"><span class="keyword">var</span> botUserData = <span class="keyword">await</span> botDataStore.LoadAsync(key, BotStoreType.BotUserData, <span class="keyword">default</span>(CancellationToken));</span><br><span class="line">botUserData.SetProperty&lt;<span class="keyword">string</span>&gt;(<span class="string">"dialog"</span>, <span class="string">"RootDialog:MessageReceivedAsync"</span>);</span><br><span class="line"><span class="keyword">await</span> botDataStore.SaveAsync(key, BotStoreType.BotUserData, botUserData, <span class="keyword">default</span>(CancellationToken));</span><br><span class="line"><span class="keyword">await</span> botDataStore.FlushAsync(key, <span class="keyword">default</span>(CancellationToken));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可是執行時，卻發生了「Exception: The data is changed」的錯誤，如下圖，<br><img src="/2018/07/01/2018020/eDataChanged.png" title="[Exception: The data is changed]"></p><p>因為 botframework 會自動去幫我們將 State 存檔，所以當它存檔時，發現狀態被改掉了，所以就出現「Exception: The data is changed」的錯誤 .</p><p>嗯, 那怎麼辦呢? 那就調整程式, 不要去呼叫 FlushAsync, 讓 botframework 去存就可以了, 所以程式調整如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> (<span class="keyword">var</span> scope = DialogModule.BeginLifetimeScope(Conversation.Container, context.Activity.AsMessageActivity()))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">var</span> botDataStore = scope.Resolve&lt;IBotDataStore&lt;BotData&gt;&gt;();</span><br><span class="line"><span class="keyword">var</span> key = Address.FromActivity(context.Activity);</span><br><span class="line"><span class="keyword">var</span> botUserData = <span class="keyword">await</span> botDataStore.LoadAsync(key, BotStoreType.BotUserData, <span class="keyword">default</span>(CancellationToken));</span><br><span class="line">botUserData.SetProperty&lt;<span class="keyword">string</span>&gt;(<span class="string">"dialog"</span>, <span class="string">"RootDialog:MessageReceivedAsync"</span>);</span><br><span class="line"><span class="keyword">await</span> botDataStore.SaveAsync(key, BotStoreType.BotUserData, botUserData, <span class="keyword">default</span>(CancellationToken));</span><br><span class="line">    <span class="comment">//await botDataStore.FlushAsync(key, default(CancellationToken));</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>所以我們的通知程式就可以透過 ConversationReference 轉回 Activity, 取回 BotState, 例如，我新增一個 api method 來顯示 BotState , 如下,</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">Route(<span class="meta-string">"api/Messages/GetDialogData"</span>)</span>]</span><br><span class="line">[<span class="meta">HttpGet</span>]</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task&lt;HttpResponseMessage&gt; <span class="title">GetDialogData</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">var</span> resp = <span class="keyword">new</span> HttpResponseMessage(HttpStatusCode.OK);</span><br><span class="line"><span class="keyword">if</span> (WebApiApplication._ConversationReference != <span class="literal">null</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">var</span> message = WebApiApplication._ConversationReference.GetPostToBotMessage();</span><br><span class="line"><span class="keyword">using</span> (<span class="keyword">var</span> scope = DialogModule.BeginLifetimeScope(Conversation.Container, message.AsMessageActivity()))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">var</span> botDataStore = scope.Resolve&lt;IBotDataStore&lt;BotData&gt;&gt;();</span><br><span class="line"><span class="keyword">var</span> key = Address.FromActivity(message);</span><br><span class="line"><span class="keyword">var</span> botUserData = <span class="keyword">await</span> botDataStore.LoadAsync(key, BotStoreType.BotUserData, <span class="keyword">default</span>(CancellationToken));</span><br><span class="line"><span class="keyword">var</span> dialogData = botUserData.GetProperty&lt;<span class="keyword">string</span>&gt;(<span class="string">"dialog"</span>);</span><br><span class="line">resp.Content = <span class="keyword">new</span> StringContent(<span class="string">$"&lt;html&gt;&lt;body&gt;Dialogs:<span class="subst">&#123;dialogData&#125;</span>&lt;/body&gt;&lt;/html&gt;"</span>, System.Text.Encoding.UTF8, <span class="string">@"text/html"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> resp;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>所以在 Dialog 中儲存 State 時 , 可以注意一下這種狀況哦 ^_^</p><p>Demo 專案可以參考 <a href="https://github.com/rainmakerho/Exception_DataChanged" target="_blank" rel="noopener">rainmakerho/Exception_DataChanged</a></p><h3 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h3><p><a href="https://stackoverflow.com/questions/42860020/microsoft-bot-framework-exception-the-data-is-changed" target="_blank" rel="noopener">Microsoft Bot Framework: Exception: The data is changed</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;最新有個需求就是要判斷目前 User 是不是在進行某項作業, 如果不是就推送包含 Button 的訊息給 User, 不然就推文字通知訊息等
      
    
    </summary>
    
    
      <category term="botframework" scheme="https://rainmakerho.github.io/tags/botframework/"/>
    
      <category term="IBotDataStore" scheme="https://rainmakerho.github.io/tags/IBotDataStore/"/>
    
      <category term="FlushAsync" scheme="https://rainmakerho.github.io/tags/FlushAsync/"/>
    
      <category term="The data is changed" scheme="https://rainmakerho.github.io/tags/The-data-is-changed/"/>
    
  </entry>
  
  <entry>
    <title>Implement global message handlers and resets the dialog stack</title>
    <link href="https://rainmakerho.github.io/2018/06/05/2018019/"/>
    <id>https://rainmakerho.github.io/2018/06/05/2018019/</id>
    <published>2018-06-05T01:45:23.000Z</published>
    <updated>2018-06-05T06:42:55.874Z</updated>
    
    <content type="html"><![CDATA[<p>在 <a href="https://docs.microsoft.com/en-us/azure/bot-service/dotnet/bot-builder-dotnet-global-handlers?view=azure-bot-service-3.0" target="_blank" rel="noopener">Implement global message handlers</a> 有說明如何透過 global message handlers 來處理一些 help, cancel 等等的全域處理。例如在一個對話當中，使用者輸入了取得待批示的指令，這時需要將處理待批示清單的 Dialog 叫出來，並且將目前處理中的對話堆疉清除(this.task.Reset())。</p><p>這裡要注意的是 this.task.Reset() 一定要放在最後面，不然會噴錯哦! 例如，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">async</span> Task <span class="title">PostAsync</span>(<span class="params">IActivity item, <span class="keyword">string</span> state, CancellationToken token</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> message = item <span class="keyword">as</span> IMessageActivity;</span><br><span class="line">    <span class="keyword">if</span> (message != <span class="literal">null</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">var</span> settingsDialog = <span class="keyword">new</span> SettingsDialog();</span><br><span class="line">        <span class="keyword">var</span> interruption = settingsDialog.Void&lt;<span class="keyword">object</span>, IMessageActivity&gt;();</span><br><span class="line">        <span class="keyword">this</span>.task.Call(interruption, <span class="literal">null</span>);</span><br><span class="line">        <span class="keyword">await</span> <span class="keyword">this</span>.task.PollAsync(token);</span><br><span class="line">        <span class="comment">// 要清除 DialogStack 的話，請加上 this.task.Reset()</span></span><br><span class="line">        <span class="keyword">this</span>.task.Reset();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>另外，如果無法在繼承 ScorableBase 的 Class 中去 Reset DialogStack 的話。<br>在 Dialog 中則可以透過 context.EndConversation 去清 DialogStack (非常感謝同事 Marty 的分享)，如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">context.EndConversation(EndOfConversationCodes.CompletedSuccessfully);</span><br><span class="line">context.Done&lt;<span class="keyword">string</span>&gt;(<span class="literal">null</span>);</span><br></pre></td></tr></table></figure><p>也可以參考 <a href="https://stackoverflow.com/questions/39113403/terminate-all-dialogs-and-exit-conversation-in-ms-bot-framework-when-the-user-ty/39160430" target="_blank" rel="noopener">Terminate all dialogs and exit conversation in MS Bot Framework when the user types “exit”, “quit” etc</a> 的方式，如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> (<span class="keyword">var</span> scope = DialogModule.BeginLifetimeScope(Conversation.Container, (IMessageActivity)context.Activity))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">var</span> botData = scope.Resolve&lt;IBotData&gt;();</span><br><span class="line"><span class="keyword">await</span> botData.LoadAsync(<span class="keyword">default</span>(CancellationToken));</span><br><span class="line"><span class="keyword">var</span> stack = scope.Resolve&lt;IDialogStack&gt;();</span><br><span class="line">stack.Reset();</span><br><span class="line"><span class="keyword">await</span> botData.FlushAsync(<span class="keyword">default</span>(CancellationToken));</span><br><span class="line">&#125;</span><br><span class="line">context.Done&lt;<span class="keyword">string</span>&gt;(<span class="literal">null</span>);</span><br></pre></td></tr></table></figure><p>如果在 Dialog 中直接 call context.Reset(); 可是會噴錯的哦!</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在 &lt;a href=&quot;https://docs.microsoft.com/en-us/azure/bot-service/dotnet/bot-builder-dotnet-global-handlers?view=azure-bot-service-3.0&quot; targe
      
    
    </summary>
    
    
      <category term="botframework" scheme="https://rainmakerho.github.io/tags/botframework/"/>
    
      <category term="IDialogTask" scheme="https://rainmakerho.github.io/tags/IDialogTask/"/>
    
      <category term="ScorableBase" scheme="https://rainmakerho.github.io/tags/ScorableBase/"/>
    
  </entry>
  
  <entry>
    <title>Access BotState when use custom BotDataStore</title>
    <link href="https://rainmakerho.github.io/2018/06/04/2018018/"/>
    <id>https://rainmakerho.github.io/2018/06/04/2018018/</id>
    <published>2018-06-04T08:06:11.000Z</published>
    <updated>2018-06-04T08:31:12.303Z</updated>
    
    <content type="html"><![CDATA[<p>botframework 預設會將 State 存到 state.botframework.com 上去(使用 emulator 則會存在 emulator 上面)。<br><img src="/2018/06/04/2018018/defaultBotStore.png" title="[defaultBotStore.png]"></p><p>目前的 .NET Samples 也都改成使用 InMemoryDataStore 的方式，使用方式如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">Application_Start</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//加以下這一段Codes</span></span><br><span class="line">Conversation.UpdateContainer(</span><br><span class="line">   builder =&gt;</span><br><span class="line">   &#123;</span><br><span class="line">   <span class="comment">//in Memory store</span></span><br><span class="line">   <span class="keyword">var</span> store = <span class="keyword">new</span> InMemoryDataStore();</span><br><span class="line">   builder.Register(c =&gt; <span class="keyword">new</span> CachingBotDataStore(store,</span><br><span class="line">  CachingBotDataStoreConsistencyPolicy.LastWriteWins))</span><br><span class="line">  .As&lt;IBotDataStore&lt;BotData&gt;&gt;()</span><br><span class="line">  .AsSelf()</span><br><span class="line">  .SingleInstance();</span><br><span class="line">   &#125;);</span><br><span class="line"><span class="comment">//加以上這一段Codes</span></span><br><span class="line"></span><br><span class="line">GlobalConfiguration.Configure(WebApiConfig.Register);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>您也可以將 State 存到 SQL 之中，可以參考 <a href="https://blog.botframework.com/2017/07/26/saving-state-sql-dotnet/" target="_blank" rel="noopener">Saving State data in SQL with .NET</a>.<br>所以從 Emulator 來看就會看不到 getUserData 及 setUserData 的 event，如下圖，<br><img src="/2018/06/04/2018018/inMemoryBotStore.png" title="[BotDataStore 讀自 inMemoryBotStore]"></p><p>當您使用客製的 DataStore 後，Access BotDataStore 就不能直接用 var stateClient = activity.GetStateClient() 。而是要透過 DialogModule.BeginLifetimeScope 來取得，如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> (<span class="keyword">var</span> scope = DialogModule.BeginLifetimeScope(Conversation.Container, activity))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">var</span> botDataStore = scope.Resolve&lt;IBotDataStore&lt;BotData&gt;&gt;();</span><br><span class="line"><span class="keyword">var</span> key = Address.FromActivity(activity);</span><br><span class="line"><span class="keyword">var</span> chatbotData = <span class="keyword">await</span> botDataStore.LoadAsync(key, BotStoreType.BotUserData, CancellationToken.None);</span><br><span class="line"><span class="keyword">int</span> ties = chatbotData.GetProperty&lt;<span class="keyword">int</span>&gt;(<span class="string">"ties"</span>);</span><br><span class="line"><span class="comment">//...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>刪除資料就透過 RemoveProperty 來刪除，如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> (<span class="keyword">var</span> scope = DialogModule.BeginLifetimeScope(Conversation.Container, activity))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">var</span> botDataStore = scope.Resolve&lt;IBotDataStore&lt;BotData&gt;&gt;();</span><br><span class="line"><span class="keyword">var</span> key = Address.FromActivity(activity);</span><br><span class="line"><span class="keyword">var</span> chatbotData = <span class="keyword">await</span> botDataStore.LoadAsync(key, BotStoreType.BotUserData , CancellationToken.None);</span><br><span class="line">chatbotData.RemoveProperty(<span class="string">"ties"</span>);</span><br><span class="line"><span class="keyword">await</span> botDataStore.SaveAsync(key, BotStoreType.BotUserData, chatbotData, CancellationToken.None);</span><br><span class="line"><span class="keyword">await</span> botDataStore.FlushAsync(key, CancellationToken.None);</span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;botframework 預設會將 State 存到 state.botframework.com 上去(使用 emulator 則會存在 emulator 上面)。&lt;br&gt;&lt;img src=&quot;/2018/06/04/2018018/defaultBotStore.png&quot;
      
    
    </summary>
    
    
      <category term="botframework" scheme="https://rainmakerho.github.io/tags/botframework/"/>
    
      <category term="BotDataStore" scheme="https://rainmakerho.github.io/tags/BotDataStore/"/>
    
      <category term="autofac" scheme="https://rainmakerho.github.io/tags/autofac/"/>
    
      <category term="DialogModule.BeginLifetimeScope" scheme="https://rainmakerho.github.io/tags/DialogModule-BeginLifetimeScope/"/>
    
  </entry>
  
  <entry>
    <title>談談 MSDTC 的問題</title>
    <link href="https://rainmakerho.github.io/2018/05/16/2018017/"/>
    <id>https://rainmakerho.github.io/2018/05/16/2018017/</id>
    <published>2018-05-16T03:01:04.000Z</published>
    <updated>2018-05-16T03:27:03.392Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>MSDTC 不通，無法啟用 MSDTC，協力電腦異動管理員已經停用了對遠端/網路異動的支援，現在看見 MSDTC 真是頭大呀 ~~~</p><h3 id="解決"><a href="#解決" class="headerlink" title="解決"></a>解決</h3><p>昨天客戶的系統有一個請假功能忽然就無法沒有作用，但其他功能是好的。詢問客戶之前有做了些什麼嗎? 客戶說只有一台 switch 壞掉，換新的 siwtch 而已。當下真覺那會不會是網路動了什麼，所以一到客戶那就試看看到底是什麼問題。最後從 log 中發現「MSDTC」的問題。立馬試了 ap <-> db ，用 name 是否可以 ping 得到，結果是可以的。詢問客戶網管，ap <-> db 是否有什麼 rule 擋了那些 port 呢?<br>記得 MSDTC 需要 port 135, ping icmp, 如果有 firewall 的話，要設定某 Port Range 給它，例如 port 5001-6000(可以參考<a href="https://blogs.technet.microsoft.com/askcore/2014/04/29/how-to-configure-msdtc-to-use-a-specific-port-in-windows-server-20122012r2/" target="_blank" rel="noopener">How to Configure MSDTC to Use a Specific Port in Windows Server 2012/2012R2</a> )。可是網管說沒有擋那些 Port 呀!!!<br>正當一籌莫展之時，客戶的 DBA 詢問說，那 ap 跟 db 本身的 firewall 有沒有開呀!?<br>疑 !!! 檢查了一下，真是有開呢? 先將它關閉試看看，MSDTC 果然就通了。真的非常感謝客戶 IT 的幫忙。</-></-></p><p>回到這問題，下次 MSDTC 問題呢? 還是要先從 ap，db 的環境來看 firewall，都沒問題後，再往外去查。附上我們公司整理 MSDTC 排除的相關文件，希望對大家在排除 MSDTC 上有所益助。</p><a href="/2018/05/16/2018017/故障排除指南.doc" title="[MSSQLDTC 故障排除指南.doc]">[MSSQLDTC 故障排除指南.doc]</a><a href="/2018/05/16/2018017/MSDTC.doc" title="[MSDTC.doc]">[MSDTC.doc]</a><a href="/2018/05/16/2018017/CRDSUPPORT3406.txt" title="[協力電腦異動管理員已經停用了對遠端/網路異動的支援.txt]">[協力電腦異動管理員已經停用了對遠端/網路異動的支援.txt]</a>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;MSDTC 不通，無法啟用 MSDTC，協力電腦異動管理員已經停用了對遠端/網路異動的支援，現在看見 MSDTC 真是頭大呀 ~~~&lt;/p&gt;
      
    
    </summary>
    
    
      <category term="MSDTC" scheme="https://rainmakerho.github.io/tags/MSDTC/"/>
    
      <category term="firewall" scheme="https://rainmakerho.github.io/tags/firewall/"/>
    
      <category term="協力電腦異動管理員已經停用了對遠端/網路異動的支援" scheme="https://rainmakerho.github.io/tags/%E5%8D%94%E5%8A%9B%E9%9B%BB%E8%85%A6%E7%95%B0%E5%8B%95%E7%AE%A1%E7%90%86%E5%93%A1%E5%B7%B2%E7%B6%93%E5%81%9C%E7%94%A8%E4%BA%86%E5%B0%8D%E9%81%A0%E7%AB%AF-%E7%B6%B2%E8%B7%AF%E7%95%B0%E5%8B%95%E7%9A%84%E6%94%AF%E6%8F%B4/"/>
    
  </entry>
  
  <entry>
    <title>透過 Microsoft BotFramework-WebChat 的 botchat.js 連接 Botframework 做的 Chatbot ，輕鬆整合到 Web Application 之中</title>
    <link href="https://rainmakerho.github.io/2018/05/10/2018016/"/>
    <id>https://rainmakerho.github.io/2018/05/10/2018016/</id>
    <published>2018-05-10T07:12:02.000Z</published>
    <updated>2018-05-10T09:12:55.987Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>  我們透過 Microsoft BotFramework 來製作 Chatbot 程式後，除了可以接各透的 IM Channel 外，最快速的就是將它整合到現有的 Web Application 之中。<a href="https://github.com/Microsoft/BotFramework-WebChat" target="_blank" rel="noopener">Microsoft BotFramework-WebChat</a> 已有提供範例讓我們去整合。<br>  但是一般的網站並不需要一下子就顯示 WebChat ，而是在下方需要一個機器人的小圖示，按下去之後再顯示出 WebChat 。</p><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>  依上面的需求，我們需要 2 個 div, 一個放網頁下方的小圖示(WebChatButton), 另一個是放 WebChat (WebChatDialog)。<br>  所以預設的 html 如下，<br>  <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ID</span>=<span class="string">"WebChatButtonD"</span> <span class="attr">onclick</span>=<span class="string">"開啟WebChat的function"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"WebChatDialog"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>  透過 botchat.js 來建立 WebChat 需要一些設定值，所以就先定訂這些設定值的 interface ，如下，<br>  <figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">interface</span> IBotChatUIConfig &#123;</span><br><span class="line">  botId: <span class="built_in">string</span>, </span><br><span class="line">  botName: <span class="built_in">string</span>,</span><br><span class="line">  userId: <span class="built_in">string</span>,</span><br><span class="line">  userName: <span class="built_in">string</span>,</span><br><span class="line">  botChatIconUrl: <span class="built_in">string</span>, <span class="comment">//下方機器人的圖示</span></span><br><span class="line">  chatTitle: <span class="built_in">string</span>, <span class="comment">// WebChat Header 的文字</span></span><br><span class="line">  directLineOptions: <span class="built_in">any</span>, <span class="comment">//DirectLine 的設定</span></span><br><span class="line">  locale: <span class="built_in">string</span>,  <span class="comment">//語系</span></span><br><span class="line">  showWebChatButton: <span class="built_in">boolean</span> <span class="comment">// 是否顯示下方的機器人圖示 </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>  再來可以透過 BotChatUI 來封裝要一開始顯示出網頁下方的機器人圖示，按下後，要開啟 WebChat ，而按下 WebChat 的 Header 後，要將 WebChat Hide 起來，並顯示出機器人的圖示。<br>  <img src="https://github.com/rainmakerho/WebChatCustomization/raw/master/init.png" alt="開始的畫面"><br>  另外，我們也可以透過調整 css 來讓 WebChat 長的不一樣，例如我們可以在 WebChat 中也顯示機器人的圖示。<br>  <img src="https://github.com/rainmakerho/WebChatCustomization/raw/master/chating.png" alt="開啟 WebChat 畫面"></p><p>  所以在即有的 Web Application 之中只要加入 <a href="https://github.com/rainmakerho/WebChatCustomization" target="_blank" rel="noopener">WebChatCustomization</a> 的 Botchat 目錄中的檔案，然後在要加入 WebChat 的網頁中加入以下的 Script 及設定您要的值，您就會有美美的 WebChat 了哦!<br>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- chatbot --&gt;</span><br><span class="line">&lt;link href=<span class="string">"Botchat/CSS/botchat.css"</span> rel=<span class="string">"stylesheet"</span> /&gt;</span><br><span class="line">&lt;link href=<span class="string">"Botchat/CSS/botchat-fullwindow.css"</span> rel=<span class="string">"stylesheet"</span> /&gt;</span><br><span class="line">&lt;link href=<span class="string">"Botchat/CSS/botchatCustom.css"</span> rel=<span class="string">"stylesheet"</span> /&gt;</span><br><span class="line">&lt;script src=<span class="string">"Botchat/Scripts/botchat-es5.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;script src=<span class="string">"Botchat/Scripts/BotChatUI.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">var</span> botChatUI = <span class="keyword">new</span> BotChatUI(&#123;</span><br><span class="line">botId: <span class="string">'RainmakerBot'</span>,</span><br><span class="line">botName: <span class="string">'小亂機器人'</span>,</span><br><span class="line">userId: <span class="string">'Rainmaker'</span>,</span><br><span class="line">userName: <span class="string">'亂馬客'</span>,</span><br><span class="line">chatTitle: <span class="string">'小亂機器人, 按我可縮小'</span>,</span><br><span class="line">locale: <span class="string">'zh-tw'</span>,</span><br><span class="line">directLineOptions: &#123;</span><br><span class="line">secret: <span class="string">''</span>,</span><br><span class="line">token: <span class="string">''</span>,</span><br><span class="line">domain: <span class="string">'http://localhost:3000/directline/gssbot'</span>,</span><br><span class="line">pollingInterval: <span class="number">1000</span>,</span><br><span class="line">webSocket: <span class="literal">false</span></span><br><span class="line">&#125;,</span><br><span class="line">botChatIconUrl: <span class="string">'https://avatars2.githubusercontent.com/u/11240907?s=400&amp;u=597a9c2ae536885dae848ed245dc2dfb591a8c28&amp;v=4'</span>,</span><br><span class="line">showWebChatButton: <span class="literal">true</span></span><br><span class="line">&#125;);</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;!-- chatbot --&gt;</span></span><br></pre></td></tr></table></figure></p><p>  因為我想讓 IE 也可以 run ，所以我加入的是 botchat-es5.js。如果您不考慮 IE 的話，可以使用 botchat.js。<br>  在 BotChatUI.ts 中，有特別處理，開啟 WebChat 時才建立 DirectLine 及 WebChat，關閉 WebChat 時，會先儲存 DirectLine 的 ConversationId，並 close 連線。重新開啟 WebChat 時，才知道原本的 ConversationId 是什麼，重新將原本的內容 Load 回來。<br>  為什麼要這樣子呢? 因為我們是使用 <a href="https://github.com/rainmakerho/offline_dl" target="_blank" rel="noopener">offline Direct Line</a>，目前還不 Support WebSocket ，所以 WebChat 會一直 Polling。所以當關掉 WebChat 時，DirectLine close 後，它就不會再 polling。<br>  那要怎麼讓它重新再連線呢? 目前我們的做法是將原本的 WebChat 移掉再重新建立。詳細可以參考 <a href="https://github.com/rainmakerho/WebChatCustomization/blob/master/BotChatClient/Botchat/TypeScripts/BotChatUI.ts" target="_blank" rel="noopener">BotChatUI.ts</a> startConversation / endConversation functions。<br>  而重新連的方式，如果有更好的方式會更新上去，如果大家知道的話，也請跟大家分享。</p><h3 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h3><p><a href="https://github.com/rainmakerho/WebChatCustomization" target="_blank" rel="noopener">WebChatCustomization</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;  我們透過 Microsoft BotFramework 來製作 Chatbot 程式後，除了可以接各透的 IM Channel 外，最快
      
    
    </summary>
    
    
      <category term="BotFramework-WebChat" scheme="https://rainmakerho.github.io/tags/BotFramework-WebChat/"/>
    
      <category term="botchat.js" scheme="https://rainmakerho.github.io/tags/botchat-js/"/>
    
      <category term="Botframework" scheme="https://rainmakerho.github.io/tags/Botframework/"/>
    
      <category term="Web Application" scheme="https://rainmakerho.github.io/tags/Web-Application/"/>
    
      <category term="DirectLine" scheme="https://rainmakerho.github.io/tags/DirectLine/"/>
    
  </entry>
  
  <entry>
    <title>Replace JSON 字串中的屬性值 (Replace JSON Value String)</title>
    <link href="https://rainmakerho.github.io/2018/04/17/2018015/"/>
    <id>https://rainmakerho.github.io/2018/04/17/2018015/</id>
    <published>2018-04-17T13:12:50.000Z</published>
    <updated>2018-04-17T13:30:41.556Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>  同事需要將一個 JSON 字串，裡面屬性值需要透過 Replace 的方式，來置換新的內容。但那些內容之中包含一些 JSON 的保留字，例如 / // 等字串。所以字串 Replace 之後，透過 JObject.Parse 去處理就報錯了。<br>  <figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> tmpJsonStringBefore = <span class="string">@"&#123;s:""@s""&#125;"</span>;</span><br><span class="line"><span class="keyword">var</span> o = JObject.Parse(tmpJsonStringBefore);</span><br><span class="line"><span class="keyword">var</span> s = <span class="string">"A\" string !@#$%^&amp;*()&#123;&#125;:\"?/?/|\"':&gt;;&gt;&lt;&#123;\"d\":\"v\" value"</span>;</span><br><span class="line"><span class="keyword">var</span> tmpJsonAfter = tmpJsonStringBefore.Replace(<span class="string">"@s"</span>, s);</span><br><span class="line"><span class="keyword">var</span> tmpJson = JObject.Parse(tmpJsonAfter);</span><br><span class="line">Console.WriteLine(tmpJson.ToString());</span><br></pre></td></tr></table></figure></p><p>  以上的 Code 一執行就會出「<em>Newtonsoft.Json.JsonReaderException: ‘After parsing a value an unexpected character was encountered: s. Path ‘s’, line 1, position 7.’</em>」</p><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>  這時我們需要針對內容來做 Encode ，可以透過 HttpUtility.JavaScriptStringEncode (加入 System.Web 參考)，如下，<br>  <figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> tmpJsonStringBefore = <span class="string">@"&#123;s:""@s""&#125;"</span>;</span><br><span class="line"><span class="keyword">var</span> o = JObject.Parse(tmpJsonStringBefore);</span><br><span class="line"><span class="keyword">var</span> s = <span class="string">"A\" string !@#$%^&amp;*()&#123;&#125;:\"?/?/|\"':&gt;;&gt;&lt;&#123;\"d\":\"v\" value"</span>;</span><br><span class="line"><span class="keyword">var</span> encodeS = HttpUtility.JavaScriptStringEncode(s);</span><br><span class="line"><span class="keyword">var</span> tmpJsonAfter = tmpJsonStringBefore.Replace(<span class="string">"@s"</span>, encodeS);</span><br><span class="line"><span class="keyword">var</span> tmpJson = JObject.Parse(tmpJsonAfter);</span><br><span class="line">Console.WriteLine(tmpJson.ToString());</span><br></pre></td></tr></table></figure></p><p>  執行結果如下圖，<br>  <img src="/2018/04/17/2018015/2018015001.png" title="HttpUtility.JavaScriptStringEncode"> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;  同事需要將一個 JSON 字串，裡面屬性值需要透過 Replace 的方式，來置換新的內容。但那些內容之中包含一些 JSON 的保留字，
      
    
    </summary>
    
    
      <category term="JSON" scheme="https://rainmakerho.github.io/tags/JSON/"/>
    
      <category term="Replace" scheme="https://rainmakerho.github.io/tags/Replace/"/>
    
      <category term="special character" scheme="https://rainmakerho.github.io/tags/special-character/"/>
    
      <category term="JavaScriptStringEncode" scheme="https://rainmakerho.github.io/tags/JavaScriptStringEncode/"/>
    
  </entry>
  
</feed>
