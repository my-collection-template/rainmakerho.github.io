<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>亂馬客 - 技術得來速</title>
  <icon>https://www.gravatar.com/avatar/cd3aed042ccd7a5a5d9956b0bc07dc81</icon>
  <subtitle>技術得來速</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://rainmakerho.github.io/"/>
  <updated>2018-04-10T03:10:22.368Z</updated>
  <id>https://rainmakerho.github.io/</id>
  
  <author>
    <name>亂馬客</name>
    <email>rainmaker_ho@gss.com.tw</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>OWASP ZAP 憑證安裝的方式(OWASP ZAP Certificate)</title>
    <link href="https://rainmakerho.github.io/2018/04/10/2018014/"/>
    <id>https://rainmakerho.github.io/2018/04/10/2018014/</id>
    <published>2018-04-10T01:36:19.000Z</published>
    <updated>2018-04-10T03:10:22.368Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>  透過 ZAP 去錄 https 時，如果沒有安裝憑證時，在 Browser 就會出現「 “Your connection is not private”, “你的連線並不安全”」的警告訊息，如下圖所示。<br>  <img src="/2018/04/10/2018014/2018014001.png" alt="Chrome的警告" title="Chrome的警告"> </p>  <img src="/2018/04/10/2018014/2018014002.png" alt="Firefox的警告" title="Firefox的警告"> <h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>  為什麼會出現那個警告訊息呢? 因為 Browser 用的那個憑證已經不是原本連接的那個 host 的憑證，而變成了 OWASP Zed Attack Proxy Root CA 了哦! 而這個憑證並沒有被電腦 Trust 所以就會有那個警告訊息哦!<br>  那要怎麼辦呢? 就是把憑證裝進去電腦的信任區。<br>  以下我們就一步步來說明，</p><h4 id="1-儲存-ZAP-憑證"><a href="#1-儲存-ZAP-憑證" class="headerlink" title="1.儲存 ZAP 憑證"></a>1.儲存 ZAP 憑證</h4><p>  開啟 OWASP ZAP ，Tools -&gt; Options -&gt; Dynamic SSL Certificates -&gt; Save<br>  <img src="/2018/04/10/2018014/2018014003.png" alt="儲存 ZAP 憑證" title="儲存 ZAP 憑證"> </p><h4 id="2-匯入-ZAP-憑證"><a href="#2-匯入-ZAP-憑證" class="headerlink" title="2.匯入 ZAP 憑證"></a>2.匯入 ZAP 憑證</h4><p>  DbClick剛才儲存的憑證檔，按下「Install Certificate…」，並將憑證存到「Trusted Root Certification Authorities」之中，如下，<br>  <img src="/2018/04/10/2018014/2018014004.png" alt="Certificate Import Wizard" title="Certificate Import Wizard"> </p><p>  記得要將憑證存到「Trusted Root Certification Authorities」之中<br>  <img src="/2018/04/10/2018014/2018014005.png" alt="存到「Trusted Root Certification Authorities」" title="存到「Trusted Root Certification Authorities」"> </p><p>  最後按下 Finish 就可以了哦!<br>  <img src="/2018/04/10/2018014/2018014006.png" alt="Import 完成" title="Import 完成"> </p><h4 id="Firefox-匯入-ZAP-憑證"><a href="#Firefox-匯入-ZAP-憑證" class="headerlink" title="Firefox 匯入 ZAP 憑證"></a>Firefox 匯入 ZAP 憑證</h4><p>  因為 firefox 憑證是自已管理的，所以 firefox 也要匯入 ZAP 憑證 ，如果會用 firefox 來錄的話，可以省略這步哦!<br>  firefox 選項 -&gt; 隱私權與安全性 (或在網址列輸入 about:preferences#privacy) -&gt; 檢視憑證<br>  <img src="/2018/04/10/2018014/2018014007.png" alt="隱私權與安全性" title="隱私權與安全性"> </p><p>  匯入 ZAP 憑證<br>  <img src="/2018/04/10/2018014/2018014008.png" alt="匯入 ZAP 憑證" title="匯入 ZAP 憑證"> </p><p>  勾選「信任此憑證機構以識別網站」<br>  <img src="/2018/04/10/2018014/2018014009.png" alt="勾選「信任此憑證機構以識別網站」" title="勾選「信任此憑證機構以識別網站」"> </p><p>  註:透過上述的方式，我們就可以錄 https 的網站，而不會一直出現警告訊息。 如果不會再錄的話，就請記得將 ZAP 的憑證移除哦!</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;  透過 ZAP 去錄 https 時，如果沒有安裝憑證時，在 Browser 就會出現「 “Your connection is not 
      
    
    </summary>
    
    
      <category term="ZAP" scheme="https://rainmakerho.github.io/tags/ZAP/"/>
    
      <category term="Certificate" scheme="https://rainmakerho.github.io/tags/Certificate/"/>
    
      <category term="Chrome" scheme="https://rainmakerho.github.io/tags/Chrome/"/>
    
      <category term="Firefox" scheme="https://rainmakerho.github.io/tags/Firefox/"/>
    
      <category term="Foxproxy" scheme="https://rainmakerho.github.io/tags/Foxproxy/"/>
    
      <category term="ERR_CERT_AUTHORITY_INVALID" scheme="https://rainmakerho.github.io/tags/ERR-CERT-AUTHORITY-INVALID/"/>
    
      <category term="Your connection is not private" scheme="https://rainmakerho.github.io/tags/Your-connection-is-not-private/"/>
    
      <category term="你的連線並不安全" scheme="https://rainmakerho.github.io/tags/%E4%BD%A0%E7%9A%84%E9%80%A3%E7%B7%9A%E4%B8%A6%E4%B8%8D%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>DataGrid 在 ASP.NET 4 的分頁導致第一個欄位會變很寬</title>
    <link href="https://rainmakerho.github.io/2018/04/03/2018013/"/>
    <id>https://rainmakerho.github.io/2018/04/03/2018013/</id>
    <published>2018-04-03T08:44:16.000Z</published>
    <updated>2018-04-03T10:02:08.644Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>最近同事將原本是 ASP.NET 1.1 的程式升級到 .NET 4，但是在 DataGrid 的分頁 postback 後，它的 colspan 就不見了。<br>會讓原本第一行的欄寬變的跟 footer 的分頁一樣寬，如下圖，<br><img src="/2018/04/03/2018013/2018013001.png" alt="DataGrid Paging colspan 問題" title="DataGrid Paging colspan 問題"> </p><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>想說會不會有人跟我們有一樣的狀況，公司中有很多人都不可置信，ASP.NET 1.1 可以升到 .NET 4.0 。<br>不過，還真的找到了「<a href="https://jwcooney.com/2012/01/11/asp-net-gridview-paging-problem-paging-increases-the-first-column-width/" target="_blank" rel="external">ASP.NET GridView Paging Problem – Paging Increases the First Column Width</a>」這篇。<br>它是在 .NET 2.0 遇到的問題，原來只要在 PreRender 時，設定 Footer 的 colspan 就好了，所以程式如下，</p><pre><code class="vb"><span class="comment">'請在 PreRender 加這一段，解決 DataGrid Footer 分頁在 .NET 4.x 中 ColSpan 問題 ...  </span><span class="keyword">If</span> <span class="keyword">Me</span>.AllowPaging <span class="keyword">AndAlso</span> <span class="keyword">Me</span>.Controls.Count &gt; <span class="number">0</span> <span class="keyword">Then</span>    <span class="keyword">Dim</span> tbl <span class="keyword">As</span> Table = <span class="built_in">CType</span>(<span class="keyword">Me</span>.Controls(<span class="number">0</span>), Table)    <span class="keyword">Dim</span> pagerRow <span class="keyword">As</span> TableRow = tbl.Rows(tbl.Rows.Count - <span class="number">1</span>)    <span class="keyword">Dim</span> colSpanCount <span class="keyword">as</span> <span class="built_in">String</span> = tbl.Rows(<span class="number">1</span>).Cells.Count.ToString()    pagerRow.Cells(<span class="number">0</span>).Attributes.Add(<span class="string">"colspan"</span>, colSpanCount)<span class="keyword">End</span> <span class="keyword">If</span></code></pre><p>希望對想要使用 DataGrid 在 asp.net 4.0 上使用的人有所幫助。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;最近同事將原本是 ASP.NET 1.1 的程式升級到 .NET 4，但是在 DataGrid 的分頁 postback 後，它的 cols
      
    
    </summary>
    
    
      <category term="DataGrid" scheme="https://rainmakerho.github.io/tags/DataGrid/"/>
    
      <category term=".net 4" scheme="https://rainmakerho.github.io/tags/net-4/"/>
    
      <category term="Paging" scheme="https://rainmakerho.github.io/tags/Paging/"/>
    
      <category term="colspan" scheme="https://rainmakerho.github.io/tags/colspan/"/>
    
      <category term="first column" scheme="https://rainmakerho.github.io/tags/first-column/"/>
    
  </entry>
  
  <entry>
    <title>SmtpConnection.GetConnection NullReferenceException</title>
    <link href="https://rainmakerho.github.io/2018/03/14/2018012/"/>
    <id>https://rainmakerho.github.io/2018/03/14/2018012/</id>
    <published>2018-03-14T02:07:16.000Z</published>
    <updated>2018-03-14T03:05:46.287Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>最近同事問一個透過 SmtpClient 寄信的問題，因為客戶移機，所以將原本在 Windows 2008 x64 上的程式移到，Windows 2016 上去。<br>我們的程式是 .NET 3.5 ，所以在移機上並不會有什麼問題。<br>測試上都 OK，就只有一支執行檔在寄發 Mail 時，會發生 NullReferenceException: Object reference not set to an instance of an object. ，如下，</p><blockquote><p>System.Net.Mail.SmtpConnection.GetConnection  &lt;System.NullReferenceException&gt; 並未將物件參考設定為物件的執行個體<br>  at System.Net.Mail.SmtpClient.Send  &lt;System.Net.Mail.SmtpException&gt; 傳送郵件失敗。<br>  於 System.Net.Mail.SmtpClient.Send(MailMessage message) </p></blockquote><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>於是寫了測試程式來測試，卻是 OK 的，如下<br><figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> smpt = <span class="keyword">new</span> System.Net.Mail.SmtpClient();</div><div class="line">smpt.Host = <span class="string">"mail.rm.com.tw"</span>;</div><div class="line"><span class="keyword">var</span> credentials = <span class="keyword">new</span> NetworkCredential(<span class="string">"rainmaker_ho"</span>, <span class="string">""</span>);</div><div class="line"><span class="keyword">var</span> msg = <span class="keyword">new</span> System.Net.Mail.MailMessage();</div><div class="line">smpt.Credentials = credentials;</div><div class="line">msg.From = <span class="keyword">new</span> MailAddress(<span class="string">"rainmaker_ho@mail.rm.com.tw"</span>);</div><div class="line">msg.Subject = <span class="string">"subject"</span>;</div><div class="line">msg.Body = <span class="string">"body"</span>;</div><div class="line">msg.To.Add(<span class="keyword">new</span> MailAddress(<span class="string">"rainmaker_ho@mail.rm.com.tw"</span>));</div><div class="line"><span class="keyword">try</span></div><div class="line">&#123;</div><div class="line">smpt.Send(msg);</div><div class="line">&#125;</div><div class="line"><span class="keyword">catch</span> (Exception e)</div><div class="line">&#123;</div><div class="line">Console.WriteLine(e.ToString());</div><div class="line"><span class="keyword">throw</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>大家可以發現，NetworkCredential 只 Assign 使用者代號，使用者密碼是給空字串。<br>有些 mail server 是允許發給內部使用者時，不需要驗證的(有點像是撥打內網不用付費)。<br>模擬執行檔去呼叫也沒問題。<br>而錯誤訊息(SmtpConnection.GetConnection NullReferenceException)也叫人不知如何是好 …<br>正當絕望之際，忽然想到，我的測試程式預設是使用 .NET 4.6 ，而我的執行檔是 .NET 3.5 的。<br>於是將測試程式切到 .NET 3.5 一試，一樣的錯誤出現了 …<br><img src="/2018/03/14/2018012/2018012001.png" alt="SmtpConnection.GetConnection NullReferenceException" title="SmtpConnection.GetConnection NullReferenceException"><br>於是再將 NetworkCredential 的使用者代號也給空字串，再測試就沒有問題了。<br>以這個問題的解法有2個，</p><ol><li>如果不需要驗證的話，NetworkCredential 的使用者及密碼都給空字串。</li><li>設定執行檔的 config ，讓它走 .NET 4.0 因為這樣子的狀況，在 .NET 4.0 是沒問題的。<blockquote><p>&lt;startup&gt;&lt;supportedRuntime version=”v4.0” sku=”.NETFramework,Version=v4.0”/&gt;&lt;/startup&gt;</p></blockquote></li></ol><p>嗯… 不過，為什麼舊的 Windows 2008 Server 卻不會有這種問題呢? 筆者在另一台 Windows 2008 R2 Server 上試也是 GG 。<br>以下是 Windows 2008 Server 上關於 .net 3.5 的更新，<br><img src="/2018/03/14/2018012/2018012002.png" alt="Windows 2008 Server .net 3.5 的更新" title="Windows 2008 Server .net 3.5 的更新"> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;最近同事問一個透過 SmtpClient 寄信的問題，因為客戶移機，所以將原本在 Windows 2008 x64 上的程式移到，Windo
      
    
    </summary>
    
    
      <category term="NullReferenceException" scheme="https://rainmakerho.github.io/tags/NullReferenceException/"/>
    
      <category term="SmtpClient" scheme="https://rainmakerho.github.io/tags/SmtpClient/"/>
    
      <category term="SmtpConnection.GetConnection" scheme="https://rainmakerho.github.io/tags/SmtpConnection-GetConnection/"/>
    
      <category term=".net" scheme="https://rainmakerho.github.io/tags/net/"/>
    
      <category term="NetworkCredential" scheme="https://rainmakerho.github.io/tags/NetworkCredential/"/>
    
      <category term="password" scheme="https://rainmakerho.github.io/tags/password/"/>
    
      <category term="empty" scheme="https://rainmakerho.github.io/tags/empty/"/>
    
  </entry>
  
  <entry>
    <title>System.NullReferenceException when Aspose.Pdf.License.SetLicense(String licenseName)</title>
    <link href="https://rainmakerho.github.io/2018/03/13/2018011/"/>
    <id>https://rainmakerho.github.io/2018/03/13/2018011/</id>
    <published>2018-03-13T06:54:05.000Z</published>
    <updated>2018-03-14T02:08:58.990Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>最近在 Web 使用 Aspose.Pdf 來產生文件時，有時候會忽然出現 <em>System.NullReferenceException</em> 的錯誤。<br>而錯誤的地方居然是在 License.SetLicense 的 Method，如下，<br>System.NullReferenceException: 並未將物件參考設定為物件的執行個體。<br>    於 .(Stream )<br>    於 .(String , Assembly )<br>    於 Aspose.Pdf.License.SetLicense(String licenseName)</p><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>直覺來看應該是 License 檔案壞了，所以請同事更新 License 檔，再執行就好了。<br>可是過沒多久，又發生一樣的問題。<br>我們操作 Aspose 元件的方式是，一開始先設定 License ，再建立要使用的元件，如下，<br><figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> lic = <span class="keyword">new</span> License();</div><div class="line">lic.SetLicense(<span class="string">"aspose.total.lic"</span>);</div><div class="line"><span class="keyword">var</span> pdfDoc = <span class="keyword">new</span> Document(<span class="string">@"c:\xx\node.pdf"</span>);</div></pre></td></tr></table></figure></p><p>在網路上似乎也有人談到這種問題。或許在 Web 環境中，又有多執行緒下所造成的。<br>所以在 Page_Load 中寫了以下的程式來測試，果然馬上出現 NullReferenceException 的錯誤，如下，<br><figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">Parallel.For(<span class="number">0</span>, <span class="number">10</span>, <span class="keyword">delegate</span> (<span class="keyword">int</span> i)</div><div class="line">&#123;</div><div class="line">    <span class="keyword">try</span></div><div class="line">    &#123;</div><div class="line">        <span class="keyword">var</span> lic = <span class="keyword">new</span> License();</div><div class="line">        lic.SetLicense(<span class="string">"aspose.total.lic"</span>);</div><div class="line">        <span class="keyword">var</span> pdfDoc = <span class="keyword">new</span> Document(<span class="string">@"c:\xx\node.pdf"</span>);</div><div class="line">        Debug.WriteLine(<span class="string">$"<span class="subst">&#123;i&#125;</span>:<span class="subst">&#123;pdfDoc.IsLinearized&#125;</span>"</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">catch</span> (Exception ex)</div><div class="line">    &#123;</div><div class="line">        ebug.WriteLine(<span class="string">$"<span class="subst">&#123;i&#125;</span>:<span class="subst">&#123;ex&#125;</span>"</span>);</div><div class="line">    &#125;</div><div class="line">&#125;);</div><div class="line"><span class="keyword">var</span> pdfDocx = <span class="keyword">new</span> Document(<span class="string">@"c:\xx\node.pdf"</span>);</div><div class="line">Response.Write(pdfDocx.IsLinearized);</div></pre></td></tr></table></figure></p><p>這個問題原廠已記錄在未來應該會修正這個問題。<br>而目前的話，如果設定 License 的話，就在 global.asax 中的 Application_Start Event 設定即可。<br>在其他地方就不需要再設定 License ，以免出現 NullReferenceException 。<br><figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">Application_Start</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>)</span></div><div class="line"><span class="function"></span>&#123;</div><div class="line"><span class="keyword">var</span> licPdf = <span class="keyword">new</span> License();</div><div class="line">licPdf.SetLicense(<span class="string">"aspose.total.lic"</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;最近在 Web 使用 Aspose.Pdf 來產生文件時，有時候會忽然出現 &lt;em&gt;System.NullReferenceExceptio
      
    
    </summary>
    
    
      <category term="Aspose" scheme="https://rainmakerho.github.io/tags/Aspose/"/>
    
      <category term="SetLicense" scheme="https://rainmakerho.github.io/tags/SetLicense/"/>
    
      <category term="NullReferenceException" scheme="https://rainmakerho.github.io/tags/NullReferenceException/"/>
    
  </entry>
  
  <entry>
    <title>透過 WinDbg 來找出 ASP.NET CPU 100% ASP.NET 程式的問題</title>
    <link href="https://rainmakerho.github.io/2018/03/05/2018010/"/>
    <id>https://rainmakerho.github.io/2018/03/05/2018010/</id>
    <published>2018-03-05T06:19:38.000Z</published>
    <updated>2018-03-31T01:09:32.803Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>我們有一個 ASP.NET 的系統部署到 IIS 上(Windows 2012, .NET 4.x)，有時候會導致 w3wp.exe 吃掉所有的 CPU 資源，一直要等到應用程式回收後，程式再重新啟動後就正常了。這種狀況不定期會發生。 </p><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>我們可以使用 WinDbg 來找出導致 IIS CPU 100% 的原因，方法如下， </p><ul><li><p>透過「工作管理員」來「建立傾印檔案」<br>當發生 IIS 導致 CPU 100% 時，開啟「工作管理員」，按右鍵選取「建立傾印檔案」。要依 Web 應用程式的平台(x86/x64)來開啟「工作管理員」(x86的工作管理員在 C:\Windows\SysWOW64\taskmgr.exe )。</p></li><li><p>安裝 WinDbg<br>請參考 <a href="https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/" target="_blank" rel="external">Debugging Tools for Windows (WinDbg, KD, CDB, NTSD)</a> 來安裝對應的版本。</p></li><li><p>設定 Symbol Path<br>先建立一個 C:\RTX64_SYMBOLS 目錄(依您自行定義)，然後開啟 Command 設定 _NT_SYMBOL_PATH 的環境變數，如下，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">set _NT_SYMBOL_PATH=srv*C:\RTX64_SYMBOLS*https://msdl.microsoft.com/download/symbols</div></pre></td></tr></table></figure><img src="/2018/03/05/2018010/201801001.png" alt="set _NT_SYMBOL_PATH" title="set _NT_SYMBOL_PATH"> <p>所以在 command 中，輸入 set 後，就可以看到 _NT_SYMBOL_PATH 的設定值哦，</p><img src="/2018/03/05/2018010/201801002.png" alt="_NT_SYMBOL_PATH" title="_NT_SYMBOL_PATH"> <p>當然，如果常常會用到的話，就直接設定到 環境變數之前，下次 debug 時，就不用再設定一次了哦! 詳細請參考<a href="https://www.hanselman.com/blog/SetUpYourSystemToUseMicrosoftsPublicSymbolServer.aspx" target="_blank" rel="external">Set up your system to use Microsoft’s public Symbol Server</a></p></li><li><p>在 WinDbg 中找問題</p><ul><li><p>載入 sos.dll</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">.load C:\Windows\Microsoft.NET\Framework64\v4.0.30319\sos.dll</div></pre></td></tr></table></figure><p>WinDbg 有 x86/x64 的版本，我是使用 x64 的版本，所以 sos.dll 的路徑是 C:\Windows\Microsoft.NET\Framework64\v4.0.30319\sos.dll，您輸入如果發生錯誤的話，請使用 C:\Windows\Microsoft.NET\Framework\v4.0.30319\sos.dll 。</p></li><li><p>設定 Symbol 檔目錄</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">!sym noisy</div><div class="line">.cordll -ve -u  -l</div></pre></td></tr></table></figure></li><li><p>透過 !runaway 顯示Threads所佔的時間<br>輸入 !runaway 後，會顯示各 Thread 所花費的時間，花最多的會在最上面，如下圖，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">!runaway</div></pre></td></tr></table></figure><img src="/2018/03/05/2018010/201801003.png" alt="!runaway" title="!runaway"></li><li><p>透過 ~[thread]s 切換到該 thread 的位置<br>由上圖所示，Thread 40 佔最多時間，所以我們切到它的位罝去，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">~40s</div></pre></td></tr></table></figure><img src="/2018/03/05/2018010/201801004.png" alt="~40s" title="~40s"></li><li><p>透過 !clrstack 來查看呼叫堆疉</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">!clrstack</div></pre></td></tr></table></figure><img src="/2018/03/05/2018010/201801005.png" alt="!clrstack" title="!clrstack"><p>從上圖可以發現，應該是有關 Dictionary 操作的問題，而它是由我們系統中 TemplateCfg.initial() 這個 Method 所引起的。</p></li></ul></li><li><p>檢視並調整程式碼<br>開啟 TemplateCfg 程式碼，在 initial 這個 Method 之中會建立 Dictionary 物件，Clear 它，並 Insert 資料，但這些 Dictionary 的變數卻又設定成 static 。</p><img src="/2018/03/05/2018010/201801006.png" alt="TemplateCfg.initial()" title="TemplateCfg.initial()"><p>即然這些 Dictionary 是 static 的，而且它們值又都是相同的，就沒有必要每次 request 時，就重新建立並 insert 這些資料。<br>所以將 initial 裡面的 Code 搬到  static constructor 。<br>調整完程式碼後，從去年觀察到目前，已經沒有再發生 CPU 100% 的狀況。</p></li></ul><h3 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h3><p><a href="http://improve.dk/debugging-in-production-part-1-analyzing-100-cpu-usage-using-windbg/" target="_blank" rel="external">Debugging in Production Part 1 - Analyzing 100% CPU Usage Using Windbg</a><br><a href="http://blog.darkthread.net/post-2017-02-20-windbg-to-find-aspnet-cpu-high.aspx" target="_blank" rel="external">WinDBG 應用實例：找出 ASP.NET CPU 100% 原因</a><br><a href="https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/" target="_blank" rel="external">Debugging Tools for Windows (WinDbg, KD, CDB, NTSD)</a><br><a href="https://www.hanselman.com/blog/SetUpYourSystemToUseMicrosoftsPublicSymbolServer.aspx" target="_blank" rel="external">Set up your system to use Microsoft’s public Symbol Server</a><br><a href="https://channel9.msdn.com/Series/-NET-Debugging-Stater-Kit-for-the-Production-Environment/High-CPU-Hangs-05" target="_blank" rel="external">High CPU Hangs - 05</a><br><a href="http://www.infoq.com/cn/articles/architecture-practice-13-windbg" target="_blank" rel="external">中小型研发团队架构实践：生产环境诊断利器WinDbg帮你快速分析异常情况Dump文件</a><br><a href="https://blogs.msdn.microsoft.com/kaevans/2011/04/11/intro-to-windbg-for-net-developers/" target="_blank" rel="external">Intro to WinDBG for .NET Developers</a><br><a href="https://blogs.msdn.microsoft.com/tess/2008/02/27/net-debugging-demos-lab-4-high-cpu-hang-review/" target="_blank" rel="external">.NET Debugging Demos Lab 4: High CPU Hang – Review</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;我們有一個 ASP.NET 的系統部署到 IIS 上(Windows 2012, .NET 4.x)，有時候會導致 w3wp.exe 吃掉所
      
    
    </summary>
    
    
      <category term="IIS" scheme="https://rainmakerho.github.io/tags/IIS/"/>
    
      <category term="CPU" scheme="https://rainmakerho.github.io/tags/CPU/"/>
    
      <category term="100%" scheme="https://rainmakerho.github.io/tags/100/"/>
    
      <category term="WinDbg" scheme="https://rainmakerho.github.io/tags/WinDbg/"/>
    
      <category term="ASP.NE" scheme="https://rainmakerho.github.io/tags/ASP-NE/"/>
    
      <category term="w3wp.exe" scheme="https://rainmakerho.github.io/tags/w3wp-exe/"/>
    
  </entry>
  
  <entry>
    <title>無法載入檔案或組件 &#39;log4net, Version=1.2.10.0, Culture=neutral, PublicKeyToken=692fbea5521e1304&#39; 或其相依性的其中之一。</title>
    <link href="https://rainmakerho.github.io/2018/02/14/2018009/"/>
    <id>https://rainmakerho.github.io/2018/02/14/2018009/</id>
    <published>2018-02-14T14:12:46.000Z</published>
    <updated>2018-03-14T03:08:54.691Z</updated>
    
    <content type="html"><![CDATA[<p>最近同事詢問他們使用 Crytal Report Viewer 時，會發生 log4net 版本衝突的問題。如下圖所示， </p><img src="/2018/02/14/2018009/2018009001.png" alt="CrystalReportViewer Runtime Error" title="CrystalReportViewer Runtime Error"> <p>如果是不同版本衝突的話，可以參考 <a href="https://dotblogs.com.tw/rainmaker/2015/11/25/153805" target="_blank" rel="external">如何讓不同 PublicKeyToken 的 DLL assemblyBinding 到可以用版本?</a> 透過 assemblyBinding 的方式就可以解決。 但剛好我們的 AP 自已用的 log4net 版本也是 1.2.10.0，所以是 <strong>相同版本，不同的 PublickToken</strong> 的衝突。 詳細訊息如下， </p><p><em>沒有辦法解決 “log4net, Version=1.2.10.0, Culture=neutral, PublicKeyToken=1b44e1d426115821” 和 “log4net, Version=1.2.10.0, Culture=neutral, PublicKeyToken=692fbea5521e1304” 之間的衝突。<br>任意選擇 “log4net, Version=1.2.10.0, Culture=neutral, PublicKeyToken=1b44e1d426115821”。</em>  </p><p>有查到 <a href="https://stackoverflow.com/questions/11673383/error-could-not-load-log4net-assembly" target="_blank" rel="external">Error: Could not load log4net assembly</a> 似乎是因為不同的平台(x86/x64) 所用的 log4net 會不同。<br>x86(32位元)用的 PublicToken 是 692fbea5521e1304，x64(64位元)或是 AnyCPU 用的 PublicToken 則是 1b44e1d426115821。<br>而我們 ap 平台是 x64 的，但 Crystal Report Viewer 卻使用了 x86(32位元) 的 log4net 。</p><p>… 我想應該是那裡設定出了錯吧 … </p><p>同事說只有在某台機器上才會出現那個錯誤，如果是透過 Browser 直接使用系統就正常，透過 VS.NET 啟動程式去 Debug 時，就會出現那個錯誤。<br>我想是因為如果透過 Browser 去使用系統的話，是連到 IIS ，而 IIS 設定的是 x64(64位元);如果透過 VS.NET 則是連到 IIS Express，預設它是使用 x86(32位元)。<br>於是筆者將 IIS 上的應用程式集區設定成 啟用 32 位元，再執行程式，則一樣會出現 log4net 的衝突狀況(ya. 重現問題了 …)。<br>所以就請同事在 VS.NET 中設定讓 IIS Express 使用 64 位元就沒問題了哦!<br>工具 -&gt; 選項 -&gt; (search textbox 中輸入 iis) , 並勾選 將 64 位元版本的 IIS Express 用於網站和專案(U) 選項勾起來就可以了哦! 如下，<br><img src="/2018/02/14/2018009/2018009002.png" alt="將 64 位元版本的 IIS Express 用於網站和專案(U)" title="將 64 位元版本的 IIS Express 用於網站和專案(U)"> </p><p>如果您是系統出了錯，請 Check 應用程式集區是否設定成了 「啟用32位元應用程式」哦!</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近同事詢問他們使用 Crytal Report Viewer 時，會發生 log4net 版本衝突的問題。如下圖所示， &lt;/p&gt;
&lt;img src=&quot;/2018/02/14/2018009/2018009001.png&quot; alt=&quot;CrystalReportViewer 
      
    
    </summary>
    
    
      <category term="log4net" scheme="https://rainmakerho.github.io/tags/log4net/"/>
    
      <category term="1.2.10.0" scheme="https://rainmakerho.github.io/tags/1-2-10-0/"/>
    
      <category term="692fbea5521e1304" scheme="https://rainmakerho.github.io/tags/692fbea5521e1304/"/>
    
      <category term="1b44e1d426115821" scheme="https://rainmakerho.github.io/tags/1b44e1d426115821/"/>
    
  </entry>
  
  <entry>
    <title>Bot Framework Custom Error Messages and Exception Handling</title>
    <link href="https://rainmakerho.github.io/2018/02/13/2018008/"/>
    <id>https://rainmakerho.github.io/2018/02/13/2018008/</id>
    <published>2018-02-13T03:06:26.000Z</published>
    <updated>2018-02-13T03:50:53.010Z</updated>
    
    <content type="html"><![CDATA[<p>使用 Bot Framework 開發 Bot 時，當發生 Exception 時，會出現 <strong>“Sorry, my bot code is having an issue.”</strong> ，那如果我們要自行處理錯誤呢? 可以參考<a href="https://desflanagan.wordpress.com/2017/09/01/bot-framework-custom-error-messages-and-exception-handling/" target="_blank" rel="external">Bot Framework Custom Error Messages and Exception Handling, Autofac</a>，一個是建立一個 ExceptionHandleDialog 去包，另一個是俢改 PostUnhandledExceptionToUser 這個 Class ，然後再透過 Autofac 來置換成我們的 Class。 </p><p>所以作者建立一個「PostUnhandledExceptionToUserOverrideTask」如下，<br><figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PostUnhandledExceptionToUserOverrideTask</span> : <span class="title">IPostToBot</span></div><div class="line">&#123;</div><div class="line"><span class="keyword">private</span> <span class="keyword">readonly</span> ResourceManager resources;</div><div class="line"><span class="keyword">private</span> <span class="keyword">readonly</span> IPostToBot inner;</div><div class="line"><span class="keyword">private</span> <span class="keyword">readonly</span> IBotToUser botToUser;</div><div class="line"><span class="keyword">private</span> <span class="keyword">readonly</span> TraceListener trace;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="title">PostUnhandledExceptionToUserOverrideTask</span>(<span class="params">IPostToBot inner, IBotToUser botToUser, ResourceManager resources, TraceListener trace</span>)</span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">SetField.NotNull(<span class="keyword">out</span> <span class="keyword">this</span>.inner, <span class="keyword">nameof</span>(inner), inner);</div><div class="line">SetField.NotNull(<span class="keyword">out</span> <span class="keyword">this</span>.botToUser, <span class="keyword">nameof</span>(botToUser), botToUser);</div><div class="line">SetField.NotNull(<span class="keyword">out</span> <span class="keyword">this</span>.resources, <span class="keyword">nameof</span>(resources), resources);</div><div class="line">SetField.NotNull(<span class="keyword">out</span> <span class="keyword">this</span>.trace, <span class="keyword">nameof</span>(trace), trace);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task <span class="title">PostAsync</span>(<span class="params">IActivity activity, CancellationToken token</span>)</span></div><div class="line"><span class="function"></span>&#123;</div><div class="line"><span class="keyword">try</span></div><div class="line">&#123;</div><div class="line"><span class="keyword">await</span> inner.PostAsync(activity, token);</div><div class="line">&#125;</div><div class="line"><span class="keyword">catch</span> (Exception)</div><div class="line">&#123;</div><div class="line"><span class="keyword">try</span></div><div class="line">&#123;</div><div class="line"><span class="keyword">await</span> botToUser.PostAsync(<span class="string">"An Error Has Occurred....."</span>, cancellationToken: token);</div><div class="line">&#125;</div><div class="line"><span class="keyword">catch</span> (Exception inner)</div><div class="line">&#123;</div><div class="line">trace.WriteLine(inner);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">throw</span>;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>而作者是調整 DialogModule 中，將 PostUnhandledExceptionToUser 改成 PostUnhandledExceptionToUserOverrideTask，所以在 Global.asax.cs 中重新呼叫 RegisterAdapterChain 去 Replace，如下<br><figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">builder</div><div class="line">.RegisterKeyedType&lt;PostUnhandledExceptionToUserOverrideTask, IPostToBot&gt;()</div><div class="line">.InstancePerLifetimeScope();</div><div class="line"></div><div class="line">builder</div><div class="line">.RegisterAdapterChain&lt;IPostToBot&gt;</div><div class="line">(</div><div class="line"><span class="keyword">typeof</span>(EventLoopDialogTask),</div><div class="line"><span class="keyword">typeof</span>(SetAmbientThreadCulture),</div><div class="line"><span class="keyword">typeof</span>(QueueDrainingDialogTask),</div><div class="line"><span class="keyword">typeof</span>(PersistentDialogTask),</div><div class="line"><span class="keyword">typeof</span>(ExceptionTranslationDialogTask),</div><div class="line"><span class="keyword">typeof</span>(SerializeByConversation),</div><div class="line"><span class="keyword">typeof</span>(PostUnhandledExceptionToUserOverrideTask),</div><div class="line"><span class="keyword">typeof</span>(LogPostToBot)</div><div class="line">)</div><div class="line">.InstancePerLifetimeScope();</div></pre></td></tr></table></figure></p><p>另一個方式則是直接將 PostUnhandledExceptionToUser 置換成 PostUnhandledExceptionToUserOverrideTask，如下，<br><figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">builder</div><div class="line">.RegisterKeyedType&lt;PostUnhandledExceptionToUserOverrideTask, IPostToBot&gt;()</div><div class="line">.InstancePerLifetimeScope();</div><div class="line"></div><div class="line"><span class="comment">//在 Autofac 中 Key 為 typeof(PostUnhandledExceptionToUser) 的 Service 從 PostUnhandledExceptionToUser 改成我們寫的 PostUnhandledExceptionToUserOverrideTask</span></div><div class="line">builder</div><div class="line">.RegisterType&lt;PostUnhandledExceptionToUserOverrideTask&gt;()</div><div class="line">.Keyed&lt;IPostToBot&gt;(<span class="keyword">typeof</span>(PostUnhandledExceptionToUser))</div><div class="line">.InstancePerLifetimeScope();</div></pre></td></tr></table></figure></p><p>所以可以看到原本的 PostUnhandledExceptionToUser 已經被我們改成了 PostUnhandledExceptionToUserOverrideTask了，如下圖，<br><img src="/2018/02/13/2018008/2018008001.png" alt="LogPostToBot RegisterAdapterChain" title="LogPostToBot RegisterAdapterChain"> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;使用 Bot Framework 開發 Bot 時，當發生 Exception 時，會出現 &lt;strong&gt;“Sorry, my bot code is having an issue.”&lt;/strong&gt; ，那如果我們要自行處理錯誤呢? 可以參考&lt;a href=&quot;http
      
    
    </summary>
    
    
      <category term="botframework" scheme="https://rainmakerho.github.io/tags/botframework/"/>
    
      <category term="custom error" scheme="https://rainmakerho.github.io/tags/custom-error/"/>
    
      <category term="exception handling" scheme="https://rainmakerho.github.io/tags/exception-handling/"/>
    
      <category term="PostUnhandledExceptionToUser" scheme="https://rainmakerho.github.io/tags/PostUnhandledExceptionToUser/"/>
    
      <category term="IPostToBot" scheme="https://rainmakerho.github.io/tags/IPostToBot/"/>
    
      <category term="DialogModule" scheme="https://rainmakerho.github.io/tags/DialogModule/"/>
    
  </entry>
  
  <entry>
    <title>The bot&#39;s MSA appId or password is incorrect.</title>
    <link href="https://rainmakerho.github.io/2018/02/01/2018007/"/>
    <id>https://rainmakerho.github.io/2018/02/01/2018007/</id>
    <published>2018-02-01T03:52:05.000Z</published>
    <updated>2018-02-01T05:48:31.390Z</updated>
    
    <content type="html"><![CDATA[<p>今天使用 botframework-emulator 在 local 測試 bot 時， botframework-emulator 居然出現 The bot’s MSA appId or password is incorrect. 的錯誤，如下圖，<br><img src="/2018/02/01/2018007/2018007001.png" alt="MSA_appId/password is incorrect" title="MSA_appId/password is incorrect"><br>我輸入的 App Id 跟 Password 明明就是從 web.config 中 Copy 出來的呀~ 之前都 Run 的好好的，現在居然噴錯。  </p><p>於是使用 Fiddler 來錄一下看看是什麼狀況，如下圖，<br><img src="/2018/02/01/2018007/2018007002.png" alt="Fiddler" title="Fiddler"> </p><p>從上圖可以發現， botframework-emulator 會依 bot 的 MSA appId 及 password 到 <a href="https://login.microsoftonline.com/botframework.com/oauth2/v2.0/token" target="_blank" rel="external">https://login.microsoftonline.com/botframework.com/oauth2/v2.0/token</a> 去取回 token ，然後再放在 Request 的 Header 之中，做為 Authorization token。但卻 bot 卻判斷它是無效的，所以就回 401 。 </p><p>查看 botframework-emulator 在 GitHub 上的異動記錄 <a href="https://github.com/Microsoft/BotFramework-Emulator/commit/714b6d4597653c13cb30941416e512e4ecf96972#diff-43482499e76e08e445f4ba0e0b580401" target="_blank" rel="external">Support Bot Framework authentication v3.1 (#256)</a> 有將取 token 的 endpoint 從 common/oauth2/v2.0/token 改到了 botframework.com/oauth2/v2.0/token 。<br><img src="/2018/02/01/2018007/2018007003.png" alt="src/server/settings.ts" title="src/server/settings.ts"> </p><p>似乎是 token 的問題，而目前我們 bot 使用的 BotBuilder 是 3.8 版，而它的 System.IdentityModel.Tokens.Jwt 使用的是 v4.0403061554 ，如下，<br><img src="/2018/02/01/2018007/2018007004.png" alt="System.IdentityModel.Tokens.Jwt" title="System.IdentityModel.Tokens.Jwt"> </p><p>所以筆者試著將 System.IdentityModel.Tokens.Jwt 更新到 v5.1.4 ，重建置專案，再測試一次就沒問題了哦! 或者是您連同 BotBuilder 升級到最新的版本也是可以的哦! </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今天使用 botframework-emulator 在 local 測試 bot 時， botframework-emulator 居然出現 The bot’s MSA appId or password is incorrect. 的錯誤，如下圖，&lt;br&gt;&lt;img sr
      
    
    </summary>
    
    
      <category term="botframework" scheme="https://rainmakerho.github.io/tags/botframework/"/>
    
      <category term="MSA appId or password is incorrect" scheme="https://rainmakerho.github.io/tags/MSA-appId-or-password-is-incorrect/"/>
    
      <category term="c#" scheme="https://rainmakerho.github.io/tags/c/"/>
    
      <category term="botframework-emulator" scheme="https://rainmakerho.github.io/tags/botframework-emulator/"/>
    
  </entry>
  
  <entry>
    <title>使用 Botframework 的 Bot 如何 Debug 到 BotBuilder Source ?</title>
    <link href="https://rainmakerho.github.io/2018/02/01/2018006/"/>
    <id>https://rainmakerho.github.io/2018/02/01/2018006/</id>
    <published>2018-02-01T01:47:18.000Z</published>
    <updated>2018-02-13T04:00:06.377Z</updated>
    
    <content type="html"><![CDATA[<p>我們透過 VS.NET 建立出 Bot 後，預設 Nuget 中安裝 BotBuilder 相關的套件，如果我們從 GitHub 將 <a href="https://github.com/Microsoft/BotBuilder" target="_blank" rel="external">Microsoft/BotBuilder</a> 到方案之中，我們要如何 Debug 進到 BotBuilder 的 Source Code 之中呢? </p><ul><li>移除 Nuget 中的 Microsoft.Bot.Builder 套件 </li><li><p>在方案中加入以下的專案(在 BotBuilder\CSharp\Library 目錄中)</p><ul><li>Microsoft.Bot.Builder (Microsoft.Bot.Builder.csproj)</li><li>Microsoft.Bot.Builder.Autofac (Microsoft.Bot.Builder.Autofac.csproj)</li><li>Microsoft.Bot.Connector.NetFramework (Microsoft.Bot.Connector.NetFramework.csproj)</li><li>Microsoft.Bot.Connector.Shared (Microsoft.Bot.Connector.Shared.shproj) </li><li><img src="/2018/02/01/2018006/2018006001.png" alt="加入Microsoft.Bot.Builder相關專案" title="加入Microsoft.Bot.Builder相關專案"></li></ul></li><li><p>先建置 Microsoft.Bot.Connector.NetFramework 專案，沒問題後再建置 Microsoft.Bot.Builder 及 Microsoft.Bot.Builder.Autofac </p></li><li>我們的 Bot 專案加入 Microsoft.Bot.Builder、Microsoft.Bot.Builder 及 Microsoft.Bot.Builder.Autofac 參考，如下，<img src="/2018/02/01/2018006/2018006003.png" alt="加入參考" title="加入參考"> </li></ul><p>如果重建成功就可以順利的 Debug 進去了哦! 如下圖所示，<br><img src="/2018/02/01/2018006/2018006002.png" alt="Debug到DialogModule" title="Debug到DialogModule"> </p><ul><li>註: 因為新版 Microsoft.Bot.Builder 使用的 Newtonsoft.Json 版本為 9，所以 Bot 專案也要更新到 9 以上哦! </li></ul><h4 id="參考資訊"><a href="#參考資訊" class="headerlink" title="參考資訊"></a>參考資訊</h4><p><a href="https://stackoverflow.com/questions/43971422/how-to-debug-into-microsoft-bot-builder-c-sharp-project-source-code" target="_blank" rel="external">how to debug into Microsoft.Bot.Builder C# project source code?</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;我們透過 VS.NET 建立出 Bot 後，預設 Nuget 中安裝 BotBuilder 相關的套件，如果我們從 GitHub 將 &lt;a href=&quot;https://github.com/Microsoft/BotBuilder&quot; target=&quot;_blank&quot; rel=
      
    
    </summary>
    
    
      <category term="botframework" scheme="https://rainmakerho.github.io/tags/botframework/"/>
    
      <category term="C#" scheme="https://rainmakerho.github.io/tags/C/"/>
    
      <category term="BotBuilder" scheme="https://rainmakerho.github.io/tags/BotBuilder/"/>
    
      <category term="debug" scheme="https://rainmakerho.github.io/tags/debug/"/>
    
  </entry>
  
  <entry>
    <title>Call luis.ai predictions api 的 3 種方式</title>
    <link href="https://rainmakerho.github.io/2018/01/29/2018005/"/>
    <id>https://rainmakerho.github.io/2018/01/29/2018005/</id>
    <published>2018-01-29T06:19:50.000Z</published>
    <updated>2018-02-15T02:55:30.785Z</updated>
    
    <content type="html"><![CDATA[<h3 id="luis-ai-api-價格說明"><a href="#luis-ai-api-價格說明" class="headerlink" title="luis.ai api 價格說明"></a>luis.ai api 價格說明</h3><p>我們使用 luis.ai 的 api 後，很多人都於它的價格都不清楚，在這裡說明一下，</p><ol><li>LUIS API - 免費: 每月最多可以 Call 10,000 次</li><li>LUIS API - 基本: 每月最多可以 Call 10,000 次，超過後，每 Call 1,000 次約台幣 45.09 元<br>詳細請參考 <a href="https://azure.microsoft.com/zh-tw/pricing/details/cognitive-services/language-understanding-intelligent-services/" target="_blank" rel="external">認知服務定價 - Language Understanding (LUIS)</a></li></ol><h3 id="Call-luis-ai-predictions-api-的-3-種方式"><a href="#Call-luis-ai-predictions-api-的-3-種方式" class="headerlink" title="Call luis.ai predictions api 的 3 種方式"></a>Call luis.ai predictions api 的 3 種方式</h3><p>在 <a href="https://westus.dev.cognitive.microsoft.com/docs/services/5819c76f40a6350ce09de1ac/operations/5819c77140a63516d81aee78" target="_blank" rel="external">LUIS predictions GET api</a> 中有各語言的使用範例，以C#來看，使用非常方便，只要設定一些參數就可以取回 LUIS 解析的資料，本文將跟大家分享 Call 正式 api 的 GET/POST 方式，及 Call 測試 api 的方式，共 3 透方式。</p><ul><li><p>call 正式 api 使用 GET，如下， </p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">async</span> Task&lt;<span class="keyword">string</span>&gt; <span class="title">GetLuisResult</span>(<span class="params"><span class="keyword">string</span> reqString</span>)</span></div><div class="line"><span class="function"></span>&#123;</div><div class="line"><span class="comment">//最多是 500 個 ascii chars，中文我先取 230 個</span></div><div class="line"><span class="keyword">if</span> (reqString.Length &gt; <span class="number">230</span>)</div><div class="line">&#123;</div><div class="line">reqString = reqString.Substring(<span class="number">0</span>, <span class="number">230</span>);</div><div class="line">&#125;</div><div class="line"><span class="keyword">var</span> client = <span class="keyword">new</span> HttpClient();</div><div class="line"><span class="keyword">var</span> queryString = HttpUtility.ParseQueryString(<span class="keyword">string</span>.Empty);</div><div class="line"><span class="keyword">const</span> <span class="keyword">string</span> appId = <span class="string">"你的appid"</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">string</span> subscriptionKey = <span class="string">"你的訂閱key"</span>;</div><div class="line"><span class="comment">// Request headers</span></div><div class="line">client.DefaultRequestHeaders.Add(<span class="string">"Ocp-Apim-Subscription-Key"</span>, subscriptionKey);</div><div class="line"></div><div class="line"><span class="comment">// Request parameters</span></div><div class="line"><span class="comment">//如果回傳的內容中需要各 Intent 的話，請將 verbose 設定為 true </span></div><div class="line">queryString[<span class="string">"verbose"</span>] = <span class="string">"true"</span>;</div><div class="line"><span class="comment">//queryString["spellCheck"] = "&#123;boolean&#125;";</span></div><div class="line"><span class="comment">//queryString["staging"] = "&#123;boolean&#125;";</span></div><div class="line"><span class="comment">//queryString["bing-spell-check-subscription-key"] = "bing key";</span></div><div class="line"><span class="comment">//queryString["log"] = "&#123;boolean&#125;";</span></div><div class="line"></div><div class="line"><span class="keyword">var</span> uri = <span class="string">$"https://eastasia.api.cognitive.microsoft.com/luis/v2.0/apps/<span class="subst">&#123;appId&#125;</span>?q="</span> + HttpUtility.UrlEncode(reqString)+ <span class="string">"&amp;"</span> + queryString;;</div><div class="line"><span class="keyword">var</span> response = <span class="keyword">await</span> client.GetAsync(uri);</div><div class="line"><span class="keyword">var</span> result = <span class="keyword">await</span> response.Content.ReadAsStringAsync();</div><div class="line"><span class="keyword">return</span> result;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li><li><p>call 正式 api 使用 POST (筆者試了老半天都試不出來，後來詢問 MS Herman 大大才知道，POST 的 body 前後要加 雙引號)，如下， </p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">async</span> Task&lt;<span class="keyword">string</span>&gt; <span class="title">GetLuisResultPost</span>(<span class="params"><span class="keyword">string</span> reqString</span>)</span></div><div class="line"><span class="function"></span>&#123;</div><div class="line"><span class="comment">//最多是 500 個 ascii chars，中文我先取 230 個</span></div><div class="line"><span class="keyword">if</span> (reqString.Length &gt; <span class="number">230</span>)</div><div class="line">&#123;</div><div class="line">reqString = reqString.Substring(<span class="number">0</span>, <span class="number">230</span>);</div><div class="line">&#125;</div><div class="line"><span class="keyword">var</span> client = <span class="keyword">new</span> HttpClient();</div><div class="line"><span class="keyword">var</span> queryString = HttpUtility.ParseQueryString(<span class="keyword">string</span>.Empty);</div><div class="line"><span class="keyword">const</span> <span class="keyword">string</span> appId = <span class="string">"你的appid"</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">string</span> subscriptionKey = <span class="string">"你的訂閱key"</span>;</div><div class="line"><span class="comment">// Request headers</span></div><div class="line">client.DefaultRequestHeaders.Add(<span class="string">"Ocp-Apim-Subscription-Key"</span>, subscriptionKey);</div><div class="line"> </div><div class="line"><span class="comment">// Request parameters</span></div><div class="line"><span class="comment">//如果回傳的內容中需要各 Intent 的話，請將 verbose 設定為 true </span></div><div class="line">queryString[<span class="string">"verbose"</span>] = <span class="string">"true"</span>;</div><div class="line"><span class="comment">//queryString["spellCheck"] = "&#123;boolean&#125;";</span></div><div class="line"><span class="comment">//queryString["staging"] = "&#123;boolean&#125;";</span></div><div class="line"><span class="comment">//queryString["bing-spell-check-subscription-key"] = "bing key";</span></div><div class="line"><span class="comment">//queryString["log"] = "&#123;boolean&#125;";</span></div><div class="line"><span class="keyword">var</span> uri = <span class="string">$"https://westus.api.cognitive.microsoft.com/luis/v2.0/apps/<span class="subst">&#123;appId&#125;</span>?"</span> + queryString;</div><div class="line"></div><div class="line">HttpResponseMessage response;</div><div class="line"></div><div class="line"><span class="comment">// Request body，前後要加上 雙引號 哦! </span></div><div class="line"><span class="keyword">byte</span>[] byteData = Encoding.UTF8.GetBytes(<span class="string">"\""</span> + reqString + <span class="string">"\""</span>);</div><div class="line"><span class="keyword">using</span> (<span class="keyword">var</span> content = <span class="keyword">new</span> ByteArrayContent(byteData))</div><div class="line">&#123;</div><div class="line">response = <span class="keyword">await</span> client.PostAsync(uri, content);</div><div class="line"><span class="keyword">var</span> result = <span class="keyword">await</span> response.Content.ReadAsStringAsync();</div><div class="line"><span class="keyword">return</span> result;</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li><li><p>註: 在 LUIS 設定好，按下 Train 後，請記得要到 PUBLISH , 按下 「Publish to production slot」，這樣才會部到各區域去哦!  </p></li></ul><p>知道如何 Call Production 的 api 之後，如果我們想要像 <a href="https://rainmakerho.github.io/2018/01/25/2018003/">線上客服 + BOT 之路</a> 一文中，先用個 Excel 檔去試看看的話(目前 luis.ai 上 support 上傳 json , 整批測試)，多試個幾次，免費的 quota 應該一下子就沒了吧! 如下所示，<br><img src="/2018/01/29/2018005/2018005001.png" alt="超過免費可呼叫的Quota" title="超過免費可呼叫的Quota">  </p><p>那怎麼辦呢? </p><ul><li><p>1.到 Azure 那買個服務，然後再將訂閱的 Key 加到 luis.ai 之中，如下， </p><img src="/2018/01/29/2018005/2018005002.png" alt="從Azure買付費的方案" title="從Azure買付費的方案">  </li><li><p>2.使用 luis.ai 測試的 api ，您可以在測試時，錄一下 network ，如下，  </p><img src="/2018/01/29/2018005/2018005005.png" alt="luis.ai 測試的 api" title="luis.ai 測試的 api"> </li></ul><p>所以 Call luis.ai 測試 api 的方式如下，<br><figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">async</span> Task&lt;<span class="keyword">string</span>&gt; <span class="title">GetLuisResultTest</span>(<span class="params"><span class="keyword">string</span> reqString</span>)</span></div><div class="line"><span class="function"></span>&#123;</div><div class="line"><span class="comment">//最多是 500 個 ascii chars，中文我先取 230 個</span></div><div class="line"><span class="keyword">if</span> (reqString.Length &gt; <span class="number">230</span>)</div><div class="line">&#123;</div><div class="line">reqString = reqString.Substring(<span class="number">0</span>, <span class="number">230</span>);</div><div class="line">&#125;</div><div class="line"><span class="keyword">var</span> client = <span class="keyword">new</span> HttpClient();</div><div class="line"><span class="keyword">var</span> queryString = HttpUtility.ParseQueryString(<span class="keyword">string</span>.Empty);</div><div class="line"><span class="keyword">const</span> <span class="keyword">string</span> appId = <span class="string">"你的appid"</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">string</span> subscriptionKey = <span class="string">"你的免費訂閱key"</span>;</div><div class="line"><span class="comment">// Request headers</span></div><div class="line">client.DefaultRequestHeaders.Add(<span class="string">"Ocp-Apim-Subscription-Key"</span>, subscriptionKey);</div><div class="line"><span class="keyword">var</span> uri = <span class="string">$"https://westus.api.cognitive.microsoft.com/luis/webapi/v2.0/apps/<span class="subst">&#123;appId&#125;</span>/versions/0.1/predict?example="</span> + HttpUtility.UrlEncode(reqString);</div><div class="line"><span class="keyword">var</span> response = <span class="keyword">await</span> client.GetAsync(uri);</div><div class="line"><span class="keyword">var</span> result = <span class="keyword">await</span> response.Content.ReadAsStringAsync();</div><div class="line"><span class="keyword">return</span> result;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>這個測試的 api 跟正式機的差別除了內容不太相同，它取出的 Entity 中間會有空白，所以再使用上需要將空白清掉哦! 因為它是測試用的，所以在整批 Call 的時候，有時會 block 一段時間，我的做法是如果出錯就停個 15 秒，讓它再重試一次，後來就可以正常再 Call 了哦!</p><p>正式 api 的結果如下 ( verbose 參數為 true, 內容才會有 intents )，<br><figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  <span class="attr">"query"</span>: <span class="string">"下載下來可以用了，可是什麼是網址識別"</span>,</div><div class="line">  <span class="attr">"topScoringIntent"</span>: &#123;</div><div class="line">    <span class="attr">"intent"</span>: <span class="string">"FAQ"</span>,</div><div class="line">    <span class="attr">"score"</span>: <span class="number">1.0</span></div><div class="line">  &#125;,</div><div class="line">  <span class="attr">"intents"</span>: [</div><div class="line">    &#123;</div><div class="line">      <span class="attr">"intent"</span>: <span class="string">"FAQ"</span>,</div><div class="line">      <span class="attr">"score"</span>: <span class="number">1.0</span></div><div class="line">    &#125;,</div><div class="line">    &#123;</div><div class="line">      <span class="attr">"intent"</span>: <span class="string">"None"</span>,</div><div class="line">      <span class="attr">"score"</span>: <span class="number">0.05330094</span></div><div class="line">    &#125;</div><div class="line">  ],</div><div class="line">  <span class="attr">"entities"</span>: [</div><div class="line">    &#123;</div><div class="line">      <span class="attr">"entity"</span>: <span class="string">"網址"</span>,</div><div class="line">      <span class="attr">"type"</span>: <span class="string">"Keyword"</span>,</div><div class="line">      <span class="attr">"startIndex"</span>: <span class="number">14</span>,</div><div class="line">      <span class="attr">"endIndex"</span>: <span class="number">15</span>,</div><div class="line">      <span class="attr">"score"</span>: <span class="number">0.9081365</span></div><div class="line">    &#125;,</div><div class="line">    &#123;</div><div class="line">      <span class="attr">"entity"</span>: <span class="string">"識別"</span>,</div><div class="line">      <span class="attr">"type"</span>: <span class="string">"Keyword"</span>,</div><div class="line">      <span class="attr">"startIndex"</span>: <span class="number">16</span>,</div><div class="line">      <span class="attr">"endIndex"</span>: <span class="number">17</span>,</div><div class="line">      <span class="attr">"score"</span>: <span class="number">0.9102927</span></div><div class="line">    &#125;,</div><div class="line">    &#123;</div><div class="line">      <span class="attr">"entity"</span>: <span class="string">"下載"</span>,</div><div class="line">      <span class="attr">"type"</span>: <span class="string">"Action"</span>,</div><div class="line">      <span class="attr">"startIndex"</span>: <span class="number">0</span>,</div><div class="line">      <span class="attr">"endIndex"</span>: <span class="number">1</span>,</div><div class="line">      <span class="attr">"score"</span>: <span class="number">0.9999258</span></div><div class="line">    &#125;</div><div class="line">  ]</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>測試 api 的結果如下( entityPredictions 中的 phrase 字之間會有空白哦!!! )， </p><pre><code class="json">{    <span class="attr">"id"</span>: <span class="literal">null</span>,    <span class="attr">"text"</span>: <span class="string">"下載下來可以用了，可是什麼是網址識別"</span>,    <span class="attr">"alteredText"</span>: <span class="string">"下載下來可以用了，可是什麼是網址識別"</span>,    <span class="attr">"tokenizedText"</span>: [        <span class="string">"下"</span>    ],    <span class="attr">"intentPredictions"</span>: [        {            <span class="attr">"id"</span>: <span class="string">"9e70ed0a-561c-45f4-b8a4-2439de42acb1"</span>,            <span class="attr">"name"</span>: <span class="string">"FAQ"</span>,            <span class="attr">"score"</span>: <span class="number">1.0</span>        },        {            <span class="attr">"id"</span>: <span class="string">"8d898fa2-667f-471d-b87f-309011627b5d"</span>,            <span class="attr">"name"</span>: <span class="string">"None"</span>,            <span class="attr">"score"</span>: <span class="number">0.05</span>        }    ],    <span class="attr">"entityPredictions"</span>: [        {            <span class="attr">"id"</span>: <span class="string">"cb403a63-347c-448c-9b08-3e48d6ac0c61"</span>,            <span class="attr">"entityName"</span>: <span class="string">"Keyword"</span>,            <span class="attr">"startTokenIndex"</span>: <span class="number">14</span>,            <span class="attr">"endTokenIndex"</span>: <span class="number">15</span>,            <span class="attr">"phrase"</span>: <span class="string">"網 址"</span>,            <span class="attr">"entityType"</span>: <span class="number">1</span>        },        {            <span class="attr">"id"</span>: <span class="string">"cb403a63-347c-448c-9b08-3e48d6ac0c61"</span>,            <span class="attr">"entityName"</span>: <span class="string">"Keyword"</span>,            <span class="attr">"startTokenIndex"</span>: <span class="number">16</span>,            <span class="attr">"endTokenIndex"</span>: <span class="number">17</span>,            <span class="attr">"phrase"</span>: <span class="string">"識 別"</span>,            <span class="attr">"entityType"</span>: <span class="number">1</span>        },        {            <span class="attr">"id"</span>: <span class="string">"1771cbab-fb7b-4a83-b46d-4c085ba88341"</span>,            <span class="attr">"entityName"</span>: <span class="string">"Action"</span>,            <span class="attr">"startTokenIndex"</span>: <span class="number">0</span>,            <span class="attr">"endTokenIndex"</span>: <span class="number">1</span>,            <span class="attr">"phrase"</span>: <span class="string">"下 載"</span>,            <span class="attr">"entityType"</span>: <span class="number">1</span>        }    ],    <span class="attr">"tokenMetadata"</span>: <span class="literal">null</span>}</code></pre><p>預設 call 正式 api 時，會 log 查詢的資料，最近幾筆資料可以從 「 Review endpoint utterances 」 看到，如下<br><img src="/2018/01/29/2018005/2018005003.png" alt="Review endpoint utterances" title="Review endpoint utterances">  </p><p>那如果我需要的是全部的 Log 呢? 可以到「 My apps 」，在那個 app 右邊的 … ，選取「 Export Endpoint Log 」，就可以了哦，如下，<br><img src="/2018/01/29/2018005/2018005004.png" alt="Export Endpoint Logs" title="Export Endpoint Logs"> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;luis-ai-api-價格說明&quot;&gt;&lt;a href=&quot;#luis-ai-api-價格說明&quot; class=&quot;headerlink&quot; title=&quot;luis.ai api 價格說明&quot;&gt;&lt;/a&gt;luis.ai api 價格說明&lt;/h3&gt;&lt;p&gt;我們使用 luis.ai 的
      
    
    </summary>
    
    
      <category term="luis.ai" scheme="https://rainmakerho.github.io/tags/luis-ai/"/>
    
      <category term="predictions api" scheme="https://rainmakerho.github.io/tags/predictions-api/"/>
    
      <category term="luis.ai 價格" scheme="https://rainmakerho.github.io/tags/luis-ai-%E5%83%B9%E6%A0%BC/"/>
    
  </entry>
  
  <entry>
    <title>客製 BotDataStore ，將 Bot State 資料存到 SQL Server之中</title>
    <link href="https://rainmakerho.github.io/2018/01/26/2018004/"/>
    <id>https://rainmakerho.github.io/2018/01/26/2018004/</id>
    <published>2018-01-26T05:11:04.000Z</published>
    <updated>2018-01-26T06:34:50.534Z</updated>
    
    <content type="html"><![CDATA[<p>不知大家在使用 botframework-emulator 測試 chatbot 時，有沒有發現，對話一開始時，會先將 Bot State 取出來(BotConversationData, BotPrivateConversationData 及 BotUserData)，而在對話後，則將這些資料存回去，如下圖所示，<br><img src="/2018/01/26/2018004/2018004001.png" alt="對話中BotState的處理順序" title="對話中BotState的處理順序"><br>那大家會好奇那些 Bot State 都存到那裡去了呢?<br>預設的 BotDataStore 是使用 <a href="https://github.com/Microsoft/BotBuilder/blob/master/CSharp/Library/Microsoft.Bot.Builder/ConnectorEx/BotData.cs#L197" target="_blank" rel="external">ConnectorStore</a> ，它依 StateClient.BotState 去儲存，而 url 就是 {serverUrl}/v3/botstate/{channelId}/conversations/{conversationId} ， {serverUrl}/v3/botstate/{channelId}/conversations/{conversationId}/users/{userId} 及 {serverUrl}/v3/botstate/{channelId}/users/{userId} ，詳細可以參考 <a href="https://github.com/Microsoft/BotBuilder/blob/master/CSharp/Library/Microsoft.Bot.Connector.Shared/StateAPI/BotState.cs" target="_blank" rel="external">BotState.cs</a> ，serverUrl 是 activity.ServiceUrl ，詳細可以參考 <a href="https://github.com/Microsoft/BotBuilder/blob/master/CSharp/Library/Microsoft.Bot.Connector.Shared/StateAPI/StateClient.cs" target="_blank" rel="external">StateClient.cs</a>。 </p><p>在 <a href="https://blog.botframework.com/2017/07/26/saving-state-sql-dotnet/" target="_blank" rel="external">Saving State data in SQL with .NET</a> 這篇之中，說明如何實作 IBotDataStore<botdata> 然後將 Bot State 存到 SQL Server 之中。<br>客製的 BotDataStore 寫好了之後，記得要在 global.asax 中去設定讓 autofac 使用我們的 SqlBotDataStore，如下， </botdata></p><pre><code class="csharp"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">Application_Start</span>(<span class="params"></span>)</span><span class="function"></span>{    Conversation.UpdateContainer(builder =&gt;    {        <span class="keyword">var</span> store = <span class="keyword">new</span> SqlBotDataStore(<span class="string">"BotDataContextConnectionString"</span>);        builder.Register(c =&gt; <span class="keyword">new</span> CachingBotDataStore(store              , CachingBotDataStoreConsistencyPolicy.LastWriteWins))            .As&lt;IBotDataStore&lt;BotData&gt;&gt;()            .AsSelf()            .InstancePerLifetimeScope();    });    GlobalConfiguration.Configure(WebApiConfig.Register);}</code></pre><p>這樣在SQL中就可以看到 Bot State 存到了 SQL DB 之中，如下，<br><img src="/2018/01/26/2018004/2018004002.png" alt="StateInSQLDB" title="StateInSQLDB"> </p><p>另外，像我們之前寫的 Local Direct Line Server <a href="https://rainmakerhoblog.wordpress.com/2017/08/30/20170830/" target="_blank" rel="external">使用 Microsoft Bot Framework 地端的 WebChat 機器人(企業內)</a>，我們會將 Channel 的資料放在 ChannelData 之中，而在存 State 時， ChannelId 要取自 activity 的 channelData ，則可以改自 ConnectorStore ，加入讀取 activity ，如下，</p><pre><code class="csharp"><span class="comment">//modify from ConnectorStore</span>public class LDLDataStore : IBotDataStore&lt;BotData&gt;{    <span class="keyword">private</span> <span class="keyword">readonly</span> IStateClient stateClient;    <span class="keyword">private</span> <span class="keyword">readonly</span> IActivity activity;    <span class="function"><span class="keyword">public</span> <span class="title">LDLDataStore</span>(<span class="params">IStateClient stateClient, IActivity activity</span>)</span><span class="function">    </span>{        SetField.NotNull(<span class="keyword">out</span> <span class="keyword">this</span>.stateClient, <span class="keyword">nameof</span>(stateClient), stateClient);        SetField.NotNull(<span class="keyword">out</span> <span class="keyword">this</span>.activity, <span class="keyword">nameof</span>(activity), activity);    }    <span class="keyword">async</span> Task&lt;BotData&gt; IBotDataStore&lt;BotData&gt;.LoadAsync(IAddress key, BotStoreType botStoreType, CancellationToken cancellationToken)    {        <span class="keyword">var</span> channelId = GetChannelId(key);        BotData botData;        <span class="keyword">switch</span> (botStoreType)        {            <span class="keyword">case</span> BotStoreType.BotConversationData:                botData = <span class="keyword">await</span> stateClient.BotState.GetConversationDataAsync(channelId, key.ConversationId, cancellationToken);                <span class="keyword">break</span>;            <span class="keyword">case</span> BotStoreType.BotUserData:                botData = <span class="keyword">await</span> stateClient.BotState.GetUserDataAsync(channelId, key.UserId, cancellationToken);                <span class="keyword">break</span>;            <span class="keyword">case</span> BotStoreType.BotPrivateConversationData:                botData = <span class="keyword">await</span> stateClient.BotState.GetPrivateConversationDataAsync(channelId, key.ConversationId, key.UserId, cancellationToken);                <span class="keyword">break</span>;            <span class="keyword">default</span>:                <span class="keyword">throw</span> <span class="keyword">new</span> ArgumentException(<span class="string">$"<span class="subst">{botStoreType}</span> is not a valid store type!"</span>);        }        <span class="keyword">return</span> botData;    }    <span class="keyword">async</span> Task IBotDataStore&lt;BotData&gt;.SaveAsync(IAddress key, BotStoreType botStoreType, BotData botData, CancellationToken cancellationToken)    {        <span class="keyword">var</span> channelId = GetChannelId(key);        <span class="keyword">switch</span> (botStoreType)        {            <span class="keyword">case</span> BotStoreType.BotConversationData:                <span class="keyword">await</span> stateClient.BotState.SetConversationDataAsync(channelId, key.ConversationId, botData, cancellationToken);                <span class="keyword">break</span>;            <span class="keyword">case</span> BotStoreType.BotUserData:                <span class="keyword">await</span> stateClient.BotState.SetUserDataAsync(channelId, key.UserId, botData, cancellationToken);                <span class="keyword">break</span>;            <span class="keyword">case</span> BotStoreType.BotPrivateConversationData:                <span class="keyword">await</span> stateClient.BotState.SetPrivateConversationDataAsync(channelId, key.ConversationId, key.UserId, botData, cancellationToken);                <span class="keyword">break</span>;            <span class="keyword">default</span>:                <span class="keyword">throw</span> <span class="keyword">new</span> ArgumentException(<span class="string">$"<span class="subst">{botStoreType}</span> is not a valid store type!"</span>);        }    }    Task&lt;<span class="keyword">bool</span>&gt; IBotDataStore&lt;BotData&gt;.FlushAsync(IAddress key, CancellationToken cancellationToken)    {        <span class="comment">// Everything is saved. Flush is no-op</span>        <span class="keyword">return</span> Task.FromResult(<span class="literal">true</span>);    }    <span class="function"><span class="keyword">private</span> <span class="keyword">string</span> <span class="title">GetChannelId</span>(<span class="params">IAddress key</span>)</span><span class="function">    </span>{        <span class="keyword">var</span> channelData = JObject.FromObject(activity.ChannelData);        <span class="keyword">string</span> channelId = channelData.SelectToken(<span class="string">"channelId"</span>)?.ToString();        <span class="keyword">if</span> (<span class="keyword">string</span>.IsNullOrWhiteSpace(channelId))        {            channelId = key.ChannelId;        }        <span class="keyword">return</span> channelId;    }}</code></pre><p>而在 global.asax 之中，我們的 LDLDataStore 需要多傳入 Activity ，如下， </p><pre><code class="csharp"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">Application_Start</span>(<span class="params"></span>)</span><span class="function"></span>{    Conversation.UpdateContainer(builder =&gt;    {        builder.Register(c =&gt; <span class="keyword">new</span> CachingBotDataStore(<span class="keyword">new</span> LDLDataStore(c.Resolve&lt;IStateClient&gt;(), c.Resolve&lt;IActivity&gt;())            , CachingBotDataStoreConsistencyPolicy.LastWriteWins))            .As&lt;IBotDataStore&lt;BotData&gt;&gt;()            .AsSelf()            .InstancePerLifetimeScope();     });     GlobalConfiguration.Configure(WebApiConfig.Register);}</code></pre><p>知道如何在 global.asax 中置換 BotDataStore ，只要實作 IBotDataStore<botdata> 便可以輕易的更換 BotDataStore 哦! </botdata></p><h3 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h3><p><a href="https://blog.botframework.com/2017/07/26/saving-state-sql-dotnet/" target="_blank" rel="external">Saving State data in SQL with .NET</a><br><a href="https://docs.microsoft.com/en-us/bot-framework/dotnet/bot-builder-dotnet-state#Botstatemethods" target="_blank" rel="external">Manage state data</a> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;不知大家在使用 botframework-emulator 測試 chatbot 時，有沒有發現，對話一開始時，會先將 Bot State 取出來(BotConversationData, BotPrivateConversationData 及 BotUserData)，
      
    
    </summary>
    
    
      <category term="chatbot" scheme="https://rainmakerho.github.io/tags/chatbot/"/>
    
      <category term="botframework" scheme="https://rainmakerho.github.io/tags/botframework/"/>
    
      <category term="BotDataStore" scheme="https://rainmakerho.github.io/tags/BotDataStore/"/>
    
      <category term="ConnectorStore" scheme="https://rainmakerho.github.io/tags/ConnectorStore/"/>
    
  </entry>
  
  <entry>
    <title>線上客服 + BOT 之路</title>
    <link href="https://rainmakerho.github.io/2018/01/25/2018003/"/>
    <id>https://rainmakerho.github.io/2018/01/25/2018003/</id>
    <published>2018-01-25T08:10:47.000Z</published>
    <updated>2018-01-26T06:38:51.976Z</updated>
    
    <content type="html"><![CDATA[<p>相信很多產品都會有線上客服系統及線上 FAQ 系統，提供給使用者線上詢問或查詢來排除操作系統所發生的問題。<br>如果加上 FAQ Chatbot 可以服務更多的使用者(當線上客服人員下班時)，也可以讓線上客服人員可以服務復雜的問題。<br>我們要如何加上 FAQ Chatbot 呢? 讓我們繼續看下去 … </p><p>FAQ系統是使用 keyword 來 Search 的，如下，<br><img src="/2018/01/25/2018003/2018003001.png" alt="FAQ關鍵字Search" title="FAQ關鍵字Search">   </p><p>但是當使用者輸入「一句話」，FAQ可能就查不出資料了，如下，<br><img src="/2018/01/25/2018003/2018003002.png" alt="FAQ一句話Search" title="FAQ一句話Search"> </p><p>Microsoft 有一個 <a href="https://qnamaker.ai/" target="_blank" rel="external">QnAMaker</a>，剛好符合我們的需求，只要將 Q and A 匯進去，呼叫它的 api 就可以回傳合適的答案。<br>於是我們就將 FAQ 中的資料匯到了 <a href="https://qnamaker.ai/" target="_blank" rel="external">QnAMaker</a> 之中(大約有230個問題)，如下<br><img src="/2018/01/25/2018003/2018003003.png" alt="已匯入資料的QnAMaker" title="已匯入資料的QnAMaker"><br>用中文來測試，有些 OK，有些又不太 OK。 於是有看到「Alternative Phrasing」，目前用的狀況是「中文真的不OK~」。 所以我們就只好改成，依不同的問法分別建立一個 QnA pair 。<br>另外一個狀況就是，目前它是 Preview ，所以會限速 … <a href="https://docs.microsoft.com/en-us/azure/cognitive-services/qnamaker/faqs" target="_blank" rel="external">Current transaction limits are 10 calls per minute and 10,000 calls per month…</a>，所以在 Call 它的 api 時，常常會出現 429 的錯誤。(Error code 429: Rate limit is exceeded. Try again or upgrade to a higher pricing tier with a higher rate limit (if available).)  </p><p>接下來我們就使用 1645 個問題來試看看 QnA Maker ，結果它有回答 336 筆，約 20% 。 </p><ul><li>註: 因為 QnA Maker 目前還是 Preview, 所以持續 Call 時，要停個 500 ms, 如果發生錯誤時，就再等個 10 秒再試一次哦! </li></ul><p>怎麼辦呢? 這樣子 FAQ Bot 不就沒人要用 !!!<br>詢問 MS Tom 哥後，他給我們的建議是用 <a href="https://www.luis.ai/" target="_blank" rel="external">LUIS</a> + <a href="http://www.vitalsesp.com/" target="_blank" rel="external">Vital ESP</a>(FAQ系統)。<br>可以透過 <a href="https://www.luis.ai/" target="_blank" rel="external">LUIS</a> 解析使用者的問題，解析出「意圖」及「關鍵字」，然後再把「關鍵字」送到 FAQ 去查詢，這樣正確率就會比較高。<br>一開始我的想法是一個問題建立一個 Intent (LUIS now allows you to create 500 intents and 100 entities)，但是這樣子蠻不準的。<br>Tom 哥說，<a href="https://www.luis.ai/" target="_blank" rel="external">LUIS</a> 是依句型去解析的，類似的句型不同的 Intent 反而會造成混亂。<br>所以我們就建立一個 FAQ 的 Intent ，然後將 FAQ 系統中 230 個問題都匯進 FAQ Intent 之中，然後我們再進去設定關鍵字(Entity)。<br>不過這樣子設定的人要針對 230 個問題一個一個地去設定 Entity ，也還蠻累的。<br>後來同事 Alex 大大測試，即然 <a href="https://www.luis.ai/" target="_blank" rel="external">LUIS</a> 是依句型去解析的，那我們只需要建立一些使用者會詢問的句型，然後 關鍵字(Entity)就設定2種(action, keyword)，再依 action 及 keyword 建立 Phrase lists ，例如 keyword Phrase lists 裡面就有 App, 行事曆, 客戶, 會員, 網址, 權限 等等的詞，這樣子解析出來的狀況還蠻不錯的。如下，<br><img src="/2018/01/25/2018003/2018003004.png" alt="少量 Utterance + 2 個 Entities" title="少量 Utterance + 2 個 Entities"><br><img src="/2018/01/25/2018003/2018003005.png" alt="相同 Phrase List 建立很多" title="相同 Phrase List 建立很多"><br>註:目前 Phrase List 可以建立 5,000 個<a href="https://docs.microsoft.com/en-us/azure/cognitive-services/luis/luis-resources-faq" target="_blank" rel="external">Language Understanding FAQ</a>。  </p><p>所以當使用者輸入「請問如何快速新增行事曆」，透過 <a href="https://www.luis.ai/" target="_blank" rel="external">LUIS</a> 就可以找到關鍵字為 新增 及 行事曆 ，如下，<br><img src="/2018/01/25/2018003/2018003006.png" alt="LUIS Parse Entities" title="LUIS Parse Entities"> </p><p>所以我們再到 <a href="http://www.vitalsesp.com/" target="_blank" rel="external">Vital ESP</a>(FAQ系統)，輸入「新增 行事曆」，就可以正確查到資料了，如下，<br><img src="/2018/01/25/2018003/2018003007.png" alt="LUIS Parse Entities" title="LUIS Parse Entities">  </p><p>所以我們一樣使用 1645 個問題來試看看 <a href="https://www.luis.ai/" target="_blank" rel="external">LUIS</a> + <a href="http://www.vitalsesp.com/" target="_blank" rel="external">Vital ESP</a>(FAQ系統) ，有找出結果的約有 968 個，約 50 %。<br>註:我們會產生一個 Excel 的結果檔如下，<br><img src="/2018/01/25/2018003/2018003008.png" alt="測試結果的Excel內容" title="測試結果的Excel內容"> </p><p>架構類似如下，<br><img src="/2018/01/25/2018003/2018003010.png" alt="架構圖" title="架構圖"></p><p>而透過 Chatbot 去封裝的話，畫面如下，<br><img src="/2018/01/25/2018003/2018003009.png" alt="FAQ chatbot" title="FAQ chatbot"> </p><p>之後在 Chatbot 中就可以再去記錄一些使用者的行為，讓 Chatbot 更智能。 </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;相信很多產品都會有線上客服系統及線上 FAQ 系統，提供給使用者線上詢問或查詢來排除操作系統所發生的問題。&lt;br&gt;如果加上 FAQ Chatbot 可以服務更多的使用者(當線上客服人員下班時)，也可以讓線上客服人員可以服務復雜的問題。&lt;br&gt;我們要如何加上 FAQ Chat
      
    
    </summary>
    
    
      <category term="chatbot" scheme="https://rainmakerho.github.io/tags/chatbot/"/>
    
      <category term="QnA Maker" scheme="https://rainmakerho.github.io/tags/QnA-Maker/"/>
    
      <category term="LUIS" scheme="https://rainmakerho.github.io/tags/LUIS/"/>
    
      <category term="Vital ESP" scheme="https://rainmakerho.github.io/tags/Vital-ESP/"/>
    
      <category term="FAQ" scheme="https://rainmakerho.github.io/tags/FAQ/"/>
    
  </entry>
  
  <entry>
    <title>Excel.WorkbookClass.SaveAs 發生例外狀況於 HRESULT: 0x800A03EC [ COMException.ErrorCode : -2146827284 ]</title>
    <link href="https://rainmakerho.github.io/2018/01/11/2018002/"/>
    <id>https://rainmakerho.github.io/2018/01/11/2018002/</id>
    <published>2018-01-11T07:30:42.000Z</published>
    <updated>2018-01-11T08:13:59.964Z</updated>
    
    <content type="html"><![CDATA[<p>今天同事詢問一個錯誤訊息如下，<br>Excel.WorkbookClass.SaveAs  <system.runtime.interopservices.comexception> 發生例外狀況於 HRESULT: 0x800A03EC [ COMException.ErrorCode : -2146827284 ]<br>於 Excel.WorkbookClass.SaveAs(Object Filename, Object FileFormat, Object Password, Object WriteResPassword, Object ReadOnlyRecommended, Object CreateBackup, XlSaveAsAccessMode AccessMode, Object ConflictResolution, Object AddToMru, Object TextCodepage, Object TextVisualLayout)</system.runtime.interopservices.comexception></p><p>程式中的寫法類似如下，<br><figure class="highlight vb"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">dim</span> xlsApp <span class="keyword">As</span> <span class="keyword">New</span> Excel.Application</div><div class="line"><span class="keyword">Dim</span> wb <span class="keyword">As</span> Excel.Workbook</div><div class="line">xlsApp.Visible = <span class="literal">False</span></div><div class="line">xlsApp.DisplayAlerts = <span class="literal">False</span></div><div class="line">xlsApp.Workbooks.OpenText(<span class="keyword">Me</span>.UpFile_Path)</div><div class="line">wb = xlsApp.Workbooks(<span class="number">1</span>)</div><div class="line"><span class="keyword">Const</span> xlNormal = <span class="number">-4143</span></div><div class="line">wb.SaveAs(Filename:=sfileName, FileFormat:=xlNormal, Password:=<span class="string">""</span>, WriteResPassword:=<span class="string">""</span>, ReadOnlyRecommended:=<span class="literal">False</span>, CreateBackup:=<span class="literal">False</span>)</div></pre></td></tr></table></figure></p><p>程式是掛在 wb.SaveAs 那行，而且客戶端是裝 Excel 2016 才噴錯，同事是 Excel 2010 則沒問題。<br>程式中，有加入 interop.excel.dll 參考，使用 earlay binding 的方式，所以似乎是因為版本不同，SaveAs Method 的參數不同所造成的錯誤。</p><p>所以開啟 Excel 2016 ，按下 Alt + F11 後，再按下 F2 瀏覽物件，查看 Workbook 的 SaveAs Method 如下，</p><figure class="highlight vb"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">Sub</span> SaveAs([Filename], [FileFormat], [Password], [WriteResPassword], [ReadOnlyRecommended], [CreateBackup], [AccessMode <span class="keyword">As</span> XlSaveAsAccessMode = xlNoChange]</div><div class="line">, [ConflictResolution], [AddToMru], [TextCodepage], [TextVisualLayout], [Local], [WorkIdentity])</div></pre></td></tr></table></figure><p>跟錯誤訊息比較一下，可以發現 Excel 2016 從參數 TextVisualLayout 後面，又多了 2 個參考 (Local 及 WorkIdentity)。所以程式自然就 GG 了。</p><p>那怎麼辦呢? 改用 Later Binding 的方式，將 interOP.Excel 移除參考，並將原本 Excel.Application 、Excel.Workbook 改成 Object ，重新建置專案，就可以了哦!</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今天同事詢問一個錯誤訊息如下，&lt;br&gt;Excel.WorkbookClass.SaveAs  &lt;system.runtime.interopservices.comexception&gt; 發生例外狀況於 HRESULT: 0x800A03EC [ COMException.E
      
    
    </summary>
    
    
      <category term="Excel" scheme="https://rainmakerho.github.io/tags/Excel/"/>
    
      <category term="SaveAs" scheme="https://rainmakerho.github.io/tags/SaveAs/"/>
    
      <category term="2148140012" scheme="https://rainmakerho.github.io/tags/2148140012/"/>
    
      <category term="2146827284" scheme="https://rainmakerho.github.io/tags/2146827284/"/>
    
      <category term="Workbook" scheme="https://rainmakerho.github.io/tags/Workbook/"/>
    
  </entry>
  
  <entry>
    <title>Windows 10 IoT Core UWP Beacon 程式 Crash 事件</title>
    <link href="https://rainmakerho.github.io/2018/01/09/2018001/"/>
    <id>https://rainmakerho.github.io/2018/01/09/2018001/</id>
    <published>2018-01-09T07:03:42.000Z</published>
    <updated>2018-01-11T07:30:28.006Z</updated>
    
    <content type="html"><![CDATA[<p>我們在2016年有透過 Windows 10 IoT Core 來開發 UWP beacon 的程式，並透過 Azure IoT Hub 來處理訊息。<br>但是這支 UWP 程式執行一段時間後，那台 Raspberry 就無法由外部到它。<br>後來更新到 Build 15063 後，過一段時間後，整個作業系統直接就 Crash 掉了。<br>同事 Kent 查看 event 發現，因為 IoT Core 如果自動更新後，自動重新開機後， OS 就 Crash 掉了。<br>所以將自動更新透過 Power Shell 將它關掉(要更新的話，就手動更新測試沒問題再上)，可參考<a href="https://brosteins.com/2016/09/06/disable-windows-update-windows-10-iot-core-powershell/" target="_blank" rel="external">Disable Windows Update in Windows 10 IoT Core with PowerShell</a>。</p><p>過了一陣子後，無法連網的狀況又發生了，但系統是有取到 ip 的，但就是無法連網。<br>再將系統重新啟動後，就又可以正常連網。<br>所以就在程式中檢查，如果無法連到 Azure IoT Hub N 次之後，就讓系統重新啟動，可參考<a href="https://rainmakerho.github.io/2017/12/11/2017016/">Windows 10 IoT Core 如何透過 UWP 程式來 重開機 或是 關機 (C00CE014)</a>。</p><ul><li>而觀察到目前為止，採取這樣子的方式(停止自動更新、無法連網 N 次就重開機)，程式目前運作的都還蠻順利的哦! </li><li>另外比較麻煩的就是 Android 的手機如果有連到 藍牙裝置(耳機、手環 …)，就無法掃到 Beacon ，手機重開機後才掃得到。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;我們在2016年有透過 Windows 10 IoT Core 來開發 UWP beacon 的程式，並透過 Azure IoT Hub 來處理訊息。&lt;br&gt;但是這支 UWP 程式執行一段時間後，那台 Raspberry 就無法由外部到它。&lt;br&gt;後來更新到 Build 1
      
    
    </summary>
    
    
      <category term="Windows 10 IoT Core" scheme="https://rainmakerho.github.io/tags/Windows-10-IoT-Core/"/>
    
      <category term="UWP" scheme="https://rainmakerho.github.io/tags/UWP/"/>
    
      <category term="restart" scheme="https://rainmakerho.github.io/tags/restart/"/>
    
      <category term="disable update" scheme="https://rainmakerho.github.io/tags/disable-update/"/>
    
      <category term="beacon" scheme="https://rainmakerho.github.io/tags/beacon/"/>
    
  </entry>
  
  <entry>
    <title>Service Worker @ Angular</title>
    <link href="https://rainmakerho.github.io/2017/12/18/2017017/"/>
    <id>https://rainmakerho.github.io/2017/12/18/2017017/</id>
    <published>2017-12-18T08:26:51.000Z</published>
    <updated>2017-12-18T10:04:25.880Z</updated>
    
    <content type="html"><![CDATA[<p>一般的 Web 應用程式，如果 Server 端連不上了，就會直接 GG (在 Chrome 上 恐龍就出現了)。是否有什麼方式在 Client 端程式與 Server 端之間有一個 Buffer 呢?<br>讓應用系統會整個 GG 呢? 答案就是 <a href="https://developers.google.com/web/fundamentals/primers/service-workers/" target="_blank" rel="external">Service Worker</a> 。</p><p>Service Worker 就像是一個 Middleware 一樣，在 Client 端程式與 Server 端之間，如下圖所示，<br><img src="/2017/12/18/2017017/serviceworker.png" alt="Service Worker" title="Service Worker"></p><p>而各 Browser 的 Support 狀況可以參考 <a href="https://developer.microsoft.com/en-us/microsoft-edge/platform/status/serviceworker/" target="_blank" rel="external">Service Worker - Platform status</a><br>那我們在 Angular (筆者使用的版本是 Angular CLI v 1.6.0) 中要如何使用 Service Worker 呢?</p><p>1.寫 Service Worker 的 js 檔(sw.js 放在 src 目錄下)。<br><img src="/2017/12/18/2017017/swFile.png" alt="Service Worker JS" title="Service Worker JS"></p><p>2.在 .angular-cli.json 中 Apps -&gt; assets 中加入 sw.js。<br><img src="/2017/12/18/2017017/cliJSON.png" alt=".angular-cli.json" title=".angular-cli.json"></p><p>3.main.ts 註冊 service worker (sw.js)。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">platformBrowserDynamic()</div><div class="line">    .bootstrapModule(AppModule)</div><div class="line">    .then(<span class="function"><span class="params">_</span> =&gt;</span> &#123;</div><div class="line">        <span class="keyword">if</span> (<span class="string">'serviceWorker'</span> <span class="keyword">in</span> navigator) &#123;</div><div class="line">            navigator.serviceWorker</div><div class="line">                .register(<span class="string">'/sw.js'</span>, &#123;  <span class="attr">scope</span>: <span class="string">'/’ &#125;)</span></div><div class="line"><span class="string">                .then(reg =&gt; &#123;console.log('</span>Service worker Registered!’); &#125;)</div><div class="line">                .catch(<span class="function"><span class="params">err</span> =&gt;</span> &#123; <span class="built_in">console</span>.log(<span class="string">'Service Worker Registration Failed:'</span>, err);&#125;);</div><div class="line">        &#125;</div><div class="line">    &#125;).catch(<span class="function"><span class="params">err</span> =&gt;</span> <span class="built_in">console</span>.log(err));</div></pre></td></tr></table></figure><h4 id="那-Service-Worker-要寫些什麼呢"><a href="#那-Service-Worker-要寫些什麼呢" class="headerlink" title="那 Service Worker 要寫些什麼呢?"></a>那 Service Worker 要寫些什麼呢?</h4><p>它是 event base 的，而它的 event Life Cycle 可以參考以下的圖，<br><img src="/2017/12/18/2017017/sw-lifecycle.png" alt="Service Worker Life Cyclevents" title="Service Worker Life Cyclevents"><br>舉個簡單的例子，在 Angular 首頁中讀取 /api/lessons 的課程資料下來呈現，如下圖，<br><img src="/2017/12/18/2017017/webap.png" alt="SampleWebAp" title="SampleWebAp"></p><p>所以在 Service Worker (sw.js) 中就可以在 install event 中將這些 Resource 存到 Cache 之中。在 fetch event 中，就從 Cache 中取得這些 Resource，如下，</p><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> VERSION = <span class="string">'v1'</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">log</span>(<span class="params">...messages</span>) </span>&#123;</div><div class="line"><span class="built_in">console</span>.log(VERSION, ...messages);</div><div class="line">&#125;</div><div class="line"></div><div class="line">log(<span class="string">'Installing Service Worker'</span>);</div><div class="line"></div><div class="line">self.addEventListener(<span class="string">'install'</span>, event =&gt; &#123;</div><div class="line">log(<span class="string">'version is installed'</span>);</div><div class="line">event.waitUntil(installServiceWorker());</div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">installServiceWorker</span>(<span class="params"></span>) </span>&#123;</div><div class="line">log(<span class="string">'Service Worker installation started!'</span>);</div><div class="line"><span class="keyword">const</span> cache = <span class="keyword">await</span> caches.open(getCacheName());</div><div class="line"><span class="keyword">return</span> cache.addAll([</div><div class="line"><span class="string">'/'</span>,</div><div class="line"><span class="string">'/polyfills.bundle.js'</span>,</div><div class="line"><span class="string">'/inline.bundle.js'</span>,</div><div class="line"><span class="string">'/styles.bundle.js'</span>,</div><div class="line"><span class="string">'/vendor.bundle.js'</span>,</div><div class="line"><span class="string">'/main.bundle.js'</span>,</div><div class="line"><span class="string">'/api/lessons'</span></div><div class="line">]);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">getCacheName</span>(<span class="params"></span>) </span>&#123;</div><div class="line"><span class="keyword">return</span> <span class="string">`app-cache-<span class="subst">$&#123;VERSION&#125;</span>`</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line">self.addEventListener(<span class="string">'activate'</span>, () =&gt; activateSW());</div><div class="line"></div><div class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">activateSW</span>(<span class="params"></span>) </span>&#123;</div><div class="line">log(<span class="string">'service worker activating ...*** '</span>);</div><div class="line"><span class="keyword">const</span> cacheKeys = <span class="keyword">await</span> caches.keys();</div><div class="line">cacheKeys.forEach(<span class="function"><span class="params">cacheKey</span> =&gt;</span> &#123;</div><div class="line"><span class="keyword">if</span> (cacheKey !== getCacheName()) &#123;</div><div class="line">caches.delete(cacheKey);</div><div class="line">&#125;</div><div class="line">&#125;);</div><div class="line">&#125;</div><div class="line"></div><div class="line">self.addEventListener(<span class="string">'fetch'</span>, event =&gt; &#123;</div><div class="line">log(<span class="string">'version is ftech'</span>);</div><div class="line">event.respondWith(cacheThenNetwork(event));</div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">cacheThenNetwork</span>(<span class="params">event</span>) </span>&#123;</div><div class="line"><span class="keyword">const</span> cache = <span class="keyword">await</span> caches.open(getCacheName());</div><div class="line"></div><div class="line"><span class="keyword">const</span> cacheResponse = <span class="keyword">await</span> cache.match(event.request);</div><div class="line"><span class="keyword">if</span> (cacheResponse) &#123;</div><div class="line">log(<span class="string">'From Cache:'</span>, event.request.url);</div><div class="line"><span class="keyword">return</span> cacheResponse;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">const</span> networkResponse = fetch(event.request);</div><div class="line">log(<span class="string">'Calling network:'</span>, event.request.url);</div><div class="line"><span class="keyword">return</span> networkResponse;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>所以從開發工具的 Application (左邊選 Service Workers)可以發現，sw.js 已經 activated 及 running ，在 Cache Storage 也儲存我們要 Cache 的資源 。如下圖，<br><img src="/2017/12/18/2017017/devtool_s.png" alt="DevTool Service Workers" title="DevTool Service Workers"><br><img src="/2017/12/18/2017017/sw-cache.png" alt="DevTool Service Workers Cache" title="DevTool Service Workers Cache"></p><p>然後我們在開發工具的 Application 中勾選 offline 後，再重新整理頁面，可以發現我們的頁面可以正常的顯示哦! 如下圖，<br><img src="/2017/12/18/2017017/sw-offline.png" alt="DevTool Service Workers Offline" title="DevTool Service Workers Offline"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;一般的 Web 應用程式，如果 Server 端連不上了，就會直接 GG (在 Chrome 上 恐龍就出現了)。是否有什麼方式在 Client 端程式與 Server 端之間有一個 Buffer 呢?&lt;br&gt;讓應用系統會整個 GG 呢? 答案就是 &lt;a href=&quot;htt
      
    
    </summary>
    
    
      <category term="Angular" scheme="https://rainmakerho.github.io/tags/Angular/"/>
    
      <category term="Service Worker" scheme="https://rainmakerho.github.io/tags/Service-Worker/"/>
    
  </entry>
  
  <entry>
    <title>Windows 10 IoT Core 如何透過 UWP 程式來 重開機 或是 關機 (C00CE014)</title>
    <link href="https://rainmakerho.github.io/2017/12/11/2017016/"/>
    <id>https://rainmakerho.github.io/2017/12/11/2017016/</id>
    <published>2017-12-11T06:35:08.000Z</published>
    <updated>2017-12-11T07:11:54.327Z</updated>
    
    <content type="html"><![CDATA[<p>最近在 RPi2 上面的 Windows IoT Core UWP 程式，網路跑一跑就 GG 了，它就完全沒辦法對外連網，外面也連不到它。一定要重新開機後，網路才會好。<br>於是參考 <a href="https://marcominerva.wordpress.com/2016/12/13/how-to-shutdown-a-windows-10-iot-core-device-from-a-uwp-app/" target="_blank" rel="external">How to shutdown a Windows 10 IoT Core device from a UWP app</a>這篇文章的方式，使用 <em>ShutdownManager.BeginShutdown(ShutdownKind.Restart, TimeSpan.FromSeconds(5));</em>，並在 <em>Package.appxmanifest</em> 檔案中加入 xmlns:iot namespace, IgnorableNamespaces 以及在 Capabilities 節點中加入 <em>iot:Capability Name=”systemManagement”</em> (請檢視原始碼編輯哦! UI 無法設定!)。<br>結果程式一建置下去就 GG 了，出現「驗證錯誤。error C00CE014: App manifest validation error: The app manifest must be valid as per schema:」的錯誤。</p><p>我的 Package.appxmanifest 檔案如下，</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">Package</span> <span class="attr">xmlns</span>=<span class="string">"http://schemas.microsoft.com/appx/manifest/foundation/windows10"</span></span></div><div class="line"><span class="tag">         <span class="attr">xmlns:mp</span>=<span class="string">"http://schemas.microsoft.com/appx/2014/phone/manifest"</span></span></div><div class="line"><span class="tag">         <span class="attr">xmlns:uap</span>=<span class="string">"http://schemas.microsoft.com/appx/manifest/uap/windows10"</span></span></div><div class="line"><span class="tag">         <span class="attr">xmlns:iot</span>=<span class="string">"http://schemas.microsoft.com/appx/manifest/iot/windows10"</span> <span class="attr">IgnorableNamespaces</span>=<span class="string">"uap mp iot"</span>&gt;</span></div><div class="line">  ...</div><div class="line">  <span class="tag">&lt;<span class="name">Capabilities</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">Capability</span> <span class="attr">Name</span>=<span class="string">"internetClient"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">DeviceCapability</span> <span class="attr">Name</span>=<span class="string">"bluetooth"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">iot:Capability</span> <span class="attr">Name</span>=<span class="string">"systemManagement"</span> /&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">Capabilities</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">Package</span>&gt;</span></div></pre></td></tr></table></figure><p>會有 <em>error C00CE014</em> 的錯誤，因為在 Capabilities 中的順序不對，Capability 要在第一順位，而且要在一起，再來才是 DeviceCapability ，如下面的順序就可以順利建置成功，</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">Package</span> <span class="attr">xmlns</span>=<span class="string">"http://schemas.microsoft.com/appx/manifest/foundation/windows10"</span></span></div><div class="line"><span class="tag">         <span class="attr">xmlns:mp</span>=<span class="string">"http://schemas.microsoft.com/appx/2014/phone/manifest"</span></span></div><div class="line"><span class="tag">         <span class="attr">xmlns:uap</span>=<span class="string">"http://schemas.microsoft.com/appx/manifest/uap/windows10"</span></span></div><div class="line"><span class="tag">         <span class="attr">xmlns:iot</span>=<span class="string">"http://schemas.microsoft.com/appx/manifest/iot/windows10"</span> <span class="attr">IgnorableNamespaces</span>=<span class="string">"uap mp iot"</span>&gt;</span></div><div class="line">  ...</div><div class="line">  <span class="tag">&lt;<span class="name">Capabilities</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">Capability</span> <span class="attr">Name</span>=<span class="string">"internetClient"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">iot:Capability</span> <span class="attr">Name</span>=<span class="string">"systemManagement"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">DeviceCapability</span> <span class="attr">Name</span>=<span class="string">"bluetooth"</span> /&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">Capabilities</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">Package</span>&gt;</span></div></pre></td></tr></table></figure><p>Capability -&gt; iot:Capability -&gt; DeviceCapability …</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近在 RPi2 上面的 Windows IoT Core UWP 程式，網路跑一跑就 GG 了，它就完全沒辦法對外連網，外面也連不到它。一定要重新開機後，網路才會好。&lt;br&gt;於是參考 &lt;a href=&quot;https://marcominerva.wordpress.com/
      
    
    </summary>
    
    
      <category term="Windows 10 IoT Core" scheme="https://rainmakerho.github.io/tags/Windows-10-IoT-Core/"/>
    
      <category term="Shutdown" scheme="https://rainmakerho.github.io/tags/Shutdown/"/>
    
      <category term="Restart" scheme="https://rainmakerho.github.io/tags/Restart/"/>
    
      <category term="iot:Capability" scheme="https://rainmakerho.github.io/tags/iot-Capability/"/>
    
      <category term="systemManagement" scheme="https://rainmakerho.github.io/tags/systemManagement/"/>
    
      <category term="C00CE014" scheme="https://rainmakerho.github.io/tags/C00CE014/"/>
    
  </entry>
  
  <entry>
    <title>為什麼 OPTIONS 時會給 404 呢?</title>
    <link href="https://rainmakerho.github.io/2017/12/07/2017015/"/>
    <id>https://rainmakerho.github.io/2017/12/07/2017015/</id>
    <published>2017-12-07T09:30:04.000Z</published>
    <updated>2017-12-11T09:52:54.785Z</updated>
    
    <content type="html"><![CDATA[<h4 id="同事在-CALL-IIS-上的網頁時，因為-CORS-所以會先做-Preflight-request，跑-OPTIONS-時，居然回-404-。"><a href="#同事在-CALL-IIS-上的網頁時，因為-CORS-所以會先做-Preflight-request，跑-OPTIONS-時，居然回-404-。" class="headerlink" title="同事在 CALL IIS 上的網頁時，因為 CORS 所以會先做 Preflight request，跑 OPTIONS 時，居然回 404 。"></a>同事在 CALL IIS 上的網頁時，因為 CORS 所以會先做 <a href="https://developer.mozilla.org/en-US/docs/Glossary/Preflight_request" target="_blank" rel="external">Preflight request</a>，跑 OPTIONS 時，居然回 404 。</h4><h4 id="在-web-config-中有允許-OPTIONS-呀-而且在-web-config-中設定的-header-也有-response-出來。-但-status-code-卻是-404-。"><a href="#在-web-config-中有允許-OPTIONS-呀-而且在-web-config-中設定的-header-也有-response-出來。-但-status-code-卻是-404-。" class="headerlink" title="在 web.config 中有允許 OPTIONS 呀 ~ 而且在 web.config 中設定的 header 也有 response 出來。 但 status code 卻是 404 。"></a>在 web.config 中有允許 OPTIONS 呀 ~ 而且在 web.config 中設定的 header 也有 response 出來。 但 status code 卻是 404 。</h4><h4 id="後來到-IIS-一看才知道，在-IIS-的「要求篩選」那裡，-OPTIONS-被設定成了-不允許，如下圖，"><a href="#後來到-IIS-一看才知道，在-IIS-的「要求篩選」那裡，-OPTIONS-被設定成了-不允許，如下圖，" class="headerlink" title="後來到 IIS 一看才知道，在 IIS 的「要求篩選」那裡， OPTIONS 被設定成了 不允許，如下圖，"></a>後來到 IIS 一看才知道，在 IIS 的「要求篩選」那裡， OPTIONS 被設定成了 不允許，如下圖，</h4><p><br><br><img src="/2017/12/07/2017015/REQFILTER.png" alt="slug 要求篩選" title="slug 要求篩選"><br><br></p><h4 id="後來將它移除後，就可以了哦"><a href="#後來將它移除後，就可以了哦" class="headerlink" title="後來將它移除後，就可以了哦 ~"></a>後來將它移除後，就可以了哦 ~</h4><h4 id="大家如果有類似的問題，可以檢查一下-IIS-的「要求篩選」設定哦"><a href="#大家如果有類似的問題，可以檢查一下-IIS-的「要求篩選」設定哦" class="headerlink" title="大家如果有類似的問題，可以檢查一下 IIS 的「要求篩選」設定哦 !"></a>大家如果有類似的問題，可以檢查一下 IIS 的「要求篩選」設定哦 !</h4>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;同事在-CALL-IIS-上的網頁時，因為-CORS-所以會先做-Preflight-request，跑-OPTIONS-時，居然回-404-。&quot;&gt;&lt;a href=&quot;#同事在-CALL-IIS-上的網頁時，因為-CORS-所以會先做-Preflight-reque
      
    
    </summary>
    
    
      <category term="OPTIONS" scheme="https://rainmakerho.github.io/tags/OPTIONS/"/>
    
      <category term="IIS" scheme="https://rainmakerho.github.io/tags/IIS/"/>
    
      <category term="404" scheme="https://rainmakerho.github.io/tags/404/"/>
    
      <category term="要求篩選" scheme="https://rainmakerho.github.io/tags/%E8%A6%81%E6%B1%82%E7%AF%A9%E9%81%B8/"/>
    
  </entry>
  
  <entry>
    <title>Writeable Session 造成網頁被卡住的問題</title>
    <link href="https://rainmakerho.github.io/2017/11/30/2017014/"/>
    <id>https://rainmakerho.github.io/2017/11/30/2017014/</id>
    <published>2017-11-30T09:49:38.000Z</published>
    <updated>2017-12-11T09:53:17.871Z</updated>
    
    <content type="html"><![CDATA[<h4 id="在之前有討論到不同網頁使用到-Writeable-Session-時會卡來卡去的狀況-Lock-or-Blocking-使用-Session-要小心網頁會被-卡住哦-，或是-Web-Service-如果開啟-Session-存取的話，預設是-Writeable-Session-模式-設定-WebService-使用-ReadOnly-Session-。"><a href="#在之前有討論到不同網頁使用到-Writeable-Session-時會卡來卡去的狀況-Lock-or-Blocking-使用-Session-要小心網頁會被-卡住哦-，或是-Web-Service-如果開啟-Session-存取的話，預設是-Writeable-Session-模式-設定-WebService-使用-ReadOnly-Session-。" class="headerlink" title="在之前有討論到不同網頁使用到 Writeable Session 時會卡來卡去的狀況 Lock or Blocking( 使用 Session 要小心網頁會被 卡住哦! )，或是 Web Service 如果開啟 Session 存取的話，預設是 Writeable Session 模式(設定 WebService 使用 ReadOnly Session)。"></a>在之前有討論到不同網頁使用到 Writeable Session 時會卡來卡去的狀況 Lock or Blocking( <a href="https://dotblogs.com.tw/rainmaker/2016/06/30/103719" target="_blank" rel="external">使用 Session 要小心網頁會被 卡住哦!</a> )，或是 Web Service 如果開啟 Session 存取的話，預設是 Writeable Session 模式(<a href="https://dotblogs.com.tw/rainmaker/2015/02/10/149456" target="_blank" rel="external">設定 WebService 使用 ReadOnly Session</a>)。</h4><h4 id="解法除了設定-SessionStateBehavior-ReadOnly-外，如果一定要用-Writeable-Session-時-怕改成-ReadOnly-會影響現有系統的話-，可以參考When-a-Single-ASP-NET-Client-makes-Concurrent-Requests-for-Writeable-Session-Variables提供的方式，因為在寫入-Session-時會造成-500ms-的-Delay-時間-請參考-Storing-Anything-in-ASP-NET-Session-Causes-500ms-Delays-，"><a href="#解法除了設定-SessionStateBehavior-ReadOnly-外，如果一定要用-Writeable-Session-時-怕改成-ReadOnly-會影響現有系統的話-，可以參考When-a-Single-ASP-NET-Client-makes-Concurrent-Requests-for-Writeable-Session-Variables提供的方式，因為在寫入-Session-時會造成-500ms-的-Delay-時間-請參考-Storing-Anything-in-ASP-NET-Session-Causes-500ms-Delays-，" class="headerlink" title="解法除了設定 SessionStateBehavior.ReadOnly 外，如果一定要用 Writeable Session 時(怕改成 ReadOnly 會影響現有系統的話)，可以參考When a Single ASP.NET Client makes Concurrent Requests for Writeable Session Variables提供的方式，因為在寫入 Session 時會造成 500ms 的 Delay 時間(請參考:Storing Anything in ASP.NET Session Causes 500ms Delays)，"></a>解法除了設定 SessionStateBehavior.ReadOnly 外，如果一定要用 Writeable Session 時(怕改成 ReadOnly 會影響現有系統的話)，可以參考<a href="https://www.red-gate.com/simple-talk/dotnet/asp-net/single-asp-net-client-makes-concurrent-requests-writeable-session-variables/" target="_blank" rel="external">When a Single ASP.NET Client makes Concurrent Requests for Writeable Session Variables</a>提供的方式，因為在寫入 Session 時會造成 500ms 的 Delay 時間(請參考:<a href="https://stackoverflow.com/questions/8349033/storing-anything-in-asp-net-session-causes-500ms-delays" target="_blank" rel="external">Storing Anything in ASP.NET Session Causes 500ms Delays</a>)，</h4><ul><li><h4 id="降低-Session-Lock-Check-的時間"><a href="#降低-Session-Lock-Check-的時間" class="headerlink" title="降低 Session Lock Check 的時間"></a>降低 Session Lock Check 的時間</h4><h4 id="可以在-Global-asax-cs-的-Application-Start-Method-去設定預設值，-Polling-Interval-從-500ms-改成-30ms-Polling-Delta-從-250ms-改成-15ms-，如下，"><a href="#可以在-Global-asax-cs-的-Application-Start-Method-去設定預設值，-Polling-Interval-從-500ms-改成-30ms-Polling-Delta-從-250ms-改成-15ms-，如下，" class="headerlink" title="可以在 Global.asax.cs 的 Application_Start Method 去設定預設值， Polling Interval 從 500ms 改成 30ms, Polling Delta 從 250ms 改成 15ms ，如下，"></a>可以在 Global.asax.cs 的 Application_Start Method 去設定預設值， Polling Interval 從 500ms 改成 30ms, Polling Delta 從 250ms 改成 15ms ，如下，</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">Application_Start</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>)</span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">    <span class="keyword">var</span> sessionStateModuleType = <span class="keyword">typeof</span>(SessionStateModule);</div><div class="line">    <span class="keyword">var</span> pollingIntervalFieldInfo = sessionStateModuleType.GetField(<span class="string">"LOCKED_ITEM_POLLING_INTERVAL"</span>, BindingFlags.NonPublic | BindingFlags.Static);</div><div class="line">    <span class="keyword">var</span> orgpollingInterval = pollingIntervalFieldInfo.GetValue(<span class="literal">null</span>);</div><div class="line">    pollingIntervalFieldInfo.SetValue(<span class="literal">null</span>, <span class="number">30</span>); <span class="comment">// default 500ms</span></div><div class="line">    <span class="keyword">var</span> pollingDeltaFieldInfo = sessionStateModuleType.GetField(<span class="string">"LOCKED_ITEM_POLLING_DELTA"</span>, BindingFlags.NonPublic | BindingFlags.Static);</div><div class="line">    <span class="keyword">var</span> orgPollingDelta = pollingDeltaFieldInfo.GetValue(<span class="literal">null</span>);</div><div class="line">    pollingDeltaFieldInfo.SetValue(<span class="literal">null</span>, TimeSpan.FromMilliseconds(<span class="number">15.0</span>)); <span class="comment">// default 250ms</span></div><div class="line">&#125;</div></pre></td></tr></table></figure></li></ul><img src="/2017/11/30/2017014/application_start.png" alt="slug 在 Application Start 事件中更改預設值" title="slug 在 Application Start 事件中更改預設值">  <p><br><br><img src="/2017/11/30/2017014/beginRequest.png" alt="slug 可以在 Request 時發現，預設值已經被更改了" title="slug 可以在 Request 時發現，預設值已經被更改了"><br><br></p><ul><li><h4 id="實作-Lockless-SessionStateStoreProvider"><a href="#實作-Lockless-SessionStateStoreProvider" class="headerlink" title="實作 Lockless SessionStateStoreProvider"></a>實作 Lockless SessionStateStoreProvider</h4></li></ul><figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">LocklessInProcSessionStateStore</span> : <span class="title">SessionStateStoreProviderBase</span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">private</span> SessionStateStoreProviderBase _store;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Initialize</span>(<span class="params"><span class="keyword">string</span> name, NameValueCollection config</span>)</span></div><div class="line"><span class="function">    </span>&#123;</div><div class="line">        <span class="keyword">base</span>.Initialize(name, config);</div><div class="line"></div><div class="line">        <span class="keyword">var</span> storeType = <span class="keyword">typeof</span>(SessionStateStoreProviderBase).Assembly.GetType(<span class="string">"System.Web.SessionState.InProcSessionStateStore"</span>);</div><div class="line">        _store = (SessionStateStoreProviderBase)Activator.CreateInstance(storeType);</div><div class="line">        _store.Initialize(name, config);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Dispose</span>(<span class="params"></span>)</span></div><div class="line"><span class="function">    </span>&#123;</div><div class="line">        _store.Dispose();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">bool</span> <span class="title">SetItemExpireCallback</span>(<span class="params">SessionStateItemExpireCallback expireCallback</span>)</span></div><div class="line"><span class="function">    </span>&#123;</div><div class="line">        <span class="keyword">return</span> _store.SetItemExpireCallback(expireCallback);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">InitializeRequest</span>(<span class="params">HttpContext context</span>)</span></div><div class="line"><span class="function">    </span>&#123;</div><div class="line">        _store.InitializeRequest(context);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> SessionStateStoreData <span class="title">GetItem</span>(<span class="params">HttpContext context, <span class="keyword">string</span> id, <span class="keyword">out</span> <span class="keyword">bool</span> locked, <span class="keyword">out</span> TimeSpan lockAge, <span class="keyword">out</span> <span class="keyword">object</span> lockId,</span></span></div><div class="line"><span class="function"><span class="params">        <span class="keyword">out</span> SessionStateActions actions</span>)</span></div><div class="line"><span class="function">    </span>&#123;</div><div class="line">        <span class="keyword">var</span> returnValue = _store.GetItem(context, id, <span class="keyword">out</span> locked, <span class="keyword">out</span> lockAge, <span class="keyword">out</span> lockId, <span class="keyword">out</span> actions);</div><div class="line">        <span class="keyword">if</span> (returnValue == <span class="literal">null</span> &amp;&amp; lockId != <span class="literal">null</span>)</div><div class="line">        &#123;</div><div class="line">            _store.ReleaseItemExclusive(context, id, lockId);</div><div class="line">            returnValue = _store.GetItem(context, id, <span class="keyword">out</span> locked, <span class="keyword">out</span> lockAge, <span class="keyword">out</span> lockId, <span class="keyword">out</span> actions);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">return</span> returnValue;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> SessionStateStoreData <span class="title">GetItemExclusive</span>(<span class="params">HttpContext context, <span class="keyword">string</span> id, <span class="keyword">out</span> <span class="keyword">bool</span> locked, <span class="keyword">out</span> TimeSpan lockAge,</span></span></div><div class="line"><span class="function"><span class="params">        <span class="keyword">out</span> <span class="keyword">object</span> lockId, <span class="keyword">out</span> SessionStateActions actions</span>)</span></div><div class="line"><span class="function">    </span>&#123;</div><div class="line">        <span class="keyword">var</span> returnValue = _store.GetItemExclusive(context, id, <span class="keyword">out</span> locked, <span class="keyword">out</span> lockAge, <span class="keyword">out</span> lockId, <span class="keyword">out</span> actions);</div><div class="line">        <span class="keyword">if</span> (returnValue == <span class="literal">null</span> &amp;&amp; lockId != <span class="literal">null</span>)</div><div class="line">        &#123;</div><div class="line">            _store.ReleaseItemExclusive(context, id, lockId);</div><div class="line">            returnValue = _store.GetItemExclusive(context, id, <span class="keyword">out</span> locked, <span class="keyword">out</span> lockAge, <span class="keyword">out</span> lockId, <span class="keyword">out</span> actions);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">return</span> returnValue;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">ReleaseItemExclusive</span>(<span class="params">HttpContext context, <span class="keyword">string</span> id, <span class="keyword">object</span> lockId</span>)</span></div><div class="line"><span class="function">    </span>&#123;</div><div class="line">        _store.ReleaseItemExclusive(context, id, lockId);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">SetAndReleaseItemExclusive</span>(<span class="params">HttpContext context, <span class="keyword">string</span> id, SessionStateStoreData item, <span class="keyword">object</span> lockId, <span class="keyword">bool</span> newItem</span>)</span></div><div class="line"><span class="function">    </span>&#123;</div><div class="line">        _store.SetAndReleaseItemExclusive(context, id, item, lockId, newItem);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">RemoveItem</span>(<span class="params">HttpContext context, <span class="keyword">string</span> id, <span class="keyword">object</span> lockId, SessionStateStoreData item</span>)</span></div><div class="line"><span class="function">    </span>&#123;</div><div class="line">        _store.RemoveItem(context, id, lockId, item);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">ResetItemTimeout</span>(<span class="params">HttpContext context, <span class="keyword">string</span> id</span>)</span></div><div class="line"><span class="function">    </span>&#123;</div><div class="line">        _store.ResetItemTimeout(context, id);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> SessionStateStoreData <span class="title">CreateNewStoreData</span>(<span class="params">HttpContext context, <span class="keyword">int</span> timeout</span>)</span></div><div class="line"><span class="function">    </span>&#123;</div><div class="line">        <span class="keyword">return</span> _store.CreateNewStoreData(context, timeout);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">CreateUninitializedItem</span>(<span class="params">HttpContext context, <span class="keyword">string</span> id, <span class="keyword">int</span> timeout</span>)</span></div><div class="line"><span class="function">    </span>&#123;</div><div class="line">        _store.CreateUninitializedItem(context, id, timeout);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">EndRequest</span>(<span class="params">HttpContext context</span>)</span></div><div class="line"><span class="function">    </span>&#123;</div><div class="line">        _store.EndRequest(context);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><pre><code>#### 在 web.config 中加入設定自定的 SessionState，如下，<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">sessionState</span> <span class="attr">mode</span>=<span class="string">"Custom"</span> <span class="attr">customProvider</span>=<span class="string">"LocklessInProcSessionStateStore"</span> <span class="attr">cookieless</span>=<span class="string">"false"</span> <span class="attr">timeout</span>=<span class="string">"1"</span> &gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">providers</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">add</span> <span class="attr">name</span>=<span class="string">"LocklessInProcSessionStateStore"</span> </span></div><div class="line"><span class="tag">        <span class="attr">type</span>=<span class="string">"你專案的namespace.LocklessInProcSessionStateStore"</span>/&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">providers</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">sessionState</span>&gt;</span></div></pre></td></tr></table></figure></code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;在之前有討論到不同網頁使用到-Writeable-Session-時會卡來卡去的狀況-Lock-or-Blocking-使用-Session-要小心網頁會被-卡住哦-，或是-Web-Service-如果開啟-Session-存取的話，預設是-Writeable-S
      
    
    </summary>
    
    
      <category term="Session" scheme="https://rainmakerho.github.io/tags/Session/"/>
    
      <category term="EnableSessionState" scheme="https://rainmakerho.github.io/tags/EnableSessionState/"/>
    
      <category term="SessionStateStoreProvider" scheme="https://rainmakerho.github.io/tags/SessionStateStoreProvider/"/>
    
      <category term="Concurrent" scheme="https://rainmakerho.github.io/tags/Concurrent/"/>
    
  </entry>
  
  <entry>
    <title>為什麼 scrollbar 在 mac os 的 browser 無法顯示出來呢?</title>
    <link href="https://rainmakerho.github.io/2017/11/29/2017013/"/>
    <id>https://rainmakerho.github.io/2017/11/29/2017013/</id>
    <published>2017-11-29T01:33:20.000Z</published>
    <updated>2017-11-29T01:45:44.528Z</updated>
    
    <content type="html"><![CDATA[<h4 id="最近在-div-上加入-overflow-y-scroll-height-250px-讓-div-高度超過-250px-時就呈現-scrollbar-。-在-Windows-的機器上測試顯示都正常。"><a href="#最近在-div-上加入-overflow-y-scroll-height-250px-讓-div-高度超過-250px-時就呈現-scrollbar-。-在-Windows-的機器上測試顯示都正常。" class="headerlink" title="最近在 div 上加入 overflow-y: scroll; height:250px; 讓 div 高度超過 250px 時就呈現 scrollbar 。 在 Windows 的機器上測試顯示都正常。"></a>最近在 div 上加入 <em>overflow-y: scroll; height:250px;</em> 讓 div 高度超過 250px 時就呈現 scrollbar 。 在 Windows 的機器上測試顯示都正常。</h4><h4 id="但是在-mac-上測試，-scrollbar-卻沒有呈現出來。"><a href="#但是在-mac-上測試，-scrollbar-卻沒有呈現出來。" class="headerlink" title="但是在 mac 上測試， scrollbar 卻沒有呈現出來。"></a>但是在 mac 上測試， scrollbar 卻沒有呈現出來。</h4><h4 id="後來有查到-Force-the-scrollbar-back-這些的說明，我們需要針對-webkit-scrollbar-來設定它，所以在-css-中需要再加入以下的設定，來讓-scrollbar-在-mac-的瀏覽器可以正常呈現-scrollbar-哦"><a href="#後來有查到-Force-the-scrollbar-back-這些的說明，我們需要針對-webkit-scrollbar-來設定它，所以在-css-中需要再加入以下的設定，來讓-scrollbar-在-mac-的瀏覽器可以正常呈現-scrollbar-哦" class="headerlink" title="後來有查到 Force the scrollbar back 這些的說明，我們需要針對 -webkit-scrollbar 來設定它，所以在 css 中需要再加入以下的設定，來讓 scrollbar 在 mac 的瀏覽器可以正常呈現 scrollbar 哦!"></a>後來有查到 <a href="http://simurai.com/blog/2011/07/26/webkit-scrollbar" target="_blank" rel="external">Force the scrollbar back</a> 這些的說明，我們需要針對 -webkit-scrollbar 來設定它，所以在 css 中需要再加入以下的設定，來讓 scrollbar 在 mac 的瀏覽器可以正常呈現 scrollbar 哦!</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="selector-pseudo">::-webkit-scrollbar</span> &#123;</div><div class="line">    <span class="attribute">-webkit-appearance</span>: none;</div><div class="line">    <span class="attribute">width</span>: <span class="number">7px</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-pseudo">::-webkit-scrollbar-thumb</span> &#123;</div><div class="line">    <span class="attribute">border-radius</span>: <span class="number">4px</span>;</div><div class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(0,0,0,.5);</div><div class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">1px</span> <span class="built_in">rgba</span>(255,255,255,.5);</div><div class="line">&#125;</div></pre></td></tr></table></figure><p><a href="http://jsfiddle.net/simurai/UsvLN/" target="_blank" rel="external">測試網頁</a> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;最近在-div-上加入-overflow-y-scroll-height-250px-讓-div-高度超過-250px-時就呈現-scrollbar-。-在-Windows-的機器上測試顯示都正常。&quot;&gt;&lt;a href=&quot;#最近在-div-上加入-overflow-
      
    
    </summary>
    
    
      <category term="mac" scheme="https://rainmakerho.github.io/tags/mac/"/>
    
      <category term="scrollbar" scheme="https://rainmakerho.github.io/tags/scrollbar/"/>
    
  </entry>
  
  <entry>
    <title>解析 SQL Server Deadlocks</title>
    <link href="https://rainmakerho.github.io/2017/11/16/2017012/"/>
    <id>https://rainmakerho.github.io/2017/11/16/2017012/</id>
    <published>2017-11-16T01:57:34.000Z</published>
    <updated>2017-12-11T09:54:30.985Z</updated>
    
    <content type="html"><![CDATA[<h4 id="最近收到了-Deadlock-的-trace-file，如下圖，"><a href="#最近收到了-Deadlock-的-trace-file，如下圖，" class="headerlink" title="最近收到了 Deadlock 的 trace file，如下圖，"></a>最近收到了 Deadlock 的 trace file，如下圖，</h4><img src="/2017/11/16/2017012/001.png" alt="slug Deadlock graph" title="slug Deadlock graph"><h4 id="如果直接看圖示資訊不夠清楚的話，可以將那個-trc-檔用-Notepad-來開，用-xml-方式檢視，就可以看到更多詳細的資料，如下圖，"><a href="#如果直接看圖示資訊不夠清楚的話，可以將那個-trc-檔用-Notepad-來開，用-xml-方式檢視，就可以看到更多詳細的資料，如下圖，" class="headerlink" title="如果直接看圖示資訊不夠清楚的話，可以將那個 trc 檔用 Notepad++ 來開，用 xml 方式檢視，就可以看到更多詳細的資料，如下圖，"></a>如果直接看圖示資訊不夠清楚的話，可以將那個 trc 檔用 Notepad++ 來開，用 xml 方式檢視，就可以看到更多詳細的資料，如下圖，</h4><img src="/2017/11/16/2017012/002.png" alt="slug View in Notepad++" title="slug View in Notepad++"><h4 id="當然如果這樣資訊又太雜的話，那還有一個方式，就是在那個-Deadlock-graph-那列上面按右鍵，選取「擷取事件資料-X-」將它另存成-xdl-檔，然後用-「SQL-Sentry-Plan-Explorer」-來檢視，如下圖，"><a href="#當然如果這樣資訊又太雜的話，那還有一個方式，就是在那個-Deadlock-graph-那列上面按右鍵，選取「擷取事件資料-X-」將它另存成-xdl-檔，然後用-「SQL-Sentry-Plan-Explorer」-來檢視，如下圖，" class="headerlink" title="當然如果這樣資訊又太雜的話，那還有一個方式，就是在那個 Deadlock graph 那列上面按右鍵，選取「擷取事件資料(X)」將它另存成 .xdl 檔，然後用 「SQL Sentry Plan Explorer」 來檢視，如下圖，"></a>當然如果這樣資訊又太雜的話，那還有一個方式，就是在那個 Deadlock graph 那列上面按右鍵，選取「擷取事件資料(X)」將它另存成 .xdl 檔，然後用 「<a href="http://www.sentryone.com/plan-explorer" target="_blank" rel="external">SQL Sentry Plan Explorer</a>」 來檢視，如下圖，</h4><img src="/2017/11/16/2017012/003.png" alt="slug saveAs XDL file" title="slug saveAs XDL file"><img src="/2017/11/16/2017012/004.png" alt="slug View in [SQL Sentry Plan Explorer]" title="slug View in [SQL Sentry Plan Explorer]"><h3 id="案例分享"><a href="#案例分享" class="headerlink" title="案例分享"></a>案例分享</h3><ul><li><h4 id="Reader-Writer-Deadlocks"><a href="#Reader-Writer-Deadlocks" class="headerlink" title="Reader-Writer Deadlocks"></a>Reader-Writer Deadlocks</h4><h4 id="當可以看到詳細資料後，就要來開始解析看看是什麼原因造成的，以上面那個例子來說，一個是-update-，另一個是-select-，而-Isolation-Level-是-repeatable-read-。是典型的-Reader-Writer-Deadlocks-，解法如下，"><a href="#當可以看到詳細資料後，就要來開始解析看看是什麼原因造成的，以上面那個例子來說，一個是-update-，另一個是-select-，而-Isolation-Level-是-repeatable-read-。是典型的-Reader-Writer-Deadlocks-，解法如下，" class="headerlink" title="當可以看到詳細資料後，就要來開始解析看看是什麼原因造成的，以上面那個例子來說，一個是 update ，另一個是 select ，而 Isolation Level 是 repeatable read 。是典型的 Reader-Writer Deadlocks ，解法如下，"></a>當可以看到詳細資料後，就要來開始解析看看是什麼原因造成的，以上面那個例子來說，一個是 update ，另一個是 select ，而 Isolation Level 是 repeatable read 。是典型的 Reader-Writer Deadlocks ，解法如下，</h4></li></ul><ul><li>SELECT 語句不要包在交易之中。</li><li>檢查 SELECT 語句是否有用到合適的 INDEX (使用 SEEK, 而非 SCAN)，如果已用 SEEK 了，就嘗試下面的解法。</li><li>使用 row-version based isolation level，例如 READ COMMITTED SNAPSHOT 或是 SNAPSHOT。</li><li>SELECT 語句使用 NOLOCK。</li></ul><ul><li><h4 id="Writer-Writer-Deadlocks"><a href="#Writer-Writer-Deadlocks" class="headerlink" title="Writer-Writer Deadlocks"></a>Writer-Writer Deadlocks</h4><img src="/2017/11/16/2017012/005.png" alt="slug Writer-Writer Deadlock" title="slug Writer-Writer Deadlock"><h4 id="從上圖來看都是針對同一個-Page-想要做-Update-而造成的-Deadlock，另外會有一個比較奇怪的就是「交換事件-exchangeEvent-」，是因為平行處理的原因，可能是沒用到適合的-index，所以才會讓-SQL-使用平行處理。"><a href="#從上圖來看都是針對同一個-Page-想要做-Update-而造成的-Deadlock，另外會有一個比較奇怪的就是「交換事件-exchangeEvent-」，是因為平行處理的原因，可能是沒用到適合的-index，所以才會讓-SQL-使用平行處理。" class="headerlink" title="從上圖來看都是針對同一個 Page 想要做 Update 而造成的 Deadlock，另外會有一個比較奇怪的就是「交換事件(exchangeEvent)」，是因為平行處理的原因，可能是沒用到適合的 index，所以才會讓 SQL 使用平行處理。"></a>從上圖來看都是針對同一個 Page 想要做 Update 而造成的 Deadlock，另外會有一個比較奇怪的就是「交換事件(exchangeEvent)」，是因為平行處理的原因，可能是沒用到適合的 index，所以才會讓 SQL 使用平行處理。</h4></li></ul><img src="/2017/11/16/2017012/006.png" alt="slug View in [SQL Sentry Plan Explorer]" title="slug View in [SQL Sentry Plan Explorer]"><h4 id="從上圖可以發現，使用相同的-Store-Procedure-，而-Lock-在-Delete-，可以判斷那個-Delete-應該是沒有使用到適合的-index-，所以在-Delete-時，會使用-Scan-的方式去找到要刪除的那一些資料，如下的執行計畫，"><a href="#從上圖可以發現，使用相同的-Store-Procedure-，而-Lock-在-Delete-，可以判斷那個-Delete-應該是沒有使用到適合的-index-，所以在-Delete-時，會使用-Scan-的方式去找到要刪除的那一些資料，如下的執行計畫，" class="headerlink" title="從上圖可以發現，使用相同的 Store Procedure ，而 Lock 在 Delete ，可以判斷那個 Delete 應該是沒有使用到適合的 index ，所以在 Delete 時，會使用 Scan 的方式去找到要刪除的那一些資料，如下的執行計畫，"></a>從上圖可以發現，使用相同的 Store Procedure ，而 Lock 在 Delete ，可以判斷那個 Delete 應該是沒有使用到適合的 index ，所以在 Delete 時，會使用 Scan 的方式去找到要刪除的那一些資料，如下的執行計畫，</h4><img src="/2017/11/16/2017012/007.png" alt="slug Delete 的執行計畫" title="slug Delete 的執行計畫"><h4 id="可以發現，它是真的是使用-SCAN-的方式。解法如下，"><a href="#可以發現，它是真的是使用-SCAN-的方式。解法如下，" class="headerlink" title="可以發現，它是真的是使用 SCAN 的方式。解法如下，"></a>可以發現，它是真的是使用 SCAN 的方式。解法如下，</h4><ul><li>建立適合的 index ，例如，</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">CREATE</span> NONCLUSTERED <span class="keyword">INDEX</span> NIDX_SRB_QNTSCORE_DATA_CASEID <span class="keyword">ON</span> dbo.SRB_QNTSCORE_DATA(CASEID);</div></pre></td></tr></table></figure><img src="/2017/11/16/2017012/008.png" alt="slug 建立過 index 的執行計畫" title="slug 建立過 index 的執行計畫"><h3 id="其他解決方式"><a href="#其他解決方式" class="headerlink" title="其他解決方式"></a>其他解決方式</h3><h4 id="除了上述的-Case-的解法外，有其他的解法，"><a href="#除了上述的-Case-的解法外，有其他的解法，" class="headerlink" title="除了上述的 Case 的解法外，有其他的解法，"></a>除了上述的 Case 的解法外，有其他的解法，</h4><ul><li>更新資料表的順序<br>針對 Tables 修改的順序也是要注意，例如 sp1 是更新 tblA 及 tblB ，另一個 sp2 則是先更新 tblB 再更新 tblA ，這樣子的順序交叉，就很容易造成 Deadlock。 所以在 更新的順序上也是要考量到哦!</li><li>Create Indexes with Included Columns<br>有一些 Key Lookup deadlock 就是因為在 Update 某 Table 時，除了更新了 Clustered Index 後，還需要再更新 Non Clustered Index，而另一個 Select 除了透過 Non Clustered Index 找到資料後，還需要到 Lookup 到 Clustered Index 取得資料。這樣子就有可能會互相 Lock 到而造成 Deadlock，這種狀況可以加入 Included Columns 來解決。</li><li>MAXDOP<br>有些光 SELECT 時，就會發生 Deadlock ，是因為平行處理造成的，解法就是調整 SQL 。如果還會有 Deadlock 的話，就設定 MAXDOP 看看能不能解決。</li></ul><h3 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h3><h4 id="SQL-Server-Deadlocks-by-Example"><a href="#SQL-Server-Deadlocks-by-Example" class="headerlink" title="SQL Server Deadlocks by Example"></a><a href="https://www.red-gate.com/simple-talk/sql/performance/sql-server-deadlocks-by-example/" target="_blank" rel="external">SQL Server Deadlocks by Example</a></h4>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;最近收到了-Deadlock-的-trace-file，如下圖，&quot;&gt;&lt;a href=&quot;#最近收到了-Deadlock-的-trace-file，如下圖，&quot; class=&quot;headerlink&quot; title=&quot;最近收到了 Deadlock 的 trace file，
      
    
    </summary>
    
    
      <category term="SQL" scheme="https://rainmakerho.github.io/tags/SQL/"/>
    
      <category term="deadlock" scheme="https://rainmakerho.github.io/tags/deadlock/"/>
    
      <category term="交換事件" scheme="https://rainmakerho.github.io/tags/%E4%BA%A4%E6%8F%9B%E4%BA%8B%E4%BB%B6/"/>
    
      <category term="exchangeEvent" scheme="https://rainmakerho.github.io/tags/exchangeEvent/"/>
    
  </entry>
  
</feed>
