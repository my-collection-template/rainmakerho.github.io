<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>亂馬客 - Re:從零開始的軟體開發生活</title>
  <icon>https://www.gravatar.com/avatar/cd3aed042ccd7a5a5d9956b0bc07dc81</icon>
  <subtitle>Re:從零開始的軟體開發生活</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://rainmakerho.github.io/"/>
  <updated>2020-03-18T08:07:25.126Z</updated>
  <id>https://rainmakerho.github.io/</id>
  
  <author>
    <name>亂馬客</name>
    <email>rainmaker_ho@gss.com.tw</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>IIS 網站忽然全都出現 BC31007 無法開啟模組檔 的錯誤</title>
    <link href="https://rainmakerho.github.io/2020/03/18/2020002/"/>
    <id>https://rainmakerho.github.io/2020/03/18/2020002/</id>
    <published>2020-03-18T07:56:53.000Z</published>
    <updated>2020-03-18T08:07:25.126Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>今天同事詢問他的 Windows 2012R2 Server 上的網站居然全都出現 BC31007: 無法開啟模組檔 ‘C:\Windows\Micriosft.NET\Framework\v4.0.300319\Temporary ASP.NET Files...vb’ 系統錯誤，如下，</p><img src="/2020/03/18/2020002/001.png" title="bc31007"><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>後來找到 <a href="https://stackoverflow.com/questions/23248388/asp-net-site-wont-run-after-windows-update-compilation-error-temporary-asp-net" target="_blank" rel="noopener">Asp.net site wont run after windows update, Compilation error “Temporary ASP.NET Files”</a> ，建議 IIS_USERS 對 C:\Windows\Temp 目錄，有完全控制權限就可以了。</p><p>同事依設定後，網站就順利可以執行了哦 ^_^</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;今天同事詢問他的 Windows 2012R2 Server 上的網站居然全都出現 BC31007: 無法開啟模組檔 ‘C:\Windows
      
    
    </summary>
    
    
      <category term="BC31007" scheme="https://rainmakerho.github.io/tags/BC31007/"/>
    
      <category term="Temporary ASP.NET Fiels" scheme="https://rainmakerho.github.io/tags/Temporary-ASP-NET-Fiels/"/>
    
  </entry>
  
  <entry>
    <title>Dependency Injection in ASP.NET Core</title>
    <link href="https://rainmakerho.github.io/2020/02/03/2020001/"/>
    <id>https://rainmakerho.github.io/2020/02/03/2020001/</id>
    <published>2020-02-03T10:55:26.000Z</published>
    <updated>2020-02-07T10:21:31.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>Dependency Injection 在 ASP.NET Core 中佔著很重要的地位，除了使用 AddSingleton, AddScoped 及 AddTransient 外，還有什麼需要注意的細節以及進階的使用方式呢?</p><h3 id="問題研究"><a href="#問題研究" class="headerlink" title="問題研究"></a>問題研究</h3><h4 id="問題-1-如果同一個-interface-，同時加入-2-個不同的-class-，會發生錯誤嗎-如果沒有發生錯誤的話，在使用時，會取用那一個-class-呢"><a href="#問題-1-如果同一個-interface-，同時加入-2-個不同的-class-，會發生錯誤嗎-如果沒有發生錯誤的話，在使用時，會取用那一個-class-呢" class="headerlink" title="問題 1: 如果同一個 interface ，同時加入 2 個不同的 class ，會發生錯誤嗎? 如果沒有發生錯誤的話，在使用時，會取用那一個 class 呢?"></a>問題 1: 如果同一個 interface ，同時加入 2 個不同的 class ，會發生錯誤嗎? 如果沒有發生錯誤的話，在使用時，會取用那一個 class 呢?</h4><h5 id="1-1-TimeRandomService-及-GeneratorRandomService-分別實作-IRandomService"><a href="#1-1-TimeRandomService-及-GeneratorRandomService-分別實作-IRandomService" class="headerlink" title="1.1. TimeRandomService 及 GeneratorRandomService 分別實作 IRandomService"></a>1.1. TimeRandomService 及 GeneratorRandomService 分別實作 IRandomService</h5><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title">IRandomService</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="function"><span class="keyword">string</span> <span class="title">GetRandom</span>(<span class="params"></span>)</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">TimeRandomService</span> : <span class="title">IRandomService</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">readonly</span> DateTime _createTime;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">TimeRandomService</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">_createTime = DateTime.Now;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">string</span> <span class="title">GetRandom</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">$"TimeRandomService:<span class="subst">&#123;_createTime.Ticks&#125;</span>"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">GeneratorRandomService</span> : <span class="title">IRandomService</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">string</span> <span class="title">GetRandom</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">var</span> random = RandomNumberGenerator.Create();</span><br><span class="line"><span class="keyword">var</span> bytes = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="keyword">sizeof</span>(Int64)];</span><br><span class="line">random.GetBytes(bytes);</span><br><span class="line"><span class="keyword">return</span> <span class="string">$"GeneratorRandomService:<span class="subst">&#123;BitConverter.ToUInt64(bytes)&#125;</span>"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="1-2-在-Startup-cs-中的-ConfigureServices-Method-中，我們加入註冊-IRandomService-的部份"><a href="#1-2-在-Startup-cs-中的-ConfigureServices-Method-中，我們加入註冊-IRandomService-的部份" class="headerlink" title="1.2. 在 Startup.cs 中的 ConfigureServices Method 中，我們加入註冊 IRandomService 的部份"></a>1.2. 在 Startup.cs 中的 ConfigureServices Method 中，我們加入註冊 IRandomService 的部份</h5><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ConfigureServices</span>(<span class="params">IServiceCollection services</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">services.AddSingleton&lt;IRandomService, TimeRandomService&gt;();</span><br><span class="line">services.AddTransient&lt;IRandomService, GeneratorRandomService&gt;();</span><br><span class="line"><span class="comment">//...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="1-3-在-services-AddTransient-後加入中斷點，可以發現，針對同一個-interface-加入不同的實作-class-，並不錯引發錯誤，而且會依程式碼的順序加入到-services-之中，如下圖所示，"><a href="#1-3-在-services-AddTransient-後加入中斷點，可以發現，針對同一個-interface-加入不同的實作-class-，並不錯引發錯誤，而且會依程式碼的順序加入到-services-之中，如下圖所示，" class="headerlink" title="1.3. 在 services.AddTransient 後加入中斷點，可以發現，針對同一個 interface 加入不同的實作 class ，並不錯引發錯誤，而且會依程式碼的順序加入到 services 之中，如下圖所示，"></a>1.3. 在 services.AddTransient 後加入中斷點，可以發現，針對同一個 interface 加入不同的實作 class ，並不錯引發錯誤，而且會依程式碼的順序加入到 services 之中，如下圖所示，</h5><img src="/2020/02/03/2020001/001.png" title="services的內容"><h5 id="1-4-在-Razor-Page-中注入-IRandomService-，並觀察會使用那一個實作的-Class"><a href="#1-4-在-Razor-Page-中注入-IRandomService-，並觀察會使用那一個實作的-Class" class="headerlink" title="1.4. 在 Razor Page 中注入 IRandomService ，並觀察會使用那一個實作的 Class"></a>1.4. 在 Razor Page 中注入 IRandomService ，並觀察會使用那一個實作的 Class</h5><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">IndexModel</span> : <span class="title">PageModel</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">readonly</span> IRandomService _randomService;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">string</span> RandomServiceValue &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">IndexModel</span>(<span class="params">IRandomService randomService</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">_randomService = randomService;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">OnGet</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">RandomServiceValue = _randomService.GetRandom();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">@page</span><br><span class="line">@model IndexModel</span><br><span class="line">&lt;div <span class="keyword">class</span>=<span class="string">"text-center"</span>&gt;</span><br><span class="line">    &lt;p&gt;RandomService Value:@Model.RandomServiceValue&lt;/p&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><h5 id="1-5-從結果可以發現，它會取用最後註冊的那個實作-Class，也就是-GeneratorRandomService-，如下圖所示，"><a href="#1-5-從結果可以發現，它會取用最後註冊的那個實作-Class，也就是-GeneratorRandomService-，如下圖所示，" class="headerlink" title="1.5. 從結果可以發現，它會取用最後註冊的那個實作 Class，也就是 GeneratorRandomService ，如下圖所示，"></a>1.5. 從結果可以發現，它會取用最後註冊的那個實作 Class，也就是 GeneratorRandomService ，如下圖所示，</h5><img src="/2020/02/03/2020001/002.png" title="IRandomService取用的實作Class"><p>所以當我們在 Startup.cs 中的 ConfigureServices Method 中，如果最後加入的是 TimeRandomService ，就會取用 TimeRandomService 這個實作的 Class 哦。<br>這有什麼好處呢? 好處是它允許後者有機會去替換掉原本的實作 Class 。</p><h4 id="問題-2-承問題-1，那有沒有方式是沒有註冊時才允許註冊呢"><a href="#問題-2-承問題-1，那有沒有方式是沒有註冊時才允許註冊呢" class="headerlink" title="問題 2: 承問題 1，那有沒有方式是沒有註冊時才允許註冊呢?"></a>問題 2: 承問題 1，那有沒有方式是沒有註冊時才允許註冊呢?</h4><h5 id="2-1-可以使用-TryAddSingleton-TryAddScoped-及-TryAddTransient"><a href="#2-1-可以使用-TryAddSingleton-TryAddScoped-及-TryAddTransient" class="headerlink" title="2.1. 可以使用 TryAddSingleton, TryAddScoped 及 TryAddTransient"></a>2.1. 可以使用 TryAddSingleton, TryAddScoped 及 TryAddTransient</h5><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">services.AddSingleton&lt;IRandomService, TimeRandomService&gt;();</span><br><span class="line">services.TryAddTransient&lt;IRandomService, GeneratorRandomService&gt;();</span><br><span class="line"><span class="comment">//...</span></span><br></pre></td></tr></table></figure><h5 id="2-2-使用-TryAddSingleton-TryAddScoped-及-TryAddTransient-後，如果已有註冊過的資料，便不再會被加進去-services-之中，如下圖，"><a href="#2-2-使用-TryAddSingleton-TryAddScoped-及-TryAddTransient-後，如果已有註冊過的資料，便不再會被加進去-services-之中，如下圖，" class="headerlink" title="2.2. 使用 TryAddSingleton, TryAddScoped 及 TryAddTransient 後，如果已有註冊過的資料，便不再會被加進去 services 之中，如下圖，"></a>2.2. 使用 TryAddSingleton, TryAddScoped 及 TryAddTransient 後，如果已有註冊過的資料，便不再會被加進去 services 之中，如下圖，</h5><img src="/2020/02/03/2020001/003.png" title="IRandomService的註冊，只會有TimeRandomService"><h4 id="問題-3-TryAdd-是存在就不加，那有方式可以-Replace-已註冊的嗎"><a href="#問題-3-TryAdd-是存在就不加，那有方式可以-Replace-已註冊的嗎" class="headerlink" title="問題 3: TryAdd 是存在就不加，那有方式可以 Replace 已註冊的嗎?"></a>問題 3: TryAdd 是存在就不加，那有方式可以 Replace 已註冊的嗎?</h4><h5 id="3-2-可以使用-IServiceCollection-Replace"><a href="#3-2-可以使用-IServiceCollection-Replace" class="headerlink" title="3.2. 可以使用 IServiceCollection.Replace"></a>3.2. 可以使用 IServiceCollection.Replace</h5><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">services.AddSingleton&lt;IRandomService, TimeRandomService&gt;();</span><br><span class="line">services.Replace(ServiceDescriptor.Transient&lt;IRandomService, GeneratorRandomService&gt;());</span><br><span class="line"></span><br><span class="line"><span class="comment">//...</span></span><br></pre></td></tr></table></figure><img src="/2020/02/03/2020001/004.png" title="IRandomService的註冊，被改成GeneratorRandomService"><p><strong>註:</strong><br>如果 services 中沒有先註冊 IRandomService ，使用 services.Replace 不會噴錯，會直接註冊進去，像是 CreateOrReplace 。<br>如果 services 中註冊了 2 個以上 IRandomService ，使用 services.Replace 只會 Replace 第一個註冊的實作類別，並移到後面。<br>如果要整個移除的話，可以使用 IServiceCollection.RemoveAll ，例如 services.RemoveAll<irandomservice>();</irandomservice></p><h4 id="問題-4-那針對同一個-interface-註冊那麼多個實作的-Class-，有什麼時機點會這樣子用呢"><a href="#問題-4-那針對同一個-interface-註冊那麼多個實作的-Class-，有什麼時機點會這樣子用呢" class="headerlink" title="問題 4: 那針對同一個 interface 註冊那麼多個實作的 Class ，有什麼時機點會這樣子用呢?"></a>問題 4: 那針對同一個 interface 註冊那麼多個實作的 Class ，有什麼時機點會這樣子用呢?</h4><h5 id="4-1-像系統中常常有一些-規則檢查、-訊息多通道的通知-等等，都需要多個實作的-Class-。"><a href="#4-1-像系統中常常有一些-規則檢查、-訊息多通道的通知-等等，都需要多個實作的-Class-。" class="headerlink" title="4.1. 像系統中常常有一些 規則檢查、 訊息多通道的通知 等等，都需要多個實作的 Class 。"></a>4.1. 像系統中常常有一些 規則檢查、 訊息多通道的通知 等等，都需要多個實作的 Class 。</h5><h5 id="4-2-DateLengthRule-及-EndDateRule-分別實作-IRule"><a href="#4-2-DateLengthRule-及-EndDateRule-分別實作-IRule" class="headerlink" title="4.2. DateLengthRule 及 EndDateRule 分別實作 IRule"></a>4.2. DateLengthRule 及 EndDateRule 分別實作 IRule</h5><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title">IRule</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="function">Task&lt;<span class="keyword">bool</span>&gt; <span class="title">CompliesWithRuleAsync</span>(<span class="params">DateTime dateTime</span>)</span>;</span><br><span class="line"><span class="keyword">string</span> ErrorMessage &#123; <span class="keyword">get</span>; &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">DateLengthRule</span> : <span class="title">IRule</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">const</span> <span class="keyword">int</span> _maxHours = <span class="number">8</span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> Task&lt;<span class="keyword">bool</span>&gt; <span class="title">CompliesWithRuleAsync</span>(<span class="params">DateTime dateTime</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">var</span> dateLength =  dateTime - DateTime.Now;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> compliesWithRule = dateLength &lt;= TimeSpan.FromHours(_maxHours);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> Task.FromResult(compliesWithRule);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">string</span> ErrorMessage =&gt; <span class="string">$"時間超過<span class="subst">&#123;_maxHours&#125;</span>小時"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">EndDateRule</span> : <span class="title">IRule</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> Task&lt;<span class="keyword">bool</span>&gt; <span class="title">CompliesWithRuleAsync</span>(<span class="params">DateTime dateTime</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">var</span> compliesWithRule = dateTime &gt;= DateTime.Now;</span><br><span class="line"><span class="keyword">return</span> Task.FromResult(compliesWithRule);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">string</span> ErrorMessage =&gt; <span class="string">$"時間不可小於目前時間"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="4-3-在-Startup-cs-中的-ConfigureServices-Method-中，我們加入註冊-IRule-的部份"><a href="#4-3-在-Startup-cs-中的-ConfigureServices-Method-中，我們加入註冊-IRule-的部份" class="headerlink" title="4.3. 在 Startup.cs 中的 ConfigureServices Method 中，我們加入註冊 IRule 的部份"></a>4.3. 在 Startup.cs 中的 ConfigureServices Method 中，我們加入註冊 IRule 的部份</h5><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ConfigureServices</span>(<span class="params">IServiceCollection services</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">services.AddSingleton&lt;IRule, DateLengthRule&gt;();</span><br><span class="line">services.AddSingleton&lt;IRule, EndDateRule&gt;();</span><br><span class="line"><span class="comment">//...</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 也可以使用 services.TryAddEnumerable</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">services.TryAddEnumerable(new[] &#123;</span></span><br><span class="line"><span class="comment">ServiceDescriptor.Singleton&lt;IRule, DateLengthRule&gt;(),</span></span><br><span class="line"><span class="comment">ServiceDescriptor.Singleton&lt;IRule, EndDateRule&gt;()</span></span><br><span class="line"><span class="comment">&#125;);</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>註:</strong><br>也可以使用 IServiceCollection.TryAddEnumerable 一次加入多個</p><h5 id="4-4-在-Razor-Page-中注入-IEnumerable"><a href="#4-4-在-Razor-Page-中注入-IEnumerable" class="headerlink" title="4.4. 在 Razor Page 中注入 IEnumerable"></a>4.4. 在 Razor Page 中注入 IEnumerable<irule></irule></h5><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">IndexModel</span> : <span class="title">PageModel</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">readonly</span> IEnumerable&lt;IRule&gt; _rules;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">bool</span> PassedRules &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125; = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">public</span> List&lt;<span class="keyword">string</span>&gt; RuleErrors &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125; = <span class="keyword">new</span> List&lt;<span class="keyword">string</span>&gt;();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">IndexModel</span>(<span class="params">IEnumerable&lt;IRule&gt; rules</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">_rules = rules;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task <span class="title">OnGetAsync</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">var</span> endDate = DateTime.Now.AddHours(<span class="number">9</span>);</span><br><span class="line"><span class="keyword">foreach</span> (<span class="keyword">var</span> rule <span class="keyword">in</span> _rules)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">await</span> rule.CompliesWithRuleAsync(endDate))</span><br><span class="line">&#123;</span><br><span class="line">RuleErrors.Add(rule.ErrorMessage);</span><br><span class="line">PassedRules = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/2020/02/03/2020001/005.png" title="取得註冊IRule的實作類別"><h5 id="4-5-在-Razor-Page-View-來呈現檢查的資訊"><a href="#4-5-在-Razor-Page-View-來呈現檢查的資訊" class="headerlink" title="4.5. 在 Razor Page View 來呈現檢查的資訊"></a>4.5. 在 Razor Page View 來呈現檢查的資訊</h5><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">@page</span><br><span class="line">@model IndexModel</span><br><span class="line">&lt;div <span class="keyword">class</span>=<span class="string">"text-center"</span>&gt;</span><br><span class="line">@<span class="keyword">if</span> (Model.PassedRules)</span><br><span class="line">&#123;</span><br><span class="line">&lt;p&gt; Pass All Rules... ^_^ &lt;/p&gt;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">&lt;p&gt;Role Error&lt;/p&gt;</span><br><span class="line">&lt;hr /&gt;</span><br><span class="line">&lt;ul&gt;@<span class="keyword">foreach</span> (<span class="keyword">var</span> error <span class="keyword">in</span> Model.RuleErrors)</span><br><span class="line">&#123;</span><br><span class="line">&lt;li&gt;@error&lt;/li&gt;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/ul&gt;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><img src="/2020/02/03/2020001/006.png" title="DateLengthRule驗證沒有通過"><h4 id="問題-5-上面那個-MaxHours-是否可以從-config-中讀取呢"><a href="#問題-5-上面那個-MaxHours-是否可以從-config-中讀取呢" class="headerlink" title="問題 5: 上面那個 MaxHours 是否可以從 config 中讀取呢?"></a>問題 5: 上面那個 MaxHours 是否可以從 config 中讀取呢?</h4><h5 id="5-1-在-appsettings-json-中加入設定值-RuleConfig"><a href="#5-1-在-appsettings-json-中加入設定值-RuleConfig" class="headerlink" title="5.1. 在 appsettings.json 中加入設定值 (RuleConfig)"></a>5.1. 在 appsettings.json 中加入設定值 (RuleConfig)</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"Logging"</span>: &#123;</span><br><span class="line">    <span class="string">"LogLevel"</span>: &#123;</span><br><span class="line">      <span class="string">"Default"</span>: <span class="string">"Information"</span>,</span><br><span class="line">      <span class="string">"Microsoft"</span>: <span class="string">"Warning"</span>,</span><br><span class="line">      <span class="string">"Microsoft.Hosting.Lifetime"</span>: <span class="string">"Information"</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"AllowedHosts"</span>: <span class="string">"*"</span>,</span><br><span class="line">  <span class="string">"RuleConfig"</span>: &#123;</span><br><span class="line">    <span class="string">"MaxHours"</span>: <span class="number">8</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="5-2-建立-Config-物件"><a href="#5-2-建立-Config-物件" class="headerlink" title="5.2. 建立 Config 物件"></a>5.2. 建立 Config 物件</h5><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">RuleConfig</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">int</span> MaxHours &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="5-3-設定-RuleConfig"><a href="#5-3-設定-RuleConfig" class="headerlink" title="5.3. 設定 RuleConfig"></a>5.3. 設定 RuleConfig</h5><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">services.Configure&lt;RuleConfig&gt;(Configuration.GetSection(<span class="string">"RuleConfig"</span>));</span><br></pre></td></tr></table></figure><h4 id="5-4-在-DateLengthRule-Class-就可以使用-RuleConfig-來取得-Config-中的值，如下，"><a href="#5-4-在-DateLengthRule-Class-就可以使用-RuleConfig-來取得-Config-中的值，如下，" class="headerlink" title="5.4. 在 DateLengthRule Class 就可以使用 RuleConfig 來取得 Config 中的值，如下，"></a>5.4. 在 DateLengthRule Class 就可以使用 RuleConfig 來取得 Config 中的值，如下，</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">DateLengthRule</span> : <span class="title">IRule</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">readonly</span> RuleConfig _ruleConfig;</span><br><span class="line"><span class="comment">//private const int _maxHours = 8;</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">DateLengthRule</span>(<span class="params">IOptions&lt;RuleConfig&gt; options</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">_ruleConfig = options.Value;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> Task&lt;<span class="keyword">bool</span>&gt; <span class="title">CompliesWithRuleAsync</span>(<span class="params">DateTime dateTime</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">var</span> dateLength =  dateTime - DateTime.Now;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> compliesWithRule = dateLength &lt;= TimeSpan.FromHours(_ruleConfig.MaxHours);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> Task.FromResult(compliesWithRule);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">string</span> ErrorMessage =&gt; <span class="string">$"時間超過<span class="subst">&#123;_ruleConfig.MaxHours&#125;</span>小時"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="5-5-在-DateLengthRule-Class-取得-Config-中的值，如下，"><a href="#5-5-在-DateLengthRule-Class-取得-Config-中的值，如下，" class="headerlink" title="5.5. 在 DateLengthRule Class 取得 Config 中的值，如下，"></a>5.5. 在 DateLengthRule Class 取得 Config 中的值，如下，</h4><img src="/2020/02/03/2020001/007.png" title="_ruleConfig.MaxHours"><h4 id="問題-6-RuleConfig-改成註冊-interface-嗎"><a href="#問題-6-RuleConfig-改成註冊-interface-嗎" class="headerlink" title="問題 6: RuleConfig 改成註冊 interface 嗎?"></a>問題 6: RuleConfig 改成註冊 interface 嗎?</h4><h5 id="6-1-定義-IRuleConfig-RuleConfig-實作它"><a href="#6-1-定義-IRuleConfig-RuleConfig-實作它" class="headerlink" title="6.1. 定義 IRuleConfig, RuleConfig 實作它"></a>6.1. 定義 IRuleConfig, RuleConfig 實作它</h5><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title">IRuleConfig</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> MaxHours &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">RuleConfig</span> : <span class="title">IRuleConfig</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">int</span> MaxHours &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="6-2-在-Startup-cs-中的-ConfigureServices-Method-中，多加入註冊-IRuleConfig-的部份"><a href="#6-2-在-Startup-cs-中的-ConfigureServices-Method-中，多加入註冊-IRuleConfig-的部份" class="headerlink" title="6.2. 在 Startup.cs 中的 ConfigureServices Method 中，多加入註冊 IRuleConfig 的部份"></a>6.2. 在 Startup.cs 中的 ConfigureServices Method 中，多加入註冊 IRuleConfig 的部份</h5><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">services.Configure&lt;RuleConfig&gt;(Configuration.GetSection(<span class="string">"RuleConfig"</span>));</span><br><span class="line"></span><br><span class="line">services.TryAddSingleton&lt;IRuleConfig&gt;(sp =&gt;</span><br><span class="line">sp.GetRequiredService&lt;IOptions&lt;RuleConfig&gt;&gt;().Value</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h4 id="6-3-在-DateLengthRule-Class-就可以透過-IRuleConfig-來取得-Config-中的值，如下，"><a href="#6-3-在-DateLengthRule-Class-就可以透過-IRuleConfig-來取得-Config-中的值，如下，" class="headerlink" title="6.3. 在 DateLengthRule Class 就可以透過 IRuleConfig 來取得 Config 中的值，如下，"></a>6.3. 在 DateLengthRule Class 就可以透過 IRuleConfig 來取得 Config 中的值，如下，</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">DateLengthRule</span> : <span class="title">IRule</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">readonly</span> IRuleConfig _ruleConfig;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">DateLengthRule</span>(<span class="params">IRuleConfig options</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">_ruleConfig = options;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> Task&lt;<span class="keyword">bool</span>&gt; <span class="title">CompliesWithRuleAsync</span>(<span class="params">DateTime dateTime</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">var</span> dateLength =  dateTime - DateTime.Now;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> compliesWithRule = dateLength &lt;= TimeSpan.FromHours(_ruleConfig.MaxHours);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> Task.FromResult(compliesWithRule);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">string</span> ErrorMessage =&gt; <span class="string">$"時間超過<span class="subst">&#123;_ruleConfig.MaxHours&#125;</span>小時"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/2020/02/03/2020001/008.png" title="_ruleConfig.MaxHours"><h4 id="問題-7-通常系統中會有很多的-Config-，這時在-Startup-cs-的-ConfigureServices-中不就會有一堆的-service-Add-…"><a href="#問題-7-通常系統中會有很多的-Config-，這時在-Startup-cs-的-ConfigureServices-中不就會有一堆的-service-Add-…" class="headerlink" title="問題 7: 通常系統中會有很多的 Config ，這時在 Startup.cs 的 ConfigureServices 中不就會有一堆的 service.Add …?"></a>問題 7: 通常系統中會有很多的 Config ，這時在 Startup.cs 的 ConfigureServices 中不就會有一堆的 service.Add …?</h4><h5 id="7-1-可以依目標將這些抽到-Extension-Methods-之中，例如我們建立一個-AddAppConfiguration-Method，將原本在-Startup-cs-中的程式碼搬進來"><a href="#7-1-可以依目標將這些抽到-Extension-Methods-之中，例如我們建立一個-AddAppConfiguration-Method，將原本在-Startup-cs-中的程式碼搬進來" class="headerlink" title="7.1. 可以依目標將這些抽到 Extension Methods 之中，例如我們建立一個 AddAppConfiguration Method，將原本在 Startup.cs 中的程式碼搬進來"></a>7.1. 可以依目標將這些抽到 Extension Methods 之中，例如我們建立一個 AddAppConfiguration Method，將原本在 Startup.cs 中的程式碼搬進來</h5><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title">ConfigurationServiceCollectionExtensions</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> IServiceCollection <span class="title">AddAppConfiguration</span>(<span class="params"><span class="keyword">this</span> IServiceCollection services, IConfiguration config</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">services.Configure&lt;RuleConfig&gt;(config.GetSection(<span class="string">"RuleConfig"</span>));</span><br><span class="line">services.TryAddSingleton&lt;IRuleConfig&gt;(sp =&gt;</span><br><span class="line">sp.GetRequiredService&lt;IOptions&lt;RuleConfig&gt;&gt;().Value</span><br><span class="line">);</span><br><span class="line"><span class="keyword">return</span> services;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="7-2-Startup-cs-就改呼叫-AddAppConfiguration-，就會比較簡潔"><a href="#7-2-Startup-cs-就改呼叫-AddAppConfiguration-，就會比較簡潔" class="headerlink" title="7.2. Startup.cs 就改呼叫 AddAppConfiguration ，就會比較簡潔"></a>7.2. Startup.cs 就改呼叫 AddAppConfiguration ，就會比較簡潔</h5><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ConfigureServices</span>(<span class="params">IServiceCollection services</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//services.Configure&lt;RuleConfig&gt;(Configuration.GetSection("RuleConfig"));</span></span><br><span class="line"><span class="comment">//services.TryAddSingleton&lt;IRuleConfig&gt;(sp =&gt;</span></span><br><span class="line"><span class="comment">//    sp.GetRequiredService&lt;IOptions&lt;RuleConfig&gt;&gt;().Value</span></span><br><span class="line"><span class="comment">//);</span></span><br><span class="line">services.AddAppConfiguration(Configuration);</span><br><span class="line"></span><br><span class="line"><span class="comment">//...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="問題-8-像有一些-泛型類別-的註冊，需要依每個-類別註冊嗎"><a href="#問題-8-像有一些-泛型類別-的註冊，需要依每個-類別註冊嗎" class="headerlink" title="問題 8: 像有一些 泛型類別 的註冊，需要依每個 類別註冊嗎?"></a>問題 8: 像有一些 泛型類別 的註冊，需要依每個 類別註冊嗎?</h4><h5 id="8-1-例如課程中有定義-IDistributedCache-及-實作類別-DistributedCache-，"><a href="#8-1-例如課程中有定義-IDistributedCache-及-實作類別-DistributedCache-，" class="headerlink" title="8.1. 例如課程中有定義 IDistributedCache 及 實作類別 DistributedCache ，"></a>8.1. 例如課程中有定義 IDistributedCache<t> 及 實作類別 DistributedCache<t> ，</t></t></h5><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">public interface IDistributedCache&lt;T&gt;</span><br><span class="line">&#123;</span><br><span class="line"><span class="function">Task&lt;T&gt; <span class="title">GetAsync</span>(<span class="params"><span class="keyword">string</span> key</span>)</span>;</span><br><span class="line"><span class="function">Task <span class="title">RemoveAsync</span>(<span class="params"><span class="keyword">string</span> key</span>)</span>;</span><br><span class="line"><span class="function">Task <span class="title">SetAsync</span>(<span class="params"><span class="keyword">string</span> key, T item, <span class="keyword">int</span> minutesToCache</span>)</span>;</span><br><span class="line">Task&lt;(<span class="keyword">bool</span> Found, T Value)&gt; TryGetValueAsync(<span class="keyword">string</span> key);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public class DistributedCache&lt;T&gt; : IDistributedCache&lt;T&gt;</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">readonly</span> IDistributedCache _distributedCache;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">readonly</span> <span class="keyword">string</span> _cacheKeyPrefix;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">DistributedCache</span>(<span class="params">IDistributedCache distributedCache</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">_distributedCache = distributedCache;</span><br><span class="line">_cacheKeyPrefix = <span class="string">$"<span class="subst">&#123;<span class="keyword">typeof</span>(T).Namespace&#125;</span>_<span class="subst">&#123;<span class="keyword">typeof</span>(T).Name&#125;</span>_"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">async</span> Task&lt;(<span class="keyword">bool</span> Found, T Value)&gt; TryGetValueAsync(<span class="keyword">string</span> key)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">var</span> <span class="keyword">value</span> = <span class="keyword">await</span> GetAsync(key);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> (<span class="keyword">value</span> != <span class="literal">null</span>, <span class="keyword">value</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task&lt;T&gt; <span class="title">GetAsync</span>(<span class="params"><span class="keyword">string</span> key</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">var</span> cachedResult = <span class="keyword">await</span> _distributedCache.GetStringAsync(CacheKey(key));</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> cachedResult == <span class="literal">null</span> ? <span class="keyword">default</span> : DeserialiseFromString(cachedResult);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task <span class="title">SetAsync</span>(<span class="params"><span class="keyword">string</span> key, T item, <span class="keyword">int</span> minutesToCache</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">var</span> cacheEntryOptions = <span class="keyword">new</span> DistributedCacheEntryOptions</span><br><span class="line">&#123; AbsoluteExpirationRelativeToNow = TimeSpan.FromMinutes(minutesToCache) &#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> serialisedItemToCache = SerialiseForCaching(item);</span><br><span class="line"></span><br><span class="line"><span class="keyword">await</span> _distributedCache.SetStringAsync(CacheKey(key), serialisedItemToCache, cacheEntryOptions);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> Task <span class="title">RemoveAsync</span>(<span class="params"><span class="keyword">string</span> key</span>) </span>=&gt; _distributedCache.RemoveAsync(CacheKey(key));</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">string</span> <span class="title">CacheKey</span>(<span class="params"><span class="keyword">string</span> key</span>) </span>=&gt; <span class="string">$"<span class="subst">&#123;_cacheKeyPrefix&#125;</span><span class="subst">&#123;key&#125;</span>"</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> T <span class="title">DeserialiseFromString</span>(<span class="params"><span class="keyword">string</span> cachedResult</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> JsonConvert.DeserializeObject&lt;T&gt;(cachedResult, <span class="keyword">new</span> JsonSerializerSettings</span><br><span class="line">&#123;</span><br><span class="line">MaxDepth = <span class="number">10</span></span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> (Exception ex)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">default</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">string</span> <span class="title">SerialiseForCaching</span>(<span class="params">T item</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (item == <span class="literal">null</span>) <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> JsonConvert.SerializeObject(item);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> (Exception ex)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">throw</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="8-2-在-Startup-cs-的-ConfigureServices-中，需要針對使用的去註冊"><a href="#8-2-在-Startup-cs-的-ConfigureServices-中，需要針對使用的去註冊" class="headerlink" title="8.2. 在 Startup.cs 的 ConfigureServices 中，需要針對使用的去註冊"></a>8.2. 在 Startup.cs 的 ConfigureServices 中，需要針對使用的去註冊</h5><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">services.</span><br><span class="line">AddSingleton&lt;IDistributedCache&lt;DateLengthRule&gt;, DistributedCache&lt;DateLengthRule&gt;&gt;();</span><br><span class="line">services.</span><br><span class="line">AddSingleton&lt;IDistributedCache&lt;EndDateRule&gt;, DistributedCache&lt;EndDateRule&gt;&gt;();</span><br></pre></td></tr></table></figure><p>不過這樣子，每要用到一個，就要註冊一個，很容易會忘記，不好維護。</p><h5 id="8-3-針對這種-泛型類別-的註冊，也可以使用-泛型-的方式-typeof-IDistributedCache-lt-gt-來註冊"><a href="#8-3-針對這種-泛型類別-的註冊，也可以使用-泛型-的方式-typeof-IDistributedCache-lt-gt-來註冊" class="headerlink" title="8.3. 針對這種 泛型類別 的註冊，也可以使用 泛型 的方式 typeof(IDistributedCache&lt;&gt;) 來註冊"></a>8.3. 針對這種 泛型類別 的註冊，也可以使用 泛型 的方式 typeof(IDistributedCache&lt;&gt;) 來註冊</h5><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">services.AddSingleton(<span class="keyword">typeof</span>(IDistributedCache&lt;&gt;), <span class="keyword">typeof</span>(DistributedCache&lt;&gt;));</span><br></pre></td></tr></table></figure><h4 id="問題-9-如果在-Page-or-Controller-中，只有某個-Method-會使用到某-Service-，可以只在那個-Method-注入服務嗎"><a href="#問題-9-如果在-Page-or-Controller-中，只有某個-Method-會使用到某-Service-，可以只在那個-Method-注入服務嗎" class="headerlink" title="問題 9: 如果在 Page or Controller 中，只有某個 Method 會使用到某 Service ，可以只在那個 Method 注入服務嗎?"></a>問題 9: 如果在 Page or Controller 中，只有某個 Method 會使用到某 Service ，可以只在那個 Method 注入服務嗎?</h4><h5 id="9-1-可以在-Method-的參數加上-FromServices-，"><a href="#9-1-可以在-Method-的參數加上-FromServices-，" class="headerlink" title="9.1. 可以在 Method 的參數加上 [FromServices] ，"></a>9.1. 可以在 Method 的參數加上 [FromServices] ，</h5><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task <span class="title">OnGetAsync</span>(<span class="params">[FromServices] IEnumerable&lt;IRule&gt; rules</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">var</span> endDate = DateTime.Now.AddHours(<span class="number">9</span>);</span><br><span class="line"><span class="keyword">foreach</span> (<span class="keyword">var</span> rule <span class="keyword">in</span> rules)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">await</span> rule.CompliesWithRuleAsync(endDate))</span><br><span class="line">&#123;</span><br><span class="line">RuleErrors.Add(rule.ErrorMessage);</span><br><span class="line">PassedRules = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="問題-10-Middleware-可以使用嗎"><a href="#問題-10-Middleware-可以使用嗎" class="headerlink" title="問題 10: Middleware 可以使用嗎?"></a>問題 10: Middleware 可以使用嗎?</h4><h5 id="10-1-建立一個-middleware-來測試一下"><a href="#10-1-建立一個-middleware-來測試一下" class="headerlink" title="10.1. 建立一個 middleware 來測試一下"></a>10.1. 建立一個 middleware 來測試一下</h5><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">LastRequestMiddleware</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">readonly</span> RequestDelegate _next;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">readonly</span> ILogger&lt;LastRequestMiddleware&gt; _logger;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">readonly</span> IRandomService _randomService;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">LastRequestMiddleware</span>(<span class="params">RequestDelegate next</span></span></span><br><span class="line"><span class="function"><span class="params">, ILogger&lt;LastRequestMiddleware&gt; logger</span></span></span><br><span class="line"><span class="function"><span class="params">, IRandomService randomService</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">_next = next;</span><br><span class="line">_logger = logger;</span><br><span class="line">_randomService = randomService;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task <span class="title">InvokeAsync</span>(<span class="params">HttpContext context</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">_logger.LogInformation(<span class="string">$"Request at <span class="subst">&#123;DateTime.UtcNow&#125;</span>, <span class="subst">&#123;_randomService.GetRandom()&#125;</span>"</span>);</span><br><span class="line"><span class="keyword">await</span> _next(context);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="10-2-在-Startup-cs-的-ConfigureServices-中，註冊-IRandomService-，範圍為-Scoped"><a href="#10-2-在-Startup-cs-的-ConfigureServices-中，註冊-IRandomService-，範圍為-Scoped" class="headerlink" title="10.2. 在 Startup.cs 的 ConfigureServices 中，註冊 IRandomService ，範圍為 Scoped"></a>10.2. 在 Startup.cs 的 ConfigureServices 中，註冊 IRandomService ，範圍為 Scoped</h5><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line">services.AddScoped&lt;IRandomService, TimeRandomService&gt;();</span><br><span class="line"><span class="comment">//...</span></span><br></pre></td></tr></table></figure><h5 id="10-3-在-Startup-cs-的-Configure-中，註冊使用-LastRequestMiddleware"><a href="#10-3-在-Startup-cs-的-Configure-中，註冊使用-LastRequestMiddleware" class="headerlink" title="10.3. 在 Startup.cs 的 Configure 中，註冊使用 LastRequestMiddleware"></a>10.3. 在 Startup.cs 的 Configure 中，註冊使用 LastRequestMiddleware</h5><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line">app.UseMiddleware&lt;LastRequestMiddleware&gt;();</span><br><span class="line"><span class="comment">//...</span></span><br></pre></td></tr></table></figure><h5 id="10-4-執行起來後，就會發生錯誤"><a href="#10-4-執行起來後，就會發生錯誤" class="headerlink" title="10.4. 執行起來後，就會發生錯誤"></a>10.4. 執行起來後，就會發生錯誤</h5><blockquote><p>Cannot resolve scoped service ‘xxx.IRandomService’ from root provider.<br>這是因為 Middleware 是 Singleton 的範例，而引用到了 scoped 範圍的服務</p></blockquote><h5 id="10-5-解法-1-將-IRandomService-改成-Singleton-範圍提供服務"><a href="#10-5-解法-1-將-IRandomService-改成-Singleton-範圍提供服務" class="headerlink" title="10.5. 解法 1:將 IRandomService 改成 Singleton 範圍提供服務"></a>10.5. 解法 1:將 IRandomService 改成 Singleton 範圍提供服務</h5><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line">services.AddSingleton&lt;IRandomService, TimeRandomService&gt;();</span><br><span class="line"><span class="comment">//...</span></span><br></pre></td></tr></table></figure><h5 id="10-6-解法-2-改從-InvokeAsync-注入-IRandomService-服務"><a href="#10-6-解法-2-改從-InvokeAsync-注入-IRandomService-服務" class="headerlink" title="10.6. 解法 2:改從 InvokeAsync 注入 IRandomService 服務"></a>10.6. 解法 2:改從 InvokeAsync 注入 IRandomService 服務</h5><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">LastRequestMiddleware</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">readonly</span> RequestDelegate _next;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">readonly</span> ILogger&lt;LastRequestMiddleware&gt; _logger;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">readonly</span> IRandomService _randomService;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">LastRequestMiddleware</span>(<span class="params">RequestDelegate next</span></span></span><br><span class="line"><span class="function"><span class="params">, ILogger&lt;LastRequestMiddleware&gt; logger</span></span></span><br><span class="line"><span class="function"><span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">_next = next;</span><br><span class="line">_logger = logger;</span><br><span class="line">   <span class="comment">// _randomService = randomService;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task <span class="title">InvokeAsync</span>(<span class="params">HttpContext context, IRandomService randomService</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">_logger.LogInformation(<span class="string">$"Request at <span class="subst">&#123;DateTime.UtcNow&#125;</span>, <span class="subst">&#123;randomService.GetRandom()&#125;</span>"</span>);</span><br><span class="line"><span class="keyword">await</span> _next(context);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//...</span></span><br></pre></td></tr></table></figure><h4 id="問題-11-View-要如何注入呢"><a href="#問題-11-View-要如何注入呢" class="headerlink" title="問題 11: View 要如何注入呢?"></a>問題 11: View 要如何注入呢?</h4><h5 id="11-1-使用-inject"><a href="#11-1-使用-inject" class="headerlink" title="11.1. 使用 @inject"></a>11.1. 使用 @inject</h5><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">@page</span><br><span class="line">@<span class="keyword">using</span> netcoreDI.Services</span><br><span class="line">@inject IRandomService randomService</span><br><span class="line">@model IndexModel</span><br><span class="line">&lt;div <span class="keyword">class</span>=<span class="string">"text-center"</span>&gt;</span><br><span class="line">RandomService Value:@randomService.GetRandom()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><h4 id="問題-12-自行建立-Scope-取得-Service"><a href="#問題-12-自行建立-Scope-取得-Service" class="headerlink" title="問題 12: 自行建立 Scope 取得 Service"></a>問題 12: 自行建立 Scope 取得 Service</h4><h5 id="12-1-這種通常是在啟動系統時，做一些初始化的工作，使用-IHost-Services-CreateScope-，例如，"><a href="#12-1-這種通常是在啟動系統時，做一些初始化的工作，使用-IHost-Services-CreateScope-，例如，" class="headerlink" title="12.1. 這種通常是在啟動系統時，做一些初始化的工作，使用 IHost.Services.CreateScope() ，例如，"></a>12.1. 這種通常是在啟動系統時，做一些初始化的工作，使用 IHost.Services.CreateScope() ，例如，</h5><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">var</span> host = CreateHostBuilder(args).Build();</span><br><span class="line"><span class="comment">//application init ...</span></span><br><span class="line"><span class="keyword">using</span>(<span class="keyword">var</span> scope = host.Services.CreateScope())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">var</span> serviceProvider = scope.ServiceProvider;</span><br><span class="line"><span class="keyword">var</span> hostingEnvironment = serviceProvider</span><br><span class="line">.GetRequiredService&lt;IHostEnvironment&gt;();</span><br><span class="line"><span class="keyword">if</span> (hostingEnvironment.IsDevelopment())</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// database init ...</span></span><br><span class="line"><span class="comment">//var ctx = serviceProvider.GetRequiredService&lt;MyDbContext&gt;();</span></span><br><span class="line"><span class="comment">//await ctx.Database.MigrateAsync();</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">host.Run();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> IHostBuilder <span class="title">CreateHostBuilder</span>(<span class="params"><span class="keyword">string</span>[] args</span>) </span>=&gt;</span><br><span class="line">Host.CreateDefaultBuilder(args)</span><br><span class="line">.ConfigureWebHostDefaults(webBuilder =&gt;</span><br><span class="line">&#123;</span><br><span class="line">webBuilder.UseStartup&lt;Startup&gt;();</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="問題-13-前面-IRule-，是否能自動註冊實作它的-Class-呢"><a href="#問題-13-前面-IRule-，是否能自動註冊實作它的-Class-呢" class="headerlink" title="問題 13: 前面 IRule ，是否能自動註冊實作它的 Class 呢?"></a>問題 13: 前面 IRule ，是否能自動註冊實作它的 Class 呢?</h4><h5 id="13-1-可以透過-Scrutor-來達到，請先加入-Scrutor-Nuget-套件"><a href="#13-1-可以透過-Scrutor-來達到，請先加入-Scrutor-Nuget-套件" class="headerlink" title="13.1. 可以透過 Scrutor 來達到，請先加入 Scrutor Nuget 套件"></a>13.1. 可以透過 <a href="https://github.com/khellang/Scrutor" target="_blank" rel="noopener">Scrutor</a> 來達到，請先加入 Scrutor Nuget 套件</h5><h5 id="13-2-使用-services-Scan-取代原本的-services-TryAddEnumerable"><a href="#13-2-使用-services-Scan-取代原本的-services-TryAddEnumerable" class="headerlink" title="13.2. 使用 services.Scan 取代原本的 services.TryAddEnumerable"></a>13.2. 使用 services.Scan 取代原本的 services.TryAddEnumerable</h5><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//services.TryAddEnumerable(new[] &#123;</span></span><br><span class="line"><span class="comment">//    ServiceDescriptor.Scoped&lt;IRule, DateLengthRule&gt;(),</span></span><br><span class="line"><span class="comment">//    ServiceDescriptor.Singleton&lt;IRule, EndDateRule&gt;()</span></span><br><span class="line"><span class="comment">//&#125;);</span></span><br><span class="line"></span><br><span class="line">services.Scan(scan =&gt;</span><br><span class="line">scan.FromAssemblyOf&lt;Startup&gt;()</span><br><span class="line">.AddClasses(c =&gt; c.AssignableTo&lt;IRule&gt;())</span><br><span class="line">.AsImplementedInterfaces()</span><br><span class="line">.WithScopedLifetime()</span><br><span class="line">);</span><br></pre></td></tr></table></figure><blockquote><p>FromAssemblyOf<startup> : 取 Startup 所在的那個 Assembly<br>AddClasses : 加入那些有實作 IRule 的 Class<br>AsImplementedInterfaces : 註冊那些 Class 實作的 Interface<br>WithScopedLifetime : 註冊為 Scoped 生命範圍</startup></p></blockquote><h4 id="問題-14-使用-Scan-也可以-註冊成不同的生命範圍嗎"><a href="#問題-14-使用-Scan-也可以-註冊成不同的生命範圍嗎" class="headerlink" title="問題 14: 使用 Scan 也可以 註冊成不同的生命範圍嗎?"></a>問題 14: 使用 Scan 也可以 註冊成不同的生命範圍嗎?</h4><h5 id="14-1-這可以透過-interface-來做一些手腳"><a href="#14-1-這可以透過-interface-來做一些手腳" class="headerlink" title="14.1. 這可以透過 interface 來做一些手腳"></a>14.1. 這可以透過 interface 來做一些手腳</h5><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title">IRule</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="function">Task&lt;<span class="keyword">bool</span>&gt; <span class="title">CompliesWithRuleAsync</span>(<span class="params">DateTime dateTime</span>)</span>;</span><br><span class="line"><span class="keyword">string</span> ErrorMessage &#123; <span class="keyword">get</span>; &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title">IScopedRule</span> : <span class="title">IRule</span>&#123;&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title">ISingletonRule</span> : <span class="title">IRule</span>&#123;&#125;</span><br></pre></td></tr></table></figure><h5 id="14-2-DateLengthRule-從實作-IRule-改成實作-IScopedRule，-EndDateRule-則改實作-ISingletonRule"><a href="#14-2-DateLengthRule-從實作-IRule-改成實作-IScopedRule，-EndDateRule-則改實作-ISingletonRule" class="headerlink" title="14.2. DateLengthRule 從實作 IRule 改成實作 IScopedRule， EndDateRule 則改實作 ISingletonRule"></a>14.2. DateLengthRule 從實作 IRule 改成實作 IScopedRule， EndDateRule 則改實作 ISingletonRule</h5><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">DateLengthRule</span> : <span class="title">IScopedRule</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">readonly</span> IRuleConfig _ruleConfig;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">readonly</span> ILogger _logger;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">DateLengthRule</span>(<span class="params">IRuleConfig options </span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">_ruleConfig = options;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> Task&lt;<span class="keyword">bool</span>&gt; <span class="title">CompliesWithRuleAsync</span>(<span class="params">DateTime dateTime</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">var</span> dateLength =  dateTime - DateTime.Now;</span><br><span class="line"><span class="keyword">var</span> compliesWithRule = dateLength &lt;= TimeSpan.FromHours(_ruleConfig.MaxHours);</span><br><span class="line"><span class="keyword">return</span> Task.FromResult(compliesWithRule);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">string</span> ErrorMessage =&gt; <span class="string">$"時間超過<span class="subst">&#123;_ruleConfig.MaxHours&#125;</span>小時"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">EndDateRule</span> : <span class="title">ISingletonRule</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> Task&lt;<span class="keyword">bool</span>&gt; <span class="title">CompliesWithRuleAsync</span>(<span class="params">DateTime dateTime</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">var</span> compliesWithRule = dateTime &gt;= DateTime.Now;</span><br><span class="line"><span class="keyword">return</span> Task.FromResult(compliesWithRule);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">string</span> ErrorMessage =&gt; <span class="string">$"時間不可小於目前時間"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="14-3-在-Startup-cs-的-ConfigureServices-中，就可以分別掃出-ISingletonRule-及-IScopedRule-設定它的生命範圍"><a href="#14-3-在-Startup-cs-的-ConfigureServices-中，就可以分別掃出-ISingletonRule-及-IScopedRule-設定它的生命範圍" class="headerlink" title="14.3. 在 Startup.cs 的 ConfigureServices 中，就可以分別掃出 ISingletonRule 及 IScopedRule 設定它的生命範圍"></a>14.3. 在 Startup.cs 的 ConfigureServices 中，就可以分別掃出 ISingletonRule 及 IScopedRule 設定它的生命範圍</h5><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">services.Scan(scan =&gt;</span><br><span class="line">scan.FromAssemblyOf&lt;Startup&gt;()</span><br><span class="line">.AddClasses(c =&gt; c.AssignableTo&lt;IScopedRule&gt;())</span><br><span class="line">.As&lt;IRule&gt;()</span><br><span class="line">.WithScopedLifetime()</span><br><span class="line">.AddClasses(c =&gt; c.AssignableTo&lt;ISingletonRule&gt;())</span><br><span class="line">.As&lt;IRule&gt;()</span><br><span class="line">.WithSingletonLifetime()</span><br><span class="line">);</span><br></pre></td></tr></table></figure><img src="/2020/02/03/2020001/009.png" title="依IScopedRule,ISingletonRule註冊不同生命範圍"><blockquote><p>如果要掃多個組件，可以使用 FromAssemblies</p></blockquote><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">services.Scan(scan =&gt;</span><br><span class="line">scan.FromAssemblies(</span><br><span class="line"><span class="keyword">typeof</span>(IRule).Assembly,</span><br><span class="line"><span class="keyword">typeof</span>(Startup).Assembly)</span><br><span class="line">.AddClasses(c =&gt; c.AssignableTo&lt;IScopedRule&gt;())</span><br><span class="line">.As&lt;IRule&gt;()</span><br><span class="line">.WithScopedLifetime()</span><br><span class="line">.AddClasses(c =&gt; c.AssignableTo&lt;ISingletonRule&gt;())</span><br><span class="line">.As&lt;IRule&gt;()</span><br><span class="line">.WithSingletonLifetime()</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>以上以問題的方式來呈現，希望可以讓大家更了解 ASP.NET Core DI 的使用方式。</p><blockquote><p>註:<br>本文依 <a href="https://app.pluralsight.com/library/courses/aspdotnet-core-dependency-injection/table-of-contents" target="_blank" rel="noopener">Dependency Injection in ASP.NET Core - pluralsight</a> 課程整理，非常建議大家觀看該課程。</p></blockquote><h3 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h3><p><a href="https://app.pluralsight.com/library/courses/aspdotnet-core-dependency-injection/table-of-contents" target="_blank" rel="noopener">Dependency Injection in ASP.NET Core - pluralsight</a><br><a href="https://docs.microsoft.com/en-us/aspnet/core/fundamentals/dependency-injection?view=aspnetcore-3.1" target="_blank" rel="noopener">Dependency injection in ASP.NET Core - docs</a><br><a href="https://www.slideshare.net/AlexThissen/it-depends-loving-net-core-dependency-injection-or-not" target="_blank" rel="noopener">It depends: Loving .NET Core dependency injection or not</a><br><a href="https://medium.com/volosoft/asp-net-core-dependency-injection-58bc78c5d369" target="_blank" rel="noopener">ASP.NET Core Dependency Injection</a><br><a href="https://www.cnblogs.com/catcher1994/p/10316928.html" target="_blank" rel="noopener">用 Scrutor 来简化 ASP.NET Core 的 DI 注册</a><br><a href="https://medium.com/@marekzyla95/scrutor-a-dependency-injection-types-registration-library-for-asp-net-core-c0a73af47905" target="_blank" rel="noopener">Register types automatically using Scrutor library for ASP.NET Core</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;Dependency Injection 在 ASP.NET Core 中佔著很重要的地位，除了使用 AddSingleton, AddSc
      
    
    </summary>
    
    
      <category term="ASP.NET Core" scheme="https://rainmakerho.github.io/tags/ASP-NET-Core/"/>
    
      <category term="Dependency Injection" scheme="https://rainmakerho.github.io/tags/Dependency-Injection/"/>
    
      <category term="DI" scheme="https://rainmakerho.github.io/tags/DI/"/>
    
  </entry>
  
  <entry>
    <title>EF Core, Startup project &#39;xxx.Data.csproj&#39; targets framework &#39;.NETStandard&#39;. There is no runtime associated with this framework</title>
    <link href="https://rainmakerho.github.io/2019/12/30/2019038/"/>
    <id>https://rainmakerho.github.io/2019/12/30/2019038/</id>
    <published>2019-12-30T02:49:22.000Z</published>
    <updated>2019-12-30T04:01:18.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>在 .net core 專案中，當我們將 Data 專案拆到另一個 .NETStandard 專案時，在他的目錄下，執行 <strong>dotnet ef dbcontext</strong> 相關 Command 時，會噴以下的錯誤</p><blockquote><p>Startup project ‘OdeToFood.Data.csproj’ targets framework ‘.NETStandard’. There is no runtime associated with this framework, and projects targeting it cannot be executed directly. To use the Entity Framework Core .NET Command-line Tools with this project, add an executable project targeting .NET Core or .NET Framework that references this project, and set it as the startup project using –startup-project; or, update this project to cross-target .NET Core or .NET Framework. For more information on using the EF Core Tools with .NET Standard projects, see <a href="https://go.microsoft.com/fwlink/?linkid=2034781" target="_blank" rel="noopener">https://go.microsoft.com/fwlink/?linkid=2034781</a></p></blockquote><h3 id="研究"><a href="#研究" class="headerlink" title="研究"></a>研究</h3><p>這是因為它並不知道目前這個專案要使用的是 .NET Core 或是 .NET Framework，所以這時，只要多設定 –startup-project 去指定到參考這個專案的主專案就可以了哦!<br>註: 主專案要加入 Microsoft.EntityFrameworkCore.Design 這個 Nuget 套件哦!<br>例如原本我是下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">dotnet ef dbcontext list</span><br></pre></td></tr></table></figure><p>要多加入 –startup-project 的設定</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">dotnet ef dbcontext list --startup-project ../OdeToFood</span><br></pre></td></tr></table></figure><p>或是簡寫 -s</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">dotnet ef dbcontext list -s ../OdeToFood/OdeToFood.csproj</span><br></pre></td></tr></table></figure><h3 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h3><p><a href="https://stackoverflow.com/questions/48673987/trying-to-set-up-entity-framework-core-in-net-standard-project" target="_blank" rel="noopener">Trying to set-up Entity Framework core in .Net Standard project</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;在 .net core 專案中，當我們將 Data 專案拆到另一個 .NETStandard 專案時，在他的目錄下，執行 &lt;strong&gt;d
      
    
    </summary>
    
    
      <category term="ef core" scheme="https://rainmakerho.github.io/tags/ef-core/"/>
    
      <category term=".NETStandard" scheme="https://rainmakerho.github.io/tags/NETStandard/"/>
    
  </entry>
  
  <entry>
    <title>IIS 網站讓 IE 使用者登入時，都出現 Windows 登入驗證視窗，不用調整 Security Zone 的方式</title>
    <link href="https://rainmakerho.github.io/2019/12/15/2019037/"/>
    <id>https://rainmakerho.github.io/2019/12/15/2019037/</id>
    <published>2019-12-15T01:25:29.000Z</published>
    <updated>2019-12-16T08:24:44.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>最近客戶從 Windows 2003 升級到 Windows 2016，聽說使用者是透過 AD 驗證登入的。<br>於是在 IIS 那裡設定 Windows 整合驗證(Kerberos, NTLM)，都可以讓使用者用 AD 去登入。<br>但是客戶說，他們想要每次登入時，都出現 Windows 登入驗證視窗來讓使用者輸入。<br>預設近端網站是會直接登入的，詳細可以參考<a href="https://dotblogs.com.tw/rainmaker/2015/03/06/150656" target="_blank" rel="noopener">[IE]設定 Windows 驗證，Client 還是會跳出登入視窗呢?</a></p><h3 id="研究"><a href="#研究" class="headerlink" title="研究"></a>研究</h3><p>那是否請客戶將該網站加入「信任或是網際網路」應該就會跳出登入驗證視窗，但目前有些使用者卻是「近端」，不太可能請使用者自已來設定。<br>而客戶也說，舊的系統也沒特別設定，但卻會跳出 Windows 登入驗證視窗。<br>於是再回頭查看那台舊作業系統在 IIS 那是如何設定的，結果它是啟用「摘要式驗證」。</p><p>於是在 Windows 2016 中也加入「摘要式驗證」，並在應用程式那啟用 摘要式驗證。<br><img src="/2019/12/15/2019037/001.png" title="IIS加入「摘要式驗證」"></p><p>結果，Client 不管在近端、信任及網際網路，都會出現 Windows 登入驗證視窗，讓使用者來輸入。<br>這樣就達到使用者的需求。</p><h4 id="補充說明怪異的狀況"><a href="#補充說明怪異的狀況" class="headerlink" title="補充說明怪異的狀況"></a>補充說明怪異的狀況</h4><p>另外，原本設定 Windows 整合驗證時，在<strong>某些電腦</strong>使用停止約 3 分鐘時，透過 UpdatePanel Postback 時，會發生「Sys.WebForms.PageRequestManagerpasrserErrorException: 無法剖析從伺服器收到的訊息」的錯誤。<br>查看 F12 的網路後發現，正常從 UpdatePanel Postback 發出的 Body 會有內容，回傳值是 text/plain 。<br>而發生錯誤它的 Request Body 是空的，Content-Length 是 0 。<br>而且 Header 多加了 Authorization: Negotiate TlRMTVNTUAABAAAAl4II4xxxxgsssdfsadsfGAbEdAAAADw==<br>的值，所以發回來的內容是整個網頁，所以在 Parse 時，就會噴錯。<br>但是 Negotiate 是 Windows 的 Kerberos，但這個應用程式，只啟用「匿名驗證」跟本就沒有啟用「Windows 驗證」(原本 Windows 驗證是另一個應用程式)。<br>但好玩的事，將 Windows 驗證 中的 Providers ，將 NTLM 上調到第一位(原本 Negotiate 是第一位)。<br>在有問題的電腦中測試，它的 Header 也一併變成了 Authorization: NTLM 。</p><p>後來將那個 Windows 驗證，改成使用 摘要式驗證 ，就沒有再出現那個 UpdatePanel Postback 的怪問題。<br>有遇到問題的朋友，可以參考一下哦!</p><h3 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h3><p><a href="https://dotblogs.com.tw/rainmaker/2015/03/06/150656" target="_blank" rel="noopener">[IE]設定 Windows 驗證，Client 還是會跳出登入視窗呢?</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;最近客戶從 Windows 2003 升級到 Windows 2016，聽說使用者是透過 AD 驗證登入的。&lt;br&gt;於是在 IIS 那裡設定
      
    
    </summary>
    
    
      <category term="windows 10" scheme="https://rainmakerho.github.io/tags/windows-10/"/>
    
      <category term="ie" scheme="https://rainmakerho.github.io/tags/ie/"/>
    
      <category term="AD Login" scheme="https://rainmakerho.github.io/tags/AD-Login/"/>
    
      <category term="摘要式驗證" scheme="https://rainmakerho.github.io/tags/%E6%91%98%E8%A6%81%E5%BC%8F%E9%A9%97%E8%AD%89/"/>
    
      <category term="Digest Authentication" scheme="https://rainmakerho.github.io/tags/Digest-Authentication/"/>
    
  </entry>
  
  <entry>
    <title>無法打開IIS上檔名中包含特殊字符(plus)的文件(file name contains plus)</title>
    <link href="https://rainmakerho.github.io/2019/12/11/2019036/"/>
    <id>https://rainmakerho.github.io/2019/12/11/2019036/</id>
    <published>2019-12-11T05:07:08.000Z</published>
    <updated>2019-12-11T05:17:12.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>最近公司有一個作業系統升級案，從 Windows 2003 升級到 Windows 2016。<br>其中有個部份是從 IIS 那取得 File 。<br>在測試的過程中，如果檔名中有 + 號，就會回 404 的錯誤。</p><h3 id="研究"><a href="#研究" class="headerlink" title="研究"></a>研究</h3><p>後來找到 <a href="https://helpx.adobe.com/experience-manager/kb/CannotOpenAFileHavingSpecialCharactersInTheFilenameOnIIS.html" target="_blank" rel="noopener">Cannot open a file having special characters in the filename on IIS</a>，原來勾選「允許雙重逸出」這個選項，就可以下載含有 + 號的檔案。</p><p>To resolve this issue, follow below instructions:</p><ol><li>in the IIS webserver section, double click the ‘Request Filtering’ icon</li><li>in the ‘File Name Extension’ right click-&gt;Edit Feature Settings…’ the file ‘web.config’</li><li>check the option ‘Allow double escaping’ (this option is unchecked by defualt)</li><li>repeat all above 3 steps for the ‘defualt website’ (or whatever you have given the name to your site)</li><li>re-start the IIS</li><li>you should now be able to open up the file name having ‘+’ in its name.</li></ol><img src="/2019/12/11/2019036/001.jpg" title="IIS設定"><h3 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h3><p><a href="https://helpx.adobe.com/experience-manager/kb/CannotOpenAFileHavingSpecialCharactersInTheFilenameOnIIS.html" target="_blank" rel="noopener">Cannot open a file having special characters in the filename on IIS</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;最近公司有一個作業系統升級案，從 Windows 2003 升級到 Windows 2016。&lt;br&gt;其中有個部份是從 IIS 那取得 Fi
      
    
    </summary>
    
    
      <category term="iis" scheme="https://rainmakerho.github.io/tags/iis/"/>
    
      <category term="plus" scheme="https://rainmakerho.github.io/tags/plus/"/>
    
      <category term="+" scheme="https://rainmakerho.github.io/tags//"/>
    
      <category term="filename" scheme="https://rainmakerho.github.io/tags/filename/"/>
    
  </entry>
  
  <entry>
    <title>Error code 1 for command [ios]</title>
    <link href="https://rainmakerho.github.io/2019/11/27/2019035/"/>
    <id>https://rainmakerho.github.io/2019/11/27/2019035/</id>
    <published>2019-11-27T00:41:52.000Z</published>
    <updated>2019-11-27T03:56:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近在下「yarn run cordova build ios」時，有時會出現以下的錯誤訊息，</p><p>IXME: Implement XCBuild support for macros in overriding parameters with condition sets:</p><p>CODE_SIGN_IDENTITY[sdk=iphoneos*] = iPhone Developer<br>Error: Error code 1 for command: xcodebuild with args: -xcconfig,/Users/rmuser/rmprj_client_app/platforms/ios/cordova/build-debug.xcconfig,-workspace,rmprj.xcworkspace,-scheme,rmprj,-configuration,Debug,-destination,generic/platform=iOS,-archivePath,rmprj.xcarchive,archive,CONFIGURATION_BUILD_DIR=/Users/rmuser/rmprj_client_app/platforms/ios/build/device,SHARED_PRECOMPS_DIR=/Users/rmuser/rmprj_client_app/platforms/ios/build/sharedpch<br>error Command failed with exit code 1.</p><p>後來同事把原本接上的手機移掉居然就沒問題了…</p><p>所以有類似的問題，可以這樣子試看看。</p><p>另外，最近因為 xcode 也升級了，所以原本在 Build App 時，會出現錯誤。<br>後來設定 File -&gt; Project Settings<br>把 Build System 從 New Build System (Default) 改成 Legacy Build System 就解決了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近在下「yarn run cordova build ios」時，有時會出現以下的錯誤訊息，&lt;/p&gt;
&lt;p&gt;IXME: Implement XCBuild support for macros in overriding parameters with condition
      
    
    </summary>
    
    
      <category term="mac" scheme="https://rainmakerho.github.io/tags/mac/"/>
    
      <category term="cordova" scheme="https://rainmakerho.github.io/tags/cordova/"/>
    
  </entry>
  
  <entry>
    <title>透過 Aspose.Cells WorkbookDesigner 來做 Excel 資料套表</title>
    <link href="https://rainmakerho.github.io/2019/11/20/2019034/"/>
    <id>https://rainmakerho.github.io/2019/11/20/2019034/</id>
    <published>2019-11-20T11:39:06.000Z</published>
    <updated>2019-11-20T09:07:44.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>最近同事詢問，如果 Excel 想要透過資料來套表的話，是否好做呢?<br>之前我們套表是先在 Excel 中去埋一些 Tag ，再另存成 Html 檔案。<br>因為是文字檔案了，所以透過程式去找到對應的地方進行套表，然後再存檔。<br>但它本質上是 Html 格式。<br>是否有比較好做的方式呢? 所以查到了 Aspose.Cell 這個元件。</p><h3 id="研究與實作"><a href="#研究與實作" class="headerlink" title="研究與實作"></a>研究與實作</h3><p>在網路上查到<a href="https://docs.aspose.com/display/cellsnet/Using+Smart+Markers" target="_blank" rel="noopener">Aspose.Cells Using Smart Markers</a>，它就是讓我們來做 Excel 的套表。<br>以下筆者使用簡單的訂單、訂單細項來練習。<br>產生測試用的 DataSet ，如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">var</span> dtOrderDetails = <span class="keyword">new</span> DataTable(<span class="string">"Order_Details"</span>);</span><br><span class="line">dtOrderDetails.Columns.Add(<span class="string">"SeqNo"</span>, <span class="keyword">typeof</span>(<span class="keyword">short</span>));</span><br><span class="line">dtOrderDetails.Columns.Add(<span class="string">"ProdId"</span>, <span class="keyword">typeof</span>(<span class="keyword">string</span>));</span><br><span class="line">dtOrderDetails.Columns.Add(<span class="string">"ProdName"</span>, <span class="keyword">typeof</span>(<span class="keyword">string</span>));</span><br><span class="line">dtOrderDetails.Columns.Add(<span class="string">"Price"</span>, <span class="keyword">typeof</span>(<span class="keyword">double</span>));</span><br><span class="line">dtOrderDetails.Columns.Add(<span class="string">"ProdQty"</span>, <span class="keyword">typeof</span>(<span class="keyword">short</span>));</span><br><span class="line">dtOrderDetails.Rows.Add(<span class="number">1</span>, <span class="string">"rm-001"</span>, <span class="string">"RM 火箭包"</span>, <span class="number">29900</span>, <span class="number">1</span>);</span><br><span class="line">dtOrderDetails.Rows.Add(<span class="number">2</span>, <span class="string">"rm-003"</span>, <span class="string">"打掃小RM"</span>, <span class="number">59900</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Create the second, calculated, column.</span></span><br><span class="line"><span class="keyword">var</span> colProdAmount = <span class="keyword">new</span> DataColumn();</span><br><span class="line">colProdAmount.DataType = <span class="keyword">typeof</span>(<span class="keyword">double</span>);</span><br><span class="line">colProdAmount.ColumnName = <span class="string">"ProdAmount"</span>;</span><br><span class="line">colProdAmount.Expression = <span class="string">"Price * ProdQty"</span>;</span><br><span class="line">dtOrderDetails.Columns.Add(colProdAmount);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> dtOrder = <span class="keyword">new</span> DataTable(<span class="string">"Order"</span>);</span><br><span class="line">dtOrder.Columns.Add(<span class="string">"Id"</span>, <span class="keyword">typeof</span>(<span class="keyword">string</span>));</span><br><span class="line">dtOrder.Columns.Add(<span class="string">"Name"</span>, <span class="keyword">typeof</span>(<span class="keyword">string</span>));</span><br><span class="line">dtOrder.Columns.Add(<span class="string">"StatusName"</span>, <span class="keyword">typeof</span>(<span class="keyword">string</span>));</span><br><span class="line">dtOrder.Columns.Add(<span class="string">"Amount"</span>, <span class="keyword">typeof</span>(<span class="keyword">double</span>));</span><br><span class="line"><span class="comment">//double orderAmount = dtOrderDetails.AsEnumerable().Sum(x =&gt; x.Field&lt;double&gt;("Price") * x.Field&lt;short&gt;("ProdQty"));</span></span><br><span class="line"><span class="keyword">double</span> orderAmount = (<span class="keyword">double</span>)dtOrderDetails.Compute(<span class="string">"Sum (ProdAmount)"</span>, <span class="string">""</span>);</span><br><span class="line">dtOrder.Rows.Add(<span class="string">"ord-20191120-001"</span>, <span class="string">"大頭狗的訂單"</span>, <span class="string">"備貨中"</span>, orderAmount);</span><br><span class="line"><span class="keyword">var</span> ds = <span class="keyword">new</span> DataSet();</span><br><span class="line">ds.Tables.AddRange(<span class="keyword">new</span> DataTable[] &#123; dtOrder, dtOrderDetails &#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> wd = <span class="keyword">new</span> WorkbookDesigner();</span><br><span class="line">wd.Workbook = <span class="keyword">new</span> Workbook(<span class="string">"orderTemplate.xlsx"</span>);</span><br><span class="line">wd.SetDataSource(ds);</span><br><span class="line"><span class="comment">// Process the smart markers to fill the data into the worksheets.</span></span><br><span class="line">wd.Process(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Save the excel file.</span></span><br><span class="line">wd.Workbook.Save(<span class="string">"output.xlsx"</span>);</span><br></pre></td></tr></table></figure><p>Excel 範本就叫 orderTemplate.xlsx，產生結果如下圖，<br><img src="/2019/11/20/2019034/001.png" title="範本及套資料出來的結果"></p><p>剛才 Master 資料是在最上面，那可以在訂單細項的下面嗎?<br>所以我們程式中再多一筆訂單細項，然後範本在訂單細項下面多加 訂單總金額 ，套表出來一樣是沒有問題的哦。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">var</span> dtOrderDetails = <span class="keyword">new</span> DataTable(<span class="string">"Order_Details"</span>);</span><br><span class="line">dtOrderDetails.Columns.Add(<span class="string">"SeqNo"</span>, <span class="keyword">typeof</span>(<span class="keyword">short</span>));</span><br><span class="line">dtOrderDetails.Columns.Add(<span class="string">"ProdId"</span>, <span class="keyword">typeof</span>(<span class="keyword">string</span>));</span><br><span class="line">dtOrderDetails.Columns.Add(<span class="string">"ProdName"</span>, <span class="keyword">typeof</span>(<span class="keyword">string</span>));</span><br><span class="line">dtOrderDetails.Columns.Add(<span class="string">"Price"</span>, <span class="keyword">typeof</span>(<span class="keyword">double</span>));</span><br><span class="line">dtOrderDetails.Columns.Add(<span class="string">"ProdQty"</span>, <span class="keyword">typeof</span>(<span class="keyword">short</span>));</span><br><span class="line">dtOrderDetails.Rows.Add(<span class="number">1</span>, <span class="string">"rm-001"</span>, <span class="string">"RM 火箭包"</span>, <span class="number">29900</span>, <span class="number">1</span>);</span><br><span class="line">dtOrderDetails.Rows.Add(<span class="number">2</span>, <span class="string">"rm-003"</span>, <span class="string">"打掃小RM"</span>, <span class="number">59900</span>, <span class="number">2</span>);</span><br><span class="line">dtOrderDetails.Rows.Add(<span class="number">3</span>, <span class="string">"rm-005"</span>, <span class="string">"RM 推推禮包"</span>, <span class="number">6666</span>, <span class="number">5</span>);</span><br><span class="line"><span class="comment">// Create the second, calculated, column.</span></span><br><span class="line"><span class="keyword">var</span> colProdAmount = <span class="keyword">new</span> DataColumn();</span><br><span class="line">colProdAmount.DataType = <span class="keyword">typeof</span>(<span class="keyword">double</span>);</span><br><span class="line">colProdAmount.ColumnName = <span class="string">"ProdAmount"</span>;</span><br><span class="line">colProdAmount.Expression = <span class="string">"Price * ProdQty"</span>;</span><br><span class="line">dtOrderDetails.Columns.Add(colProdAmount);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> dtOrder = <span class="keyword">new</span> DataTable(<span class="string">"Order"</span>);</span><br><span class="line">dtOrder.Columns.Add(<span class="string">"Id"</span>, <span class="keyword">typeof</span>(<span class="keyword">string</span>));</span><br><span class="line">dtOrder.Columns.Add(<span class="string">"Name"</span>, <span class="keyword">typeof</span>(<span class="keyword">string</span>));</span><br><span class="line">dtOrder.Columns.Add(<span class="string">"StatusName"</span>, <span class="keyword">typeof</span>(<span class="keyword">string</span>));</span><br><span class="line">dtOrder.Columns.Add(<span class="string">"Amount"</span>, <span class="keyword">typeof</span>(<span class="keyword">double</span>));</span><br><span class="line"><span class="comment">//double orderAmount = dtOrderDetails.AsEnumerable().Sum(x =&gt; x.Field&lt;double&gt;("Price") * x.Field&lt;short&gt;("ProdQty"));</span></span><br><span class="line"><span class="keyword">double</span> orderAmount = (<span class="keyword">double</span>)dtOrderDetails.Compute(<span class="string">"Sum (ProdAmount)"</span>, <span class="string">""</span>);</span><br><span class="line">dtOrder.Rows.Add(<span class="string">"ord-20191120-001"</span>, <span class="string">"大頭狗的訂單"</span>, <span class="string">"備貨中"</span>, orderAmount);</span><br><span class="line"><span class="keyword">var</span> ds = <span class="keyword">new</span> DataSet();</span><br><span class="line">ds.Tables.AddRange(<span class="keyword">new</span> DataTable[] &#123; dtOrder, dtOrderDetails &#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> wd = <span class="keyword">new</span> WorkbookDesigner();</span><br><span class="line">wd.Workbook = <span class="keyword">new</span> Workbook(<span class="string">"orderTemplate.xlsx"</span>);</span><br><span class="line">wd.SetDataSource(ds);</span><br><span class="line"><span class="comment">// Process the smart markers to fill the data into the worksheets.</span></span><br><span class="line">wd.Process(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Save the excel file.</span></span><br><span class="line">wd.Workbook.Save(<span class="string">"output.xlsx"</span>);</span><br></pre></td></tr></table></figure><img src="/2019/11/20/2019034/002.png" title="Master在細項之後，套資料出來的結果"><p>使用上真的很方便哦 ^_^</p><h3 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h3><p><a href="https://docs.aspose.com/display/cellsnet/Using+Smart+Markers" target="_blank" rel="noopener">Aspose.Cells Using Smart Markers</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;最近同事詢問，如果 Excel 想要透過資料來套表的話，是否好做呢?&lt;br&gt;之前我們套表是先在 Excel 中去埋一些 Tag ，再另存成 
      
    
    </summary>
    
    
      <category term="Excel" scheme="https://rainmakerho.github.io/tags/Excel/"/>
    
      <category term="Aspose.Cells" scheme="https://rainmakerho.github.io/tags/Aspose-Cells/"/>
    
      <category term="WorkbookDesigner" scheme="https://rainmakerho.github.io/tags/WorkbookDesigner/"/>
    
      <category term="Smart Markers" scheme="https://rainmakerho.github.io/tags/Smart-Markers/"/>
    
      <category term="Template" scheme="https://rainmakerho.github.io/tags/Template/"/>
    
      <category term="套表" scheme="https://rainmakerho.github.io/tags/%E5%A5%97%E8%A1%A8/"/>
    
      <category term="DataTable" scheme="https://rainmakerho.github.io/tags/DataTable/"/>
    
      <category term="DataSet" scheme="https://rainmakerho.github.io/tags/DataSet/"/>
    
  </entry>
  
  <entry>
    <title>ASP.NET 使用了 Forms 驗證後，「請別忘了」設定 Authorization 哦!</title>
    <link href="https://rainmakerho.github.io/2019/11/11/2019033/"/>
    <id>https://rainmakerho.github.io/2019/11/11/2019033/</id>
    <published>2019-11-11T10:00:00.000Z</published>
    <updated>2019-12-30T02:22:37.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>最近同事詢問將程式裝到 2 台機器上去，透過 Load Balancing 時，Session 取得到，但是 Forms 驗證卻會失敗， context.User.Identity 有值， context.User.Identity.IsAuthenticated 卻是 false。</p><h3 id="研究"><a href="#研究" class="headerlink" title="研究"></a>研究</h3><p>context.User.Identity 有值， context.User.Identity.IsAuthenticated 卻是 false 似乎是驗證授權沒有設定吧!<br>於是詢問是否有設定 Authorization 。<br>請注意，如果您設定了 Forms 驗證後，卻沒有設定 Authorization 的話，那預設是所有人都可以去 Access 的哦。也因為這樣子，所以 context.User.Identity 有值， context.User.Identity.IsAuthenticated 卻是 false。<br>詳細可參考:<a href="https://docs.microsoft.com/en-us/previous-versions/wce3kxhd(v=vs.140" target="_blank" rel="noopener">ASP.NET Authorization</a>?redirectedfrom=MSDN&gt;)</p><blockquote><p>The default configuration for ASP.NET contains an <allow users="*"> element, which authorizes all users.</allow></p></blockquote><p>設定 authorization 後，就進不去了。 這才是合理的。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">authorization</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">deny</span> <span class="attr">users</span>=<span class="string">"?"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">authorization</span>&gt;</span></span><br></pre></td></tr></table></figure><p>話說，雖然合理了，但還是進不去，到底怎麼回事呢?<br>於是請同事參考 <a href="https://dotblogs.azurewebsites.net/rainmaker/2015/06/11/151544" target="_blank" rel="noopener">[ASP.NET]多個 Web Application 使用同一個 Forms Authentication</a> 裡面在 Application_BeginRequest 測試的方式，測試果然在 FormsAuthentication.Decrypt 時會噴錯。 通常會噴錯有幾個問題， machineKey, .NET Framework, .NET 組件不同。<br>但程式是一樣的，環境也是一樣的，web.config 也是相同的呀!</p><p>….</p><p>後來同事說，將 web.config 中的 machineKey 的值，用 Copy 的方式，貼到另一個 web.config 就可以了。<br>那之前為什麼不行呢?<br>因為他不是直接貼到 web.config 之中，而是透過 iis 設定到 web.config 之中。<br>雖然看起來是一樣的，但或許有些肉眼是看不出來的….</p><p>下次還是直接用 Copy 就好了…<br>Anyway 總算是解決了…<br>非常感謝 皇任 及 嘉棋 同事的分享。 ^_^</p><h3 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h3><p><a href="https://docs.microsoft.com/en-us/previous-versions/wce3kxhd(v=vs.140" target="_blank" rel="noopener">ASP.NET Authorization</a>?redirectedfrom=MSDN&gt;)<br><a href="https://weblogs.asp.net/gurusarkar/setting-authorization-rules-for-a-particular-page-or-folder-in-web-config" target="_blank" rel="noopener">Setting authorization rules for a particular page or folder in web.config</a><br><a href="https://dotblogs.azurewebsites.net/rainmaker/2015/06/11/151544" target="_blank" rel="noopener">[ASP.NET]多個 Web Application 使用同一個 Forms Authentication</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;最近同事詢問將程式裝到 2 台機器上去，透過 Load Balancing 時，Session 取得到，但是 Forms 驗證卻會失敗， c
      
    
    </summary>
    
    
      <category term="machineKey" scheme="https://rainmakerho.github.io/tags/machineKey/"/>
    
      <category term="Authorization" scheme="https://rainmakerho.github.io/tags/Authorization/"/>
    
      <category term="authentication" scheme="https://rainmakerho.github.io/tags/authentication/"/>
    
      <category term="User.Identity" scheme="https://rainmakerho.github.io/tags/User-Identity/"/>
    
      <category term="FormsAuthentication.Decrypt" scheme="https://rainmakerho.github.io/tags/FormsAuthentication-Decrypt/"/>
    
  </entry>
  
  <entry>
    <title>HTTP 錯誤 500.52 - URL Rewrite Module Error.</title>
    <link href="https://rainmakerho.github.io/2019/10/24/2019032/"/>
    <id>https://rainmakerho.github.io/2019/10/24/2019032/</id>
    <published>2019-10-24T02:14:24.000Z</published>
    <updated>2019-10-25T03:55:41.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>我們使用 iisnode 時，會用到 IIS URLRewrite ，而且需要啟用一些 Server Variables，所以在 Web.Config 中設定 rewrite/allowedServerVariables，如下，</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">system.webServer</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">rewrite</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">allowedServerVariables</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">add</span> <span class="attr">name</span>=<span class="string">"HTTP_X_ORIGINAL_URL"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">add</span> <span class="attr">name</span>=<span class="string">"UNENCODED_URL"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">add</span> <span class="attr">name</span>=<span class="string">"HTTP_CONNECTION"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">allowedServerVariables</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">rules</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">rule</span> <span class="attr">name</span>=<span class="string">"all"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">match</span> <span class="attr">url</span>=<span class="string">"/*"</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">action</span> <span class="attr">type</span>=<span class="string">"Rewrite"</span> <span class="attr">url</span>=<span class="string">"index.js"</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">rule</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">rules</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">rewrite</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">system.webServer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><p>但在執行網頁時，就會出現「HTTP 錯誤 500.52 - URL Rewrite Module Error.」的錯誤，完整如下，</p><blockquote><p>這個設定區段不能在這個路徑中使用。<br>當區段在父層級被鎖定時就會發生這種情況。鎖定可能是預設 (overrideModeDefault=”Deny”)，<br>或是由位置標記使用 overrideMode=”Deny” 或繼承的 allowOverride=”false” 明確設定。</p></blockquote><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><h4 id="手動調整"><a href="#手動調整" class="headerlink" title="手動調整"></a>手動調整</h4><p>從訊息來看，直覺的做法是去修改 “C:\Windows\System32\inetsrv\config\applicationHost.config” 中的 rewrite sessionGroup，將裡面的 allowedServerVariables 的 overrideModeDefault 從 Deny 改成 Allow 。</p><h4 id="PowerShell"><a href="#PowerShell" class="headerlink" title="PowerShell"></a>PowerShell</h4><p>那 PowerShell 要如何修改它呢? 可以參考 <a href="https://blogs.iis.net/jeonghwan/examples-of-iis-powershell-cmdlets" target="_blank" rel="noopener">Examples of IIS Powershell cmdlets</a> ，直接改它的值，如下，</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Set-WebConfigurationProperty -filter /system.webServer/rewrite -name <span class="string">'sections["allowedServerVariables"].OverrideModeDefault'</span> -value Allow -pspath iis:\</span><br></pre></td></tr></table></figure><p>另外 Garry 大大也提供加到 applicationHost.config 的 location 區段之中，也是可以的哦，如下，</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">[System.Reflection.Assembly]::LoadWithPartialName(“Microsoft.Web.Administration”)</span><br><span class="line"><span class="variable">$servmgr</span> = <span class="built_in">New-Object</span> Microsoft.Web.Administration.ServerManager</span><br><span class="line"><span class="variable">$config</span> = <span class="variable">$servmgr</span>.GetApplicationHostConfiguration()</span><br><span class="line"><span class="variable">$section</span> = <span class="variable">$config</span>.GetSection(<span class="string">'system.webServer/rewrite/allowedServerVariables'</span>)</span><br><span class="line"><span class="variable">$section</span>.OverrideMode =[Microsoft.Web.Administration.OverrideMode]::Allow</span><br><span class="line"><span class="variable">$servmgr</span>.CommitChanges()</span><br></pre></td></tr></table></figure><h4 id="補充說明"><a href="#補充說明" class="headerlink" title="補充說明:"></a>補充說明:</h4><p>當有多個 msi 檔要透過 msiexec.exe 來安裝時，要使用 -Wait 哦!<br>最近遇到沒使用 -Wait 時，有些無法安裝成功哦! 例如我要同時裝 Node, iisnde 及 IIS UrlRewrite，</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="built_in">Start-Process</span> msiexec.exe -Wait -ArgumentList <span class="string">'/I node-v10.16.3-x64.msi /passive'</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">Start-Process</span> urlrewrite2.exe -Wait</span><br><span class="line"><span class="built_in">Start-Process</span> msiexec.exe -Wait -ArgumentList <span class="string">'/I iisnode-full-v0.2.21-x64.msi /passive'</span></span><br></pre></td></tr></table></figure><h3 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h3><p><a href="https://gist.github.com/ducas/b16dfd1d9ba91da7fd53" target="_blank" rel="noopener">Configure-UrlRewriteRules.ps1</a><br><a href="https://blogs.iis.net/jeonghwan/examples-of-iis-powershell-cmdlets" target="_blank" rel="noopener">Examples of IIS Powershell cmdlets</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;我們使用 iisnode 時，會用到 IIS URLRewrite ，而且需要啟用一些 Server Variables，所以在 Web.
      
    
    </summary>
    
    
      <category term="RewriteModule" scheme="https://rainmakerho.github.io/tags/RewriteModule/"/>
    
      <category term="2147942433" scheme="https://rainmakerho.github.io/tags/2147942433/"/>
    
      <category term="overrideModeDefault=&quot;Deny&quot;" scheme="https://rainmakerho.github.io/tags/overrideModeDefault-Deny/"/>
    
      <category term="allowedServerVariables" scheme="https://rainmakerho.github.io/tags/allowedServerVariables/"/>
    
  </entry>
  
  <entry>
    <title>ASP.NET Session 值為空或是無法改變的問題</title>
    <link href="https://rainmakerho.github.io/2019/10/07/2019031/"/>
    <id>https://rainmakerho.github.io/2019/10/07/2019031/</id>
    <published>2019-10-07T08:55:59.000Z</published>
    <updated>2019-10-07T09:19:57.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>最近同事詢問，有一個系統，分別裝在不同的 VM 上面，程式碼完全一樣，然而狀況卻是一個系統可正常登入，另一個則登入不進去。<br>查看後發現，無法登入的那個系統，Session 值都是空的。</p><h3 id="研究"><a href="#研究" class="headerlink" title="研究"></a>研究</h3><p>請同事用 Fiddler 錄一下各別的登入狀況後，發現在 Set-Cookie 有些許的差異，如下，</p><p>可以正常登入的系統 Set-Cookie 如下，</p><blockquote><p>Set-Cookie: ASP.NET_SessionId=304t3ljikywnupq1d0pox4oe; path=/; HttpOnly</p></blockquote><p>無法正常登入的系統 Set-Cookie 如下，</p><blockquote><p>Set-Cookie: ASP.NET_SessionId=1op3avwog33degwqhk0ywnc0; path=/; secure; HttpOnly</p></blockquote><p>它們的差異就是無法正常登入的系統，Set-Cookie 多了 secure ，<br>再看同事測試的網址是 http ，而設定檔中又設定「requireSSL=”true”」，所以就無法改變 Session 的值，Session 的值就是空值或是之前改過的值。<br>因為是測試機，所以是走 http ，所以將 coonfig 中的 requireSSL 改成 false ，就可以正常 Work 。<br>所以 config 中的 requireSSL 的值，請搭配 http or https 。<br>或都為 true ，如果沒有憑證就建立自簽憑證，然後走 https 會跟正式環境比較一致。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">system.web</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">httpCookies</span> <span class="attr">httpOnlyCookies</span>=<span class="string">"true"</span> <span class="attr">requireSSL</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">authentication</span> <span class="attr">mode</span>=<span class="string">"Forms"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">forms</span> <span class="attr">requireSSL</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">authentication</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">system.web</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h3><p><a href="https://aboutssl.org/how-to-create-a-self-signed-certificate-in-iis/" target="_blank" rel="noopener">Step-by-step Guide to create a Self Signed Certificate in IIS</a><br><a href="https://www.starwindsoftware.com/blog/using-the-microsoft-certificate-authority-to-get-rid-of-those-self-signed-certs" target="_blank" rel="noopener">Using the Microsoft Certificate Authority to get rid of those self-signed certs</a><br><a href="https://techcommunity.microsoft.com/t5/IIS-Support-Blog/SHA-256-Self-Signed-Certificate-for-Windows-Server-2012-R2/ba-p/376391" target="_blank" rel="noopener">SHA-256 Self Signed Certificate for Windows Server 2012 R2</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;最近同事詢問，有一個系統，分別裝在不同的 VM 上面，程式碼完全一樣，然而狀況卻是一個系統可正常登入，另一個則登入不進去。&lt;br&gt;查看後發現
      
    
    </summary>
    
    
      <category term="empty" scheme="https://rainmakerho.github.io/tags/empty/"/>
    
      <category term="asp.net" scheme="https://rainmakerho.github.io/tags/asp-net/"/>
    
      <category term="session" scheme="https://rainmakerho.github.io/tags/session/"/>
    
  </entry>
  
  <entry>
    <title>Chrome Version 77 列印遇到標楷體(DFKai-SB) Print 成 PDF 會破字問題</title>
    <link href="https://rainmakerho.github.io/2019/10/04/2019030/"/>
    <id>https://rainmakerho.github.io/2019/10/04/2019030/</id>
    <published>2019-10-04T08:58:46.000Z</published>
    <updated>2019-10-05T00:22:56.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>最近同事發現，原本透過 Chrome V77 (Windows)將網頁直接列印成 PDF 的功能，當字型為 標楷體(DFKai-SB) 時，會有破字的狀況。<br>而將 Chrome 退版後，這個功能就沒問題了。<br>但是在 Mac 上卻是沒問題的。</p><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p><a href="https://jsbin.com/lodutapuze/1/edit?html,output" target="_blank" rel="noopener">測試網址</a>，<br>可以發現在 Windows 10(有更新到新版本) Chrome 直接按下 Print ， Preview 就會看到字破破的狀況。<br><img src="/2019/10/04/2019030/001.png" title="DFKai-SB_font_broken"></p><p>於是同事填了 Chrome Bug 單，Chrome 也立即有了回應相關的解法方式。<br>This is due to switching from sfntly to HarfBuzz. (bug 931719) You can navigate to chrome://flags/#harfbuzz-pdf-subsetter and turn it off, and restart Chrome to quickly workaround this.</p><p>就是在 Chrome 網址列輸入 chrome://flags/#harfbuzz-pdf-subsetter<br>將原本 預設 改成 停用，再重開 Chrome 來測試就可以了哦!<br><img src="/2019/10/04/2019030/002.png" title="Default_2_Disabled"></p><p>詳細可以參考:<a href="https://bugs.chromium.org/p/chromium/issues/detail?id=1010396&amp;q=&amp;colspec=ID%20Pri%20M%20Stars%20ReleaseBlock%20Component%20Status%20Owner%20Summary%20OS%20Modified" target="_blank" rel="noopener">Issue 1010396: chinese font-family DFKai-SB is broken for print</a></p><p>感謝同事 Garry 的分享 ^_^</p><h3 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h3><p><a href="https://bugs.chromium.org/p/chromium/issues/detail?id=1010396&amp;q=&amp;colspec=ID%20Pri%20M%20Stars%20ReleaseBlock%20Component%20Status%20Owner%20Summary%20OS%20Modified" target="_blank" rel="noopener">Issue 1010396: chinese font-family DFKai-SB is broken for print</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;最近同事發現，原本透過 Chrome V77 (Windows)將網頁直接列印成 PDF 的功能，當字型為 標楷體(DFKai-SB) 時，
      
    
    </summary>
    
    
      <category term="PDF" scheme="https://rainmakerho.github.io/tags/PDF/"/>
    
      <category term="Chrome" scheme="https://rainmakerho.github.io/tags/Chrome/"/>
    
      <category term="77" scheme="https://rainmakerho.github.io/tags/77/"/>
    
      <category term="font" scheme="https://rainmakerho.github.io/tags/font/"/>
    
      <category term="DFKai-SB" scheme="https://rainmakerho.github.io/tags/DFKai-SB/"/>
    
      <category term="broken" scheme="https://rainmakerho.github.io/tags/broken/"/>
    
  </entry>
  
  <entry>
    <title>偵測到隱藏目錄 - AppScan</title>
    <link href="https://rainmakerho.github.io/2019/09/25/2019029/"/>
    <id>https://rainmakerho.github.io/2019/09/25/2019029/</id>
    <published>2019-09-25T02:48:11.000Z</published>
    <updated>2019-09-26T07:39:05.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>最近系統被 AppScan 掃出「偵測到隱藏目錄」的問題，在 IIS 上，如果目錄不存在，就會回 404 ，而如果目錄存在，又不允許瀏覽，就會回 403。 所以就可以透過回傳的狀態碼來判斷目錄的存在與否。 那要怎麼解決呢?</p><h3 id="研究與解法"><a href="#研究與解法" class="headerlink" title="研究與解法"></a>研究與解法</h3><p>先建立一個 IIS 的應用程式，裡面建立一個 admin 的目錄，並在 admin 目錄中，新增一個 hi.htm 的檔案，然後來測試。</p><p>如果目錄不存在，IIS 會回 404 ，例如在 Browser 上輸入 <a href="http://localhost/t/doc" target="_blank" rel="noopener">http://localhost/t/doc</a> 就會出 404 的錯誤，如下，</p><img src="/2019/09/25/2019029/001.png" title="folder_404"><p>如果目錄存在，就會回 403.14 Forbidden，例如在 Browser 上輸入 <a href="http://localhost/t/admin" target="_blank" rel="noopener">http://localhost/t/admin</a> 就會出現 403 的錯誤，如下，</p><img src="/2019/09/25/2019029/002.png" title="folder_403"><p>我們可以參考「<a href="https://stackoverflow.com/questions/18831024/configure-iis-to-return-404-for-directory-browse-attempts" target="_blank" rel="noopener">Configure IIS to return 404 for directory browse attempts</a>」中的幾種建議，</p><h4 id="設定-Request-Filtering-中的-Hidden-Segments"><a href="#設定-Request-Filtering-中的-Hidden-Segments" class="headerlink" title="設定 Request Filtering 中的 Hidden Segments"></a>設定 Request Filtering 中的 Hidden Segments</h4><p>情境:如果該目錄像 App_Code 這樣子的目錄，只是系統使用，Client 完全不能用，這樣子設定，如下，<br><img src="/2019/09/25/2019029/003.png" title="folder_RequestFiltering"><br>但如果您目錄中有頁面是要給 Client 使用的，就不能用這種方式哦!</p><h4 id="設定預設的-default-htm-，並設定檔案屬性為-Hidden"><a href="#設定預設的-default-htm-，並設定檔案屬性為-Hidden" class="headerlink" title="設定預設的 default.htm ，並設定檔案屬性為 Hidden"></a>設定預設的 default.htm ，並設定檔案屬性為 Hidden</h4><p>情境:如果您要卡的目錄只有一個，就還好，但如果目錄很多的話，就不建議這樣子做。<br><img src="/2019/09/25/2019029/004.png" title="folder_default_hidden"></p><h4 id="設定-web-config-的方式，將-403-導到-page-not-found-的頁面"><a href="#設定-web-config-的方式，將-403-導到-page-not-found-的頁面" class="headerlink" title="設定 web.config 的方式，將 403 導到 page not found 的頁面"></a>設定 web.config 的方式，將 403 導到 page not found 的頁面</h4><p>所以我們可以在應用程式目錄(t)下放一個 pagenotfound.htm ，當遇到 403.14 時，就導到那一頁去，如下，</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">system.webServer</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">httpErrors</span> <span class="attr">errorMode</span>=<span class="string">"Custom"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">remove</span> <span class="attr">statusCode</span>=<span class="string">"404"</span> <span class="attr">subStatusCode</span>=<span class="string">"-1"</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">error</span> <span class="attr">statusCode</span>=<span class="string">"403"</span> <span class="attr">subStatusCode</span>=<span class="string">"14"</span> <span class="attr">path</span>=<span class="string">"/t/pagenotfound.htm"</span> <span class="attr">responseMode</span>=<span class="string">"Redirect"</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">error</span> <span class="attr">statusCode</span>=<span class="string">"404"</span> <span class="attr">subStatusCode</span>=<span class="string">"-1"</span> <span class="attr">path</span>=<span class="string">"/t/pagenotfound.htm"</span> <span class="attr">responseMode</span>=<span class="string">"Redirect"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">httpErrors</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">system.webServer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><p>當然，原本的 404 也是要到一樣的頁面去，才不會讓 403 與 404 有區別，所以當我在 browser 輸入 <a href="http://localhost/t/doc" target="_blank" rel="noopener">http://localhost/t/doc</a> 及 <a href="http://localhost/t/admin" target="_blank" rel="noopener">http://localhost/t/admin</a> 都會被導到 /t/pagenotfound.htm ，如下圖，</p><img src="/2019/09/25/2019029/005.png" title="status_403_14_404"><p>但是眼尖的朋友會可以發現，為什麼打 /doc 跟 /admin 它的網路錄下來不一樣呢?<br>輸入 /doc 時，會連到 /doc (302) =&gt; /t/pagenotfound.htm (200) ，<br>輸入 /admin 時，會連到 /admin (301) /admin/ (302) =&gt; /t/pagenotfound.htm (200) ，<br>但是如果輸入 /admin/ 時，行為就會跟 /doc 一樣， /admin/ (302) =&gt; /t/pagenotfound.htm (200) 。</p><p>為什麼會這樣子呢? 這個是「<a href="https://support.microsoft.com/en-us/help/298408/iis-generates-courtesy-redirect-when-folder-without-trailing-slash-is" target="_blank" rel="noopener">courtesy redirect</a>」，就是說，如果你在網址後面不是 <strong>/</strong> 結尾的話，它會檢查 目錄 是否存在，如果存在的話，就會回 301 請 Browser 去連結尾有 <strong>/</strong> 的網址，這也就是為什麼如果目錄真的存在，輸入 /admin 會多一個 301 。</p><p>如果要避免這個問題，就需要「停用預設網頁」功能 (<defaultdocument enabled="false">)，加了這個後，就不會輸入 /doc, /admin, /admin/ 就會是一樣的行為。(<strong>請注意:這樣預設網頁就無法使用了哦!</strong>)</defaultdocument></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;configuration&gt;</span><br><span class="line">  &lt;system.webServer&gt;</span><br><span class="line">    &lt;httpErrors errorMode=&quot;Custom&quot;&gt;</span><br><span class="line">      &lt;remove statusCode=&quot;404&quot; subStatusCode=&quot;-1&quot; /&gt;</span><br><span class="line">      &lt;error statusCode=&quot;403&quot; subStatusCode=&quot;14&quot; path=&quot;/t/pagenotfound.htm&quot; responseMode=&quot;Redirect&quot; /&gt;</span><br><span class="line">      &lt;error statusCode=&quot;404&quot; subStatusCode=&quot;-1&quot; path=&quot;/t/pagenotfound.htm&quot; responseMode=&quot;Redirect&quot; /&gt;</span><br><span class="line">    &lt;/httpErrors&gt;</span><br><span class="line">    &lt;defaultDocument enabled=&quot;false&quot; /&gt;</span><br><span class="line">  &lt;/system.webServer&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure><h3 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h3><p><a href="https://stackoverflow.com/questions/18831024/configure-iis-to-return-404-for-directory-browse-attempts" target="_blank" rel="noopener">Configure IIS to return 404 for directory browse attempts</a><br><a href="https://www.troyhunt.com/solving-tyranny-of-http-403-responses/" target="_blank" rel="noopener">Solving the tyranny of HTTP 403 responses to directory browsing in ASP.NET</a><br><a href="https://shunnien.github.io/2017/06/01/webconfig-httpErros-and-customErrors/" target="_blank" rel="noopener">HttpErros 與 CustomErrors 的自訂導向</a><br><a href="https://stackoverflow.com/questions/25579048/cant-change-iis-response-code-with-url-rewrite-outbound-rule" target="_blank" rel="noopener">Can’t change IIS response code with URL Rewrite outbound rule</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;最近系統被 AppScan 掃出「偵測到隱藏目錄」的問題，在 IIS 上，如果目錄不存在，就會回 404 ，而如果目錄存在，又不允許瀏覽，就
      
    
    </summary>
    
    
      <category term="IIS" scheme="https://rainmakerho.github.io/tags/IIS/"/>
    
      <category term="403" scheme="https://rainmakerho.github.io/tags/403/"/>
    
      <category term="AppScan" scheme="https://rainmakerho.github.io/tags/AppScan/"/>
    
      <category term="偵測到隱藏目錄" scheme="https://rainmakerho.github.io/tags/%E5%81%B5%E6%B8%AC%E5%88%B0%E9%9A%B1%E8%97%8F%E7%9B%AE%E9%8C%84/"/>
    
      <category term="Forbidden" scheme="https://rainmakerho.github.io/tags/Forbidden/"/>
    
  </entry>
  
  <entry>
    <title>Microsoft Botframework V4，從 Bot 送訊息到 IM Channel 時，加入額外的 Header 資訊 (V2)</title>
    <link href="https://rainmakerho.github.io/2019/09/24/2019028/"/>
    <id>https://rainmakerho.github.io/2019/09/24/2019028/</id>
    <published>2019-09-24T07:29:00.000Z</published>
    <updated>2019-09-24T09:43:42.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>在年初時，因為 Bot 送給 IM Channel 時，需要在 HttpClient 的 Headers 中加入額外的資訊，那時筆者是透過 Middleware 的方式，取出 turnContext.TurnState 中的 ConnectorClient 。然後設定 ConnectorClient.HttpClient 的 DefaultRequestHeaders 。詳細可以參考 <a href="https://rainmakerho.github.io/2019/01/02/2019001/">Microsoft Botframework V4，從 Bot 送訊息到 IM Channel 時，加入額外的 Header 資訊</a></p><p>最近 Bot 有時會噴以下的錯誤，<br><strong><br>System.InvalidOperationException: Operations that change non-concurrent collections must have exclusive access. A concurrent update was performed on this collection and corrupted its state. The collection’s state is no longer correct.<br>at System.Collections.Generic.Dictionary`2.FindEntry(TKey key)<br>at System.Collections.Generic.Dictionary2.TryGetValue(TKey key, TValue&amp; value)<br>at System.Net.Http.Headers.HttpHeaders.ContainsParsedValue(HeaderDescriptor descriptor, Object value)<br>at System.Net.Http.Headers.HttpHeaderValueCollection1.get_IsSpecialValueSet() at System.Net.Http.Headers.HttpRequestHeaders.get_ExpectContinue() at</strong><br>或是<br><strong><br>System.NullReferenceException: Object reference not set to an instance of an object.<br>at System.Collections.Generic.Dictionary`2.FindEntry(TKey key) at System.Collections.Generic.Dictionary`2.TryGetValue(TKey key, TValue&amp; value)<br>at System.Net.Http.Headers.HttpHeaders.GetOrCreateHeaderInfo(HeaderDescriptor descriptor, Boolean parseRawValues)<br>at System.Net.Http.headers.HttpHeaders.TryAddWithoutValidation(HeaderDescriptor descriptor, String value)</strong></p><h3 id="研究"><a href="#研究" class="headerlink" title="研究"></a>研究</h3><p>網路上討論，大約是因為 Multi Thread 去 Access Dictionary 物件所引發的錯誤。<br>因為 System.Collections.Generic.Dictionary 它並不是 Thread Safe 的物件，所以在 Multi Threads 下，有可能會造成錯誤。</p><p>所以回過頭來看一下， 原本 Middleware 的部份，它是在系統一啟動時，就建立的，所以在多人使用時，的確會在 Multi Threads 的環境下，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">services.AddBot&lt;EmptyBotBot&gt;(options =&gt;</span><br><span class="line">&#123;</span><br><span class="line">  //... other code</span><br><span class="line">  //add middleware</span><br><span class="line">  options.Middleware.Add(new GssAdapterMiddleware());</span><br><span class="line">  // ...</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>所以，我們不能在 Middleware 中去操作 ConnectorClient.HttpClient 的 Headers ，除非加上 Lock 。<br>那 ConnectorClient.HttpClient 是從那裡來的呢?<br>其實它是取自 BotFrameworkAdapter 中的 _httpClient ，在 BotFrameworkAdapter 的 CreateConnectorClient Method 建立 ConnectorClient 時，將 _httpClient 給進 ConnectorClient 的建構子，詳細可以參考 Git <a href="https://github.com/microsoft/botbuilder-dotnet/blob/4.5/libraries/Microsoft.Bot.Builder/BotFrameworkAdapter.cs#L918" target="_blank" rel="noopener">BotFrameworkAdapter.cs</a></p><p>那 BotFrameworkAdapter 中的 _httpClient 又是從那裡來的呢? 如果沒有設定的話，它就拿 _defaultHttpClient (private static readonly HttpClient _defaultHttpClient = new HttpClient();) 來用。</p><p>那我們要如何建立 HttpClient 給 BotFrameworkAdapter 用呢? 其實它是取自 BotframeworkOptions 的 HttpClient 的屬性值，詳細可以參考 Git <a href="https://github.com/microsoft/botbuilder-dotnet/blob/4.5/libraries/integration/Microsoft.Bot.Builder.Integration.AspNet.Core/ServiceCollectionExtensions.cs#L170" target="_blank" rel="noopener">ServiceCollectionExtensions.cs</a></p><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>所以，原本為了加 Header 的 Middleware 可以不需要了(不然在操作時，需要 lock )，直接建立帶有我們需要 Header 的 HttpClient 物件就可以了。<br>所以程式調整如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">services.AddBot&lt;EmptyBotBot&gt;(options =&gt;</span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">//... other code</span></span><br><span class="line">  <span class="comment">//add middleware (不用 Middleware 來加 HttpClient 的 Header)</span></span><br><span class="line">  <span class="comment">//options.Middleware.Add(new GssAdapterMiddleware());</span></span><br><span class="line">  <span class="comment">//先建立我們需要的 HttpClient</span></span><br><span class="line">  <span class="keyword">var</span> authKey = <span class="string">"X-RM"</span>;</span><br><span class="line">  <span class="keyword">var</span> accessToken = <span class="string">"rainmaker_ho"</span>;</span><br><span class="line">  <span class="keyword">var</span> client = <span class="keyword">new</span> HttpClient();</span><br><span class="line">  client.DefaultRequestHeaders</span><br><span class="line">    .TryAddWithoutValidation(authKey, accessToken);</span><br><span class="line">  <span class="comment">//傳給 options.HttpClient ，它會 Pass 給 BotFrameworkAdapter</span></span><br><span class="line">  options.HttpClient = client;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><img src="/2019/09/24/2019028/001.png" title="customHttpClient"><p>透過 ngrok 來看 Bot 送到 IM Channel (POST /v3/conversations/…) 都會有我們需要的 Header 。</p><img src="/2019/09/24/2019028/002.png" title="Bot->IM"><h3 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h3><p><a href="https://github.com/dotnet/corefx/issues/31186" target="_blank" rel="noopener">[Info] InvalidOperationException: Operations that change non-concurrent collections must have exclusive access. A concurrent update was performed on this collection and corrupted its state. The collection’s state is no longer correct</a></p><p><a href="https://rainmakerho.github.io/2019/01/02/2019001/">Microsoft Botframework V4，從 Bot 送訊息到 IM Channel 時，加入額外的 Header 資訊</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;在年初時，因為 Bot 送給 IM Channel 時，需要在 HttpClient 的 Headers 中加入額外的資訊，那時筆者是透過 
      
    
    </summary>
    
    
      <category term="bfv4" scheme="https://rainmakerho.github.io/tags/bfv4/"/>
    
      <category term="HttpClient" scheme="https://rainmakerho.github.io/tags/HttpClient/"/>
    
      <category term="customHttpClient" scheme="https://rainmakerho.github.io/tags/customHttpClient/"/>
    
  </entry>
  
  <entry>
    <title>透過 Aspose.Pdf.Document 載入 Html 檔案轉成 Pdf 檔，有些字會變成空白框框</title>
    <link href="https://rainmakerho.github.io/2019/09/23/2019027/"/>
    <id>https://rainmakerho.github.io/2019/09/23/2019027/</id>
    <published>2019-09-23T02:07:08.000Z</published>
    <updated>2020-01-19T10:53:12.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>我們手上有一個 big5 編碼的 Html 檔案，想透過 Aspose 來轉換成 Pdf 檔案，看似容易，但在轉出來的 Pdf 中，竟然有一些字會變成「空白的框框」。一件簡單的工作，怎麼會踩到了雷呢?</p><p>首先，透過 Aspose 將 Html 檔轉換成 Pdf 檔案在 Aspose 有 2 種做法，如下，</p><p>1.透過 Aspose.HTML 來轉，請參考:<a href="https://docs.aspose.com/display/htmlnet/HTML+to+PDF+Conversion" target="_blank" rel="noopener">Aspose.HTML HTML to PDF Conversion</a></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Source HTML document</span></span><br><span class="line"><span class="keyword">var</span> htmlDocument = <span class="keyword">new</span> HTMLDocument(<span class="string">"input.html"</span>);</span><br><span class="line"><span class="comment">// Initialize PdfSaveOptions</span></span><br><span class="line">PdfSaveOptions options = <span class="keyword">new</span> PdfSaveOptions</span><br><span class="line">&#123;</span><br><span class="line">    JpegQuality = <span class="number">100</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// Output file path</span></span><br><span class="line"><span class="keyword">string</span> outputPDF = <span class="string">"HTMLtoPDF_Output.pdf"</span>;</span><br><span class="line"><span class="comment">// Convert HTML to PDF</span></span><br><span class="line">Converter.ConvertHTML(htmlDocument, options, outputPDF);</span><br></pre></td></tr></table></figure><p>2.透過 Aspose.Pdf 來轉，請參考:<a href="https://docs.aspose.com/display/pdfnet/Convert+a+File+to+PDF+Format" target="_blank" rel="noopener">Aspose.Pdf Convert a File to PDF Format</a></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> options = <span class="keyword">new</span> HtmlLoadOptions();</span><br><span class="line"><span class="comment">//會自已判斷檔案的編碼(big5/utf8)，所以不用特別指定 encoding</span></span><br><span class="line">Document pdfDocument = <span class="keyword">new</span> Document(<span class="string">"input.html"</span>, options);</span><br><span class="line">pdfDocument.Save(<span class="string">"HTMLtoPDF_Output.pdf"</span>);</span><br></pre></td></tr></table></figure><p>而我們剛開始是使用第 2 種方式，透過 Aspose.Pdf 來轉換，因為檔案是 big5 ，所以多設定 HtmlLoadOptions 的 InputEncoding 屬性為 big5 (可以不用設定，因為它會自動偵測)。<br>結果有些字出來卻會變成一個空白的框框。如下，「查」這個字，變成了空白的框框<br><img src="/2019/09/23/2019027/001.png" title="Aspose.Pdf_WhiteBox"><br>測試的 Html 內容如下，</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>FC21900000-102/06/18 10:54:19<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=big5"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    查詢查日期</span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span> /&gt;</span></span><br><span class="line">    查詢日期: 102/06/18 10:54:19 一、個</span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="研究"><a href="#研究" class="headerlink" title="研究"></a>研究</h3><p>即然透過 Aspose.Pdf 有問題，就改用第 1 種方式，透過 Aspose.HTML 來轉，結果這次變成「全型標點符號」會變成空白的框框，例如，一、個人 的「、」會變成空白的框框<br><img src="/2019/09/23/2019027/002.jpg" title="Aspose.HTML_WhiteBox"></p><p>2 種方式都無法正常將 Html 轉成 Pdf 檔，判斷應該是字型的問題，是否可以在載入後去調整它的字型然後再存檔呢?<br>所以筆者參考<a href="https://docs.aspose.com/display/pdfnet/Replace+Text+in+a+PDF+Document" target="_blank" rel="noopener">Replace fonts in existing PDF file</a> 透過 TextFragmentAbsorber 取出文件中所有的 TextFragment ，先看一下有問題的文字，它們的字型是什麼呢?</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> absorber = <span class="keyword">new</span> TextFragmentAbsorber(<span class="keyword">new</span> TextEditOptions(TextEditOptions.FontReplace.RemoveUnusedFonts));</span><br><span class="line">pdfDocument.Pages.Accept(absorber);</span><br><span class="line"><span class="keyword">foreach</span> (TextFragment textFragment <span class="keyword">in</span> absorber.TextFragments)</span><br><span class="line">&#123;</span><br><span class="line">    Console.WriteLine(<span class="string">"&#123;0&#125;:&#123;1&#125;"</span>, textFragment.Text, textFragment.TextState.Font.FontName);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>結果輸出如下，</p><p><strong><br>詢 日期:MSGothic<br>詢日期:MSGothic<br>::TimesNewRoman<br>102/06/18:TimesNewRoman<br>10:54:19:TimesNewRoman<br>一、個:MSGothic</strong></p><p>可以發現，「查」這個字不見了，而且它的字型為 MSGothic 。<br>如果我們將 Html 多加字型設定進去(font face=”細明體”)，如下，</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">HTML</span>&gt;</span><span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="tag">&lt;<span class="name">title</span>&gt;</span>FC21900000-102/06/18 10:54:19<span class="tag">&lt;/<span class="name">title</span>&gt;</span><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=big5"</span> /&gt;</span><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">BODY</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">basefont=4</span> <span class="attr">font</span> <span class="attr">FACE</span>=<span class="string">"細明體"</span> <span class="attr">LANG</span>=<span class="string">"ZH-TW"</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">"細明體"</span>&gt;</span><span class="tag">&lt;<span class="name">pre</span>&gt;</span></span><br><span class="line">查詢查日期</span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">查詢日期: 102/06/18 10:54:19</span><br><span class="line">一、個</span><br><span class="line"><span class="tag">&lt;/<span class="name">pre</span>&gt;</span><span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">basefont</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">BODY</span>&gt;</span><span class="tag">&lt;/<span class="name">HTML</span>&gt;</span></span><br></pre></td></tr></table></figure><p>它的輸出就是正常的，各句子的字型如下，<br><strong><br>查詢查日期:DFKai-SB<br>查詢日期:DFKai-SB<br>::CourierNew<br>102/06/18:CourierNew<br>10:54:19:CourierNew<br>一:DFKai-SB<br>、:MSGothic<br>個:DFKai-SB</strong></p><p>但是如果將一樣的程式拿到 Windows Server 上測試，它的結果就會變成跟沒設定字型類似，如下，<br><strong><br>詢 日期:MSGothic<br>詢日期:MSGothic<br>::CourierNew<br>102/06/18:CourierNew<br>10:54:19:CourierNew<br>一:MSGothic<br>、:MSGothic<br>個:MSGothic</strong></p><p>所以「查」這個字，在 Windows Server 上又變成了一個空白的框框了。<br>怎麼辦呢? 那把 MSGothic 字型改成 DFKai-SB 字型可以嗎? 所以我們再加入置換字型的程式碼，如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> absorber = <span class="keyword">new</span> TextFragmentAbsorber(<span class="keyword">new</span> TextEditOptions(TextEditOptions.FontReplace.RemoveUnusedFonts));</span><br><span class="line">pdfDocument.Pages.Accept(absorber);</span><br><span class="line"><span class="keyword">foreach</span> (TextFragment textFragment <span class="keyword">in</span> absorber.TextFragments)</span><br><span class="line">&#123;</span><br><span class="line">    Console.WriteLine(<span class="string">"&#123;0&#125;:&#123;1&#125;"</span>, textFragment.Text, textFragment.TextState.Font.FontName);</span><br><span class="line">    <span class="keyword">if</span> (textFragment.TextState.Font.FontName == <span class="string">"MSGothic"</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        textFragment.TextState.Font = FontRepository.FindFont(<span class="string">"DFKai-SB"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>… 結果，Pdf 中「查」這個字，直接變成空白 Q_Q</p><p>顯然從 Html 載入到 Pdf 檔時，字型如果沒設定好，到後面應該就沒機會去改它了。<br>為了驗證假設是否正確，我們可以動態加入一段 Html 到 Pdf.Document 之中，如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> options = <span class="keyword">new</span> HtmlLoadOptions();</span><br><span class="line"><span class="comment">//會自已判斷檔案的編碼(big5/utf8)，所以不用特別指定 encoding</span></span><br><span class="line">Document pdfDocument = <span class="keyword">new</span> Document(<span class="string">"input.html"</span>, options);</span><br><span class="line"><span class="keyword">var</span> html = <span class="keyword">new</span> HtmlFragment(<span class="string">"查詢查日期"</span>)</span><br><span class="line">&#123;</span><br><span class="line">    TextState = <span class="keyword">new</span> TextState</span><br><span class="line">    &#123;&#125;</span><br><span class="line">&#125;;</span><br><span class="line">pdfDocument.Pages[<span class="number">1</span>].Paragraphs.Add(html);</span><br><span class="line">pdfDocument.Save(<span class="string">"HTMLtoPDF_Output.pdf"</span>);</span><br></pre></td></tr></table></figure><p>結果「查」這個字果然也變成了空白框框，如下圖，<br><img src="/2019/09/23/2019027/003.png" title="HtmlFragment.HTML_WhiteBox"></p><p>這時，如果我們在 new HtmlFragment 時，設定 TextState 的字型，「查」這個字就可以順利顯示出來，如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> options = <span class="keyword">new</span> HtmlLoadOptions();</span><br><span class="line"><span class="comment">//會自已判斷檔案的編碼(big5/utf8)，所以不用特別指定 encoding</span></span><br><span class="line">Document pdfDocument = <span class="keyword">new</span> Document(<span class="string">"input.html"</span>, options);</span><br><span class="line"><span class="keyword">var</span> html = <span class="keyword">new</span> HtmlFragment(<span class="string">"查詢查日期"</span>)</span><br><span class="line">&#123;</span><br><span class="line">    TextState = <span class="keyword">new</span> TextState</span><br><span class="line">    &#123;</span><br><span class="line">        Font = FontRepository.FindFont(<span class="string">"DFKai-SB"</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line">pdfDocument.Pages[<span class="number">1</span>].Paragraphs.Add(html);</span><br><span class="line">pdfDocument.Save(<span class="string">"HTMLtoPDF_Output.pdf"</span>);</span><br></pre></td></tr></table></figure><img src="/2019/09/23/2019027/004.png" title="HtmlFragment.TextState.Font"><p>果然在載入到 Pdf.Document 時，就要給定預設的字型，但 HtmlLoadOptions 並沒有預設字型的屬性，怎麼辦呢?</p><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>HtmlLoadOptions 目前並沒有預設字型的屬性，但 HtmlFragment 有，所以目前只好從 HtmlFragment 著手，也就是自已載入 Html 內容，然後再加入 Pdf.Document 之中。<br>所以目前暫時解法如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> htmlFile = <span class="string">@"input.html"</span>;</span><br><span class="line"><span class="keyword">var</span> htmlContents = File.ReadAllText(htmlFile, System.Text.Encoding.GetEncoding(<span class="number">950</span>));</span><br><span class="line"><span class="comment">//chang charset from big5 to utf8</span></span><br><span class="line">htmlContents = htmlContents.Replace(<span class="string">"big5"</span>, <span class="string">"utf8"</span>);</span><br><span class="line"><span class="keyword">var</span> pdf = <span class="keyword">new</span> Aspose.Pdf.Document();</span><br><span class="line"><span class="keyword">var</span> page = pdf.Pages.Add();</span><br><span class="line">page.PageInfo.Height = Aspose.Pdf.PageSize.A4.Height;</span><br><span class="line">page.PageInfo.Width = Aspose.Pdf.PageSize.A4.Width;</span><br><span class="line">page.PageInfo.Margin.Left = <span class="number">5</span>;</span><br><span class="line">page.PageInfo.Margin.Right = <span class="number">5</span>;</span><br><span class="line"><span class="keyword">var</span> html = <span class="keyword">new</span> HtmlFragment(htmlContents)</span><br><span class="line">&#123;</span><br><span class="line">    TextState = <span class="keyword">new</span> TextState</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//you can change your default font</span></span><br><span class="line">        Font = FontRepository.FindFont(<span class="string">"DFKai-SB"</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line">page.Paragraphs.Add(html);</span><br><span class="line">pdf.Save(<span class="string">"HTMLtoPDF_Output.pdf"</span>);</span><br></pre></td></tr></table></figure><p>產出的內容如下，<br><img src="/2019/09/23/2019027/005.png" title="HtmlFragment.TextState.Font.OK"></p><p>因為 HtmlLoadOptions 目前並沒有預設字型的屬性，所以針對這問題，原廠有建立一個問題單，未來更方便的解法，再跟大家 Update 。</p><h3 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h3><p><a href="https://docs.aspose.com/display/htmlnet/HTML+to+PDF+Conversion" target="_blank" rel="noopener">Aspose.HTML HTML to PDF Conversion</a><br><a href="https://docs.aspose.com/display/pdfnet/Convert+a+File+to+PDF+Format" target="_blank" rel="noopener">Aspose.Pdf Convert a File to PDF Format</a><br><a href="https://dev.to/andruhovski/how-to-render-html-to-pdf-document-using-asposehtml-for-net-1g5j" target="_blank" rel="noopener">How to render HTML to PDF document using Aspose.HTML for .NET</a><br><a href="https://forum.aspose.com/t/aspose-pdf-document-big5-html-pdf/202582" target="_blank" rel="noopener">Aspose.Pdf.Document 載入 Big5 Html 檔，存成 PDF 時，有些字會變成一個空的框框</a><br><a href="https://docs.aspose.com/display/pdfnet/Replace+Text+in+a+PDF+Document" target="_blank" rel="noopener">Replace fonts in existing PDF file</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;我們手上有一個 big5 編碼的 Html 檔案，想透過 Aspose 來轉換成 Pdf 檔案，看似容易，但在轉出來的 Pdf 中，竟然有一
      
    
    </summary>
    
    
      <category term="Html" scheme="https://rainmakerho.github.io/tags/Html/"/>
    
      <category term="Aspose.Pdf.Document" scheme="https://rainmakerho.github.io/tags/Aspose-Pdf-Document/"/>
    
      <category term="Pdf" scheme="https://rainmakerho.github.io/tags/Pdf/"/>
    
      <category term="空白框框" scheme="https://rainmakerho.github.io/tags/%E7%A9%BA%E7%99%BD%E6%A1%86%E6%A1%86/"/>
    
      <category term="characters are missing" scheme="https://rainmakerho.github.io/tags/characters-are-missing/"/>
    
      <category term="charset" scheme="https://rainmakerho.github.io/tags/charset/"/>
    
      <category term="big5" scheme="https://rainmakerho.github.io/tags/big5/"/>
    
      <category term="FontRepository" scheme="https://rainmakerho.github.io/tags/FontRepository/"/>
    
      <category term="MSGothic" scheme="https://rainmakerho.github.io/tags/MSGothic/"/>
    
  </entry>
  
  <entry>
    <title>為什麼 aspnet_client 目錄中的檔案都無法下載，Status 為 401</title>
    <link href="https://rainmakerho.github.io/2019/09/17/2019026/"/>
    <id>https://rainmakerho.github.io/2019/09/17/2019026/</id>
    <published>2019-09-17T05:52:25.000Z</published>
    <updated>2019-09-17T06:14:53.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>最近同事詢問，系統 Link 到 aspnet_client 中的 js 檔案時，都無法下載，出現 401 Unauthorized 。<br>同事確認「匿名驗證」也有啟用，怎麼還會噴 401 呢?</p><h3 id="研究與解決"><a href="#研究與解決" class="headerlink" title="研究與解決"></a>研究與解決</h3><p>連到本機直接瀏覽那個檔案，錯誤內容為「401.3 - Unauthorized」，詳細資料為「因為網頁伺服器上此資源的存取控制清單 (ACL) 設定或加密設定的緣故，您沒有檢視此目錄或網頁的權限。」。</p><p>看來應該跟目錄的安全性有關係，於是再看一下它的根目錄所在路徑，發現它並不是預設的位置(c:\interpub\wwwroot)。<br>所以我先將 IIS 根目錄改回預設的 c:\interpub\wwwroot ，然後再用 Browser 瀏覽 aspnet_client 中的隨便一個 js ，它是會下載的。<br>於是跟預設的跟目錄安全性比對一下發現，目前的這個根目錄下的 aspnet_client 目錄，少了 Everyone 這個使用者。<br>於是在一樣的目錄安全性中加入 Everyone ，並授與 Read 的權限，再試看看就可以了哦!</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;最近同事詢問，系統 Link 到 aspnet_client 中的 js 檔案時，都無法下載，出現 401 Unauthorized 。&lt;b
      
    
    </summary>
    
    
      <category term="iis" scheme="https://rainmakerho.github.io/tags/iis/"/>
    
      <category term="aspnet_client" scheme="https://rainmakerho.github.io/tags/aspnet-client/"/>
    
      <category term="Unauthorized" scheme="https://rainmakerho.github.io/tags/Unauthorized/"/>
    
  </entry>
  
  <entry>
    <title>.NET Core AD 帳密驗證</title>
    <link href="https://rainmakerho.github.io/2019/09/17/2019025/"/>
    <id>https://rainmakerho.github.io/2019/09/17/2019025/</id>
    <published>2019-09-17T03:17:17.000Z</published>
    <updated>2019-09-17T03:55:25.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>目前 .NET Core 的 System.DirectoryServices.Protocols 還不 Support 非 Windows 平台。<br>所以如果在 Mac 中使用的話，就會噴「System.PlatformNotSupportedException」這個錯誤，如下，</p><p>System.PlatformNotSupportedException: System.DirectoryServices.Protocols is not supported on this platform.<br>at System.DirectoryServices.Protocols.DirectoryIdentifier..ctor()<br>at System.DirectoryServices.Protocols.LdapDirectoryIdentifier..ctor(String server, Int32 portNumber)</p><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><h4 id="改用-Novell-Directory-Ldap-NETStandard"><a href="#改用-Novell-Directory-Ldap-NETStandard" class="headerlink" title="改用 Novell.Directory.Ldap.NETStandard"></a>改用 Novell.Directory.Ldap.NETStandard</h4><p>所以如果要真的跨平台的話，可以使用 <a href="https://github.com/dsbenghe/Novell.Directory.Ldap.NETStandard" target="_blank" rel="noopener">Novell.Directory.Ldap.NETStandard</a> 從 Nuget 加入套件。<br>使用上也很方便，可以參考 <a href="https://nicolas.guelpa.me/blog/2017/02/15/dotnet-core-ldap-authentication.html" target="_blank" rel="noopener">.NET Core LDAP authentication</a> 這篇的說明來實作即可。</p><p>而目前我的需求只有簡單的給使用者及密碼來驗證是否正確，如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//using Novell.Directory.Ldap;</span></span><br><span class="line"><span class="comment">//ldapServer，不知道的話，可以先用 Active Directory Explorer 來查看</span></span><br><span class="line"><span class="keyword">var</span> ldapServer = <span class="string">@"yourldapserver.com.tw"</span>;</span><br><span class="line"><span class="comment"><span class="doctag">///</span>/LDAP SSL (TCP 636) and LDAP GC SSL (TCP 3269)</span></span><br><span class="line"><span class="keyword">var</span> ldapConn = <span class="keyword">new</span> LdapConnection() &#123; SecureSocketLayer = <span class="literal">true</span> &#125;;</span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line">    ldapConn.Connect(ldapServer, LdapConnection.DEFAULT_SSL_PORT);</span><br><span class="line">    <span class="comment">//可以使用 DN or 含domain User</span></span><br><span class="line">    <span class="keyword">var</span> dnUser = <span class="string">@"CN=rainmaker_ho,OU=EMP,OU=RM,DC=rm,DC=com,DC=tw"</span>;</span><br><span class="line">    <span class="keyword">var</span> domainUser = <span class="string">"rainmaker_ho@rm.com.tw"</span>;</span><br><span class="line">    <span class="keyword">var</span> domainUser2 = <span class="string">@"rm_domain\rainmaker_ho"</span>;</span><br><span class="line">    <span class="keyword">var</span> userpassword = <span class="string">"rm'sppwwdd"</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">string</span>.IsNullOrEmpty(userpassword))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">"密碼不能為空值!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//DN 驗證</span></span><br><span class="line">    ldapConn.Bind(dnUser, userpassword);</span><br><span class="line">    <span class="comment">//user@domain 驗證</span></span><br><span class="line">    <span class="comment">//ldapConn.Bind(domainUser, userpassword);</span></span><br><span class="line">    <span class="comment">//domain\user 驗證</span></span><br><span class="line">    <span class="comment">//ldapConn.Bind(domainUser2, userpassword);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> (Exception ex)</span><br><span class="line">&#123;</span><br><span class="line">    Console.WriteLine(ex.ToString());</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> authDN = ldapConn.AuthenticationDN;</span><br><span class="line"><span class="comment">// 如果 ldapConn.AuthenticationDN 的值不為空，就表示有驗證過</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">string</span>.IsNullOrEmpty(authDN))</span><br><span class="line">&#123;</span><br><span class="line">    Console.WriteLine(<span class="string">"驗證錯誤"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">    Console.WriteLine(<span class="string">$"驗證成功:<span class="subst">&#123;authDN&#125;</span>"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h3><p><a href="https://github.com/dsbenghe/Novell.Directory.Ldap.NETStandard" target="_blank" rel="noopener">Novell.Directory.Ldap.NETStandard</a><br><a href="https://nicolas.guelpa.me/blog/2017/02/15/dotnet-core-ldap-authentication.html" target="_blank" rel="noopener">.NET Core LDAP authentication</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;目前 .NET Core 的 System.DirectoryServices.Protocols 還不 Support 非 Windows
      
    
    </summary>
    
    
      <category term=".NET Core" scheme="https://rainmakerho.github.io/tags/NET-Core/"/>
    
      <category term="AD" scheme="https://rainmakerho.github.io/tags/AD/"/>
    
      <category term="Authentication" scheme="https://rainmakerho.github.io/tags/Authentication/"/>
    
      <category term="LDAP" scheme="https://rainmakerho.github.io/tags/LDAP/"/>
    
      <category term="Novell.Directory.Ldap.NETStandard" scheme="https://rainmakerho.github.io/tags/Novell-Directory-Ldap-NETStandard/"/>
    
  </entry>
  
  <entry>
    <title>IE 不支援文化特性。參數名稱：name zh-Hant-TW 是無效的文化特性識別項。</title>
    <link href="https://rainmakerho.github.io/2019/09/17/2019024/"/>
    <id>https://rainmakerho.github.io/2019/09/17/2019024/</id>
    <published>2019-09-17T01:32:14.000Z</published>
    <updated>2019-09-17T01:44:02.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>最近公司的系統使用 Windows 10, IE 時，出現了以下的錯誤訊息<br><strong>不支援文化特性。<br>參數名稱：name<br>zh-Hant-TW 是無效的文化特性識別項。</strong></p><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>在 Windows 8 時，可以參考「<a href="https://dotblogs.com.tw/rainmaker/2012/10/21/78733" target="_blank" rel="noopener">[IE]zh-Hant-TW 是無效的文化特性識別項。</a>」這篇的設定，但是到了 Windows 10 ，設定不知跑到了那裡去了。<br>後來同事 JN 有找到，分享出來，而其他同事也有在詢問，所以就一併分享給大家，如下圖，<br><img src="/2019/09/17/2019024/ie10_lange.jpg" title="win10語言設定"><br>設定-&gt;首頁-&gt;隱私權-&gt;一般 ，在右邊有一個「透過讓網站存取我的語言清單以提供當地相關內容」，將它關閉即可。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;最近公司的系統使用 Windows 10, IE 時，出現了以下的錯誤訊息&lt;br&gt;&lt;strong&gt;不支援文化特性。&lt;br&gt;參數名稱：name
      
    
    </summary>
    
    
      <category term="windows 10" scheme="https://rainmakerho.github.io/tags/windows-10/"/>
    
      <category term="ie" scheme="https://rainmakerho.github.io/tags/ie/"/>
    
      <category term="不支援文化特性" scheme="https://rainmakerho.github.io/tags/%E4%B8%8D%E6%94%AF%E6%8F%B4%E6%96%87%E5%8C%96%E7%89%B9%E6%80%A7/"/>
    
  </entry>
  
  <entry>
    <title>Node JS + IIS Node 效能問題</title>
    <link href="https://rainmakerho.github.io/2019/09/05/2019023/"/>
    <id>https://rainmakerho.github.io/2019/09/05/2019023/</id>
    <published>2019-09-05T05:28:57.000Z</published>
    <updated>2019-09-05T06:40:11.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>我們有一個系統是使用 NodeJS ，同事 Stan 使用 PuppeteerSharp 同時起多個 Chrome 來測試它。<br>結果一下子 IIS Node 就沒反應了，一整個 Hang 住。</p><h3 id="研究"><a href="#研究" class="headerlink" title="研究"></a>研究</h3><p>想說怎麼跑個沒幾次就掛了呢? 結果發現我們有一段程式，在呼叫 API 時，會等 API 回來，再回給 Client 。例如，</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</span><br><span class="line"><span class="keyword">const</span> app = express();</span><br><span class="line"><span class="keyword">const</span> &#123; promisify &#125; = <span class="built_in">require</span>(<span class="string">'util'</span>);</span><br><span class="line"></span><br><span class="line">app.get(<span class="string">'/'</span>, <span class="keyword">async</span> <span class="function"><span class="keyword">function</span>(<span class="params">req, res, next</span>) </span>&#123;</span><br><span class="line"><span class="keyword">await</span> init();</span><br><span class="line">res.send(<span class="string">`1:<span class="subst">$&#123;<span class="keyword">new</span> <span class="built_in">Date</span>()&#125;</span>`</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.listen(<span class="number">3000</span>, <span class="string">'127.0.0.1'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(</span><br><span class="line"><span class="string">`Server running at http://<span class="subst">$&#123;<span class="keyword">this</span>.address().address&#125;</span>:<span class="subst">$&#123;</span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="keyword">this</span>.address().port</span></span></span><br><span class="line"><span class="string"><span class="subst">&#125;</span>/`</span></span><br><span class="line">);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">init</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">new</span> <span class="built_in">Date</span>().toJSON(), <span class="number">1</span>);</span><br><span class="line"><span class="keyword">await</span> sleep(<span class="number">30000</span>);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">new</span> <span class="built_in">Date</span>().toJSON(), <span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sleep</span>(<span class="params">ms</span>) </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="params">resolve</span> =&gt;</span> &#123;</span><br><span class="line">setTimeout(resolve, ms);</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>雖然在 ASP.NET API 中，常常寫 await 之後，再將結果回給 Client 。<br>但透過 iisnode 來執行，壓個幾次，就會導致 iisnode hang 住。<br>因為這部份的程式，我們並不需要等待 api 的結果，所以就先將內容回給 Client 後，再執行 Call API 的 Task。</p><p>調整後，再來測試， iisnode 就不會 hang 住了。<br>但啟用 webscoket 後，再壓個幾次，又發生 iisnode hang 住的問題。<br>試了後久，後來查到 <a href="https://github.com/tjanczuk/iisnode/issues/268" target="_blank" rel="noopener">IIS stops serving content with iisnode and socket.io #268</a> 有提到 Windows 8 有 Http Request 10 個的限制，當啟用了 WebScoket 之後是一直連接著，所以會導致後面的 Request 被 Block 住。 將環境改到 Windows Server 來測試， WebScoket 也沒問題了。<br>如果有 timeout 問題也可以試著調整 maxNamedPipeConnectionRetry 與 namedPipeConnectionRetryDelay 的設定值。<br>備用方案就是使用 Reverse Proxy 的方式，可以參考 <a href="https://dev.to/petereysermans/hosting-a-node-js-application-on-windows-with-iis-as-reverse-proxy-397b" target="_blank" rel="noopener">Hosting a Node.js application on Windows with IIS as reverse proxy</a>。</p><p>使用 iisnode 下，可以儘快 Response 就儘快 Respose。測試 WebScoket 時，請記得使用 Windows Server 來壓測哦!</p><h3 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h3><p><a href="https://github.com/tjanczuk/iisnode/issues/268" target="_blank" rel="noopener">IIS stops serving content with iisnode and socket.io #268</a><br><a href="https://github.com/tjanczuk/iisnode/issues/555" target="_blank" rel="noopener">Does IISnode timeout the Http Request #555</a><br><a href="https://dev.to/petereysermans/hosting-a-node-js-application-on-windows-with-iis-as-reverse-proxy-397b" target="_blank" rel="noopener">Hosting a Node.js application on Windows with IIS as reverse proxy</a><br><a href="https://github.com/tjanczuk/iisnode/issues/558" target="_blank" rel="noopener">Unable to increase the node server timeout beyond 2 minute mark when using IISNode #558</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;我們有一個系統是使用 NodeJS ，同事 Stan 使用 PuppeteerSharp 同時起多個 Chrome 來測試它。&lt;br&gt;結果一
      
    
    </summary>
    
    
      <category term="iisnode" scheme="https://rainmakerho.github.io/tags/iisnode/"/>
    
      <category term="nodejs" scheme="https://rainmakerho.github.io/tags/nodejs/"/>
    
      <category term="windows" scheme="https://rainmakerho.github.io/tags/windows/"/>
    
      <category term="PuppeteerSharp" scheme="https://rainmakerho.github.io/tags/PuppeteerSharp/"/>
    
  </entry>
  
  <entry>
    <title>ASP.NET WebControl.Attributes 無法 Remove 問題</title>
    <link href="https://rainmakerho.github.io/2019/08/24/2019022/"/>
    <id>https://rainmakerho.github.io/2019/08/24/2019022/</id>
    <published>2019-08-24T09:50:18.000Z</published>
    <updated>2019-08-24T10:21:24.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>最近同事詢問一個 Web 控制項 在 Form 上面的 Client Click 是沒問題的，但是把它放到了 DataGrid 之中，它就沒有作用。</p><h3 id="研究"><a href="#研究" class="headerlink" title="研究"></a>研究</h3><p>使用 Browser 開發者工具(F12)，去查看，並在 JS 的 event 中寫入 alert 程式碼，當按下那個 Web 控制項 時，程式並沒有順利跑進那個 click 的 event handler 之中。<br>於是往上查看發現，因為在 TR 有一個 onmousedown 事件處理，裡面寫著 onmousedown = “javascript:this.click()”，就把 Click 事件給吃掉了，難怪沒有進去那個 click event handler 之中。 透過 F12 把那個 onmousedown 屬性設定移除， Web 控制項 就可以順利運作了。</p><p>即然找到了問題，再來當然是將那個 onmousedown 屬性從 DataGrid 中的設定移除它，本來想再詢問為何當初會有這樣子的程式碼呢? 它的用意是什麼呢? 當初寫的人已不知去向了。<br>建議從元件或是那支程式去調整，因為有將那個 Web 控制項放進去的只有 2 支程式，而開發團隊也不敢去調整元件，所以就往改那 2 支程式去做。</p><p>所以就建議同事在 PreRender 時，將那個 DataGridItem.Attributes 裡面的 onmousedown 移除。<br>但同事反應不管寫在那裡都移不掉，我連進去看，程式有順利呼叫 Attributes.Remove(“onmousedown”)，但那個 onmousedown 卻還 Render 出去。</p><figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">'v10_tbA10_dgMaster 是 datagrid</span></span><br><span class="line"><span class="keyword">Protected</span> <span class="keyword">Sub</span> Page_PreRender(<span class="keyword">ByVal</span> sender <span class="keyword">As</span> <span class="built_in">Object</span>, <span class="keyword">ByVal</span> e <span class="keyword">As</span> System.EventArgs) <span class="keyword">Handles</span> <span class="keyword">Me</span>.PreRender</span><br><span class="line">  <span class="keyword">Dim</span> item <span class="keyword">As</span> DataGridItem</span><br><span class="line">  <span class="keyword">For</span> <span class="keyword">Each</span> item <span class="keyword">In</span> <span class="keyword">Me</span>.v10_tbA10_dgMaster.Items</span><br><span class="line">      item.Attributes.Remove(<span class="string">"onmousedown"</span>)</span><br><span class="line">  <span class="keyword">Next</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure><p>想說不可能呀!<br>於是將那些 Key 值印出來才發現，那個「onmousedown 」後面多了一個<strong>空白</strong>，難怪怎麼移都移不掉。<br>後來將程式改成如下，就順利解掉了。</p><figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">'v10_tbA10_dgMaster 是 datagrid</span></span><br><span class="line"><span class="keyword">Protected</span> <span class="keyword">Sub</span> Page_PreRender(<span class="keyword">ByVal</span> sender <span class="keyword">As</span> <span class="built_in">Object</span>, <span class="keyword">ByVal</span> e <span class="keyword">As</span> System.EventArgs) <span class="keyword">Handles</span> <span class="keyword">Me</span>.PreRender</span><br><span class="line">  <span class="keyword">Dim</span> item <span class="keyword">As</span> DataGridItem</span><br><span class="line">  <span class="keyword">For</span> <span class="keyword">Each</span> item <span class="keyword">In</span> <span class="keyword">Me</span>.v10_tbA10_dgMaster.Items</span><br><span class="line">      item.Attributes.Remove(<span class="string">"onmousedown "</span>)</span><br><span class="line">  <span class="keyword">Next</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure><p>程式呀~~ 真的是什麼都有可能發生 Q_Q<br>希望大家在解問題時，多些細心、耐心，一起努力 :)</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;最近同事詢問一個 Web 控制項 在 Form 上面的 Client Click 是沒問題的，但是把它放到了 DataGrid 之中，它就沒
      
    
    </summary>
    
    
      <category term="ASP.NET" scheme="https://rainmakerho.github.io/tags/ASP-NET/"/>
    
      <category term="程式什麼都有可能發生" scheme="https://rainmakerho.github.io/tags/%E7%A8%8B%E5%BC%8F%E4%BB%80%E9%BA%BC%E9%83%BD%E6%9C%89%E5%8F%AF%E8%83%BD%E7%99%BC%E7%94%9F/"/>
    
      <category term="DataGridItem" scheme="https://rainmakerho.github.io/tags/DataGridItem/"/>
    
      <category term="WebControl.Attributes" scheme="https://rainmakerho.github.io/tags/WebControl-Attributes/"/>
    
  </entry>
  
  <entry>
    <title>Visual Studio 2017 WebTest for aspx postback</title>
    <link href="https://rainmakerho.github.io/2019/08/24/2019021/"/>
    <id>https://rainmakerho.github.io/2019/08/24/2019021/</id>
    <published>2019-08-24T05:28:53.000Z</published>
    <updated>2019-08-24T06:05:35.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>有朋友詢問使用 Visual Studio 2017 使用 WebTest 錄 ASPX 程式時，遇到了 postback 就會噴錯。<br>於是上網找個 aspx 的網站來試錄一下，結果發現錄完後，在很多 postback 的地方的確會錯誤。如下圖，<br><img src="/2019/08/24/2019021/001.png" title="WebTest Error"></p><h3 id="研究與解法"><a href="#研究與解法" class="headerlink" title="研究與解法"></a>研究與解法</h3><p>仔細看錯的地方還蠻奇怪的(上圖)，postback，應該要走 POST ，結果那個 url 卻是 GET。<br>再展開那個 GET 有一個 Dependent Requests 的 Url ，它是 POST，看起來那個才是我們需要的。如下圖，<br><img src="/2019/08/24/2019021/002.png" title="Dependent Requests"><br>檢查下一個 GET URL 的 Dependent Requests 中的 Url 也是 POST，應該也是我們需要的。<br>即然它才是我們需要的，所以我們可以將它們從 Dependent Requests 目錄中，移到最上層，然後再將那 2 個 GET 的 URL 刪除。<br><img src="/2019/08/24/2019021/003.png" title="Move POST And Delete GET"></p><p>所以從開頭 GET 到 2 個 POST 後，再測試一次，就可以發現，最後的結果是我們所需要的哦! 如下，<br><img src="/2019/08/24/2019021/004.png" title="Test OK"></p><h3 id="結論"><a href="#結論" class="headerlink" title="結論"></a>結論</h3><p>筆者試過 Visual Studio 2017/2019 都會有這樣子的狀況，所以在使用上，如果有遇到一樣的問題，可以試著這樣子調整看看哦!</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;有朋友詢問使用 Visual Studio 2017 使用 WebTest 錄 ASPX 程式時，遇到了 postback 就會噴錯。&lt;br
      
    
    </summary>
    
    
      <category term="VS2017" scheme="https://rainmakerho.github.io/tags/VS2017/"/>
    
      <category term="VS2019" scheme="https://rainmakerho.github.io/tags/VS2019/"/>
    
      <category term="WebTest" scheme="https://rainmakerho.github.io/tags/WebTest/"/>
    
      <category term="ASPX" scheme="https://rainmakerho.github.io/tags/ASPX/"/>
    
      <category term="Postback" scheme="https://rainmakerho.github.io/tags/Postback/"/>
    
  </entry>
  
</feed>
