<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>亂馬客 - 技術得來速</title>
  <icon>https://www.gravatar.com/avatar/cd3aed042ccd7a5a5d9956b0bc07dc81</icon>
  <subtitle>技術得來速</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://rainmakerho.github.io/"/>
  <updated>2018-02-01T05:48:31.390Z</updated>
  <id>https://rainmakerho.github.io/</id>
  
  <author>
    <name>亂馬客</name>
    <email>rainmaker_ho@gss.com.tw</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>The bot&#39;s MSA appId or password is incorrect.</title>
    <link href="https://rainmakerho.github.io/2018/02/01/2018007/"/>
    <id>https://rainmakerho.github.io/2018/02/01/2018007/</id>
    <published>2018-02-01T03:52:05.000Z</published>
    <updated>2018-02-01T05:48:31.390Z</updated>
    
    <content type="html"><![CDATA[<p>今天使用 botframework-emulator 在 local 測試 bot 時， botframework-emulator 居然出現 The bot’s MSA appId or password is incorrect. 的錯誤，如下圖，<br><img src="/2018/02/01/2018007/2018007001.png" alt="MSA_appId/password is incorrect" title="MSA_appId/password is incorrect"><br>我輸入的 App Id 跟 Password 明明就是從 web.config 中 Copy 出來的呀~ 之前都 Run 的好好的，現在居然噴錯。  </p><p>於是使用 Fiddler 來錄一下看看是什麼狀況，如下圖，<br><img src="/2018/02/01/2018007/2018007002.png" alt="Fiddler" title="Fiddler"> </p><p>從上圖可以發現， botframework-emulator 會依 bot 的 MSA appId 及 password 到 <a href="https://login.microsoftonline.com/botframework.com/oauth2/v2.0/token" target="_blank" rel="external">https://login.microsoftonline.com/botframework.com/oauth2/v2.0/token</a> 去取回 token ，然後再放在 Request 的 Header 之中，做為 Authorization token。但卻 bot 卻判斷它是無效的，所以就回 401 。 </p><p>查看 botframework-emulator 在 GitHub 上的異動記錄 <a href="https://github.com/Microsoft/BotFramework-Emulator/commit/714b6d4597653c13cb30941416e512e4ecf96972#diff-43482499e76e08e445f4ba0e0b580401" target="_blank" rel="external">Support Bot Framework authentication v3.1 (#256)</a> 有將取 token 的 endpoint 從 common/oauth2/v2.0/token 改到了 botframework.com/oauth2/v2.0/token 。<br><img src="/2018/02/01/2018007/2018007003.png" alt="src/server/settings.ts" title="src/server/settings.ts"> </p><p>似乎是 token 的問題，而目前我們 bot 使用的 BotBuilder 是 3.8 版，而它的 System.IdentityModel.Tokens.Jwt 使用的是 v4.0403061554 ，如下，<br><img src="/2018/02/01/2018007/2018007004.png" alt="System.IdentityModel.Tokens.Jwt" title="System.IdentityModel.Tokens.Jwt"> </p><p>所以筆者試著將 System.IdentityModel.Tokens.Jwt 更新到 v5.1.4 ，重建置專案，再測試一次就沒問題了哦! 或者是您連同 BotBuilder 升級到最新的版本也是可以的哦! </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今天使用 botframework-emulator 在 local 測試 bot 時， botframework-emulator 居然出現 The bot’s MSA appId or password is incorrect. 的錯誤，如下圖，&lt;br&gt;&lt;img sr
      
    
    </summary>
    
    
      <category term="botframework" scheme="https://rainmakerho.github.io/tags/botframework/"/>
    
      <category term="MSA appId or password is incorrect" scheme="https://rainmakerho.github.io/tags/MSA-appId-or-password-is-incorrect/"/>
    
      <category term="c#" scheme="https://rainmakerho.github.io/tags/c/"/>
    
      <category term="botframework-emulator" scheme="https://rainmakerho.github.io/tags/botframework-emulator/"/>
    
  </entry>
  
  <entry>
    <title>使用 Botframework 的 Bot 如何 Debug 到 BotBuilder Source ?</title>
    <link href="https://rainmakerho.github.io/2018/02/01/2018006/"/>
    <id>https://rainmakerho.github.io/2018/02/01/2018006/</id>
    <published>2018-02-01T01:47:18.000Z</published>
    <updated>2018-02-01T02:27:58.697Z</updated>
    
    <content type="html"><![CDATA[<p>我們透過 VS.NET 建立出 Bot 後，預設 Nuget 中安裝 BotBuilder 相關的套件，如果我們從 GitHub 將 <a href="https://github.com/Microsoft/BotBuilder" target="_blank" rel="external">Microsoft/BotBuilder</a> 到方案之中，我們要如何 Debug 進到 BotBuilder 的 Source Code 之中呢? </p><ol><li>移除 Nuget 中的 Microsoft.Bot.Builder 套件 </li><li>在方案中加入以下的專案(在 BotBuilder\CSharp\Library 目錄中)，並加入參考<ul><li>Microsoft.Bot.Builder (Microsoft.Bot.Builder.csproj)</li><li>Microsoft.Bot.Builder.Autofac (Microsoft.Bot.Builder.Autofac.csproj)</li><li>Microsoft.Bot.Connector.NetFramework (Microsoft.Bot.Connector.NetFramework.csproj)</li><li>Microsoft.Bot.Connector.Shared (Microsoft.Bot.Connector.Shared.shproj)</li></ul></li></ol><img src="/2018/02/01/2018006/2018006001.png" alt="加入Microsoft.Bot.Builder相關專案" title="加入Microsoft.Bot.Builder相關專案">  <p>如果重建成功就可以順利的 Debug 進去了哦! 如下圖所示，<br><img src="/2018/02/01/2018006/2018006002.png" alt="Debug到DialogModule" title="Debug到DialogModule"> </p><h4 id="參考資訊"><a href="#參考資訊" class="headerlink" title="參考資訊"></a>參考資訊</h4><p><a href="https://stackoverflow.com/questions/43971422/how-to-debug-into-microsoft-bot-builder-c-sharp-project-source-code" target="_blank" rel="external">how to debug into Microsoft.Bot.Builder C# project source code?</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;我們透過 VS.NET 建立出 Bot 後，預設 Nuget 中安裝 BotBuilder 相關的套件，如果我們從 GitHub 將 &lt;a href=&quot;https://github.com/Microsoft/BotBuilder&quot; target=&quot;_blank&quot; rel=
      
    
    </summary>
    
    
      <category term="botframework" scheme="https://rainmakerho.github.io/tags/botframework/"/>
    
      <category term="C#" scheme="https://rainmakerho.github.io/tags/C/"/>
    
      <category term="BotBuilder" scheme="https://rainmakerho.github.io/tags/BotBuilder/"/>
    
      <category term="debug" scheme="https://rainmakerho.github.io/tags/debug/"/>
    
  </entry>
  
  <entry>
    <title>Call luis.ai predictions api 的 3 種方式</title>
    <link href="https://rainmakerho.github.io/2018/01/29/2018005/"/>
    <id>https://rainmakerho.github.io/2018/01/29/2018005/</id>
    <published>2018-01-29T06:19:50.000Z</published>
    <updated>2018-01-29T10:03:51.265Z</updated>
    
    <content type="html"><![CDATA[<p>在 <a href="https://westus.dev.cognitive.microsoft.com/docs/services/5819c76f40a6350ce09de1ac/operations/5819c77140a63516d81aee78" target="_blank" rel="external">LUIS predictions GET api</a> 中有各語言的使用範例，以C#來看，使用非常方便，只要設定一些參數就可以取回 LUIS 解析的資料，本文將跟大家分享 Call 正式 api 的 GET/POST 方式，及 Call 測試 api 的方式，共 3 透方式。</p><ul><li><p>call 正式 api 使用 GET，如下， </p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">async</span> Task&lt;<span class="keyword">string</span>&gt; <span class="title">GetLuisResult</span>(<span class="params"><span class="keyword">string</span> reqString</span>)</span></div><div class="line"><span class="function"></span>&#123;</div><div class="line"><span class="comment">//最多是 500 個 ascii chars，中文我先取 230 個</span></div><div class="line"><span class="keyword">if</span> (reqString.Length &gt; <span class="number">230</span>)</div><div class="line">&#123;</div><div class="line">reqString = reqString.Substring(<span class="number">0</span>, <span class="number">230</span>);</div><div class="line">&#125;</div><div class="line"><span class="keyword">var</span> client = <span class="keyword">new</span> HttpClient();</div><div class="line"><span class="keyword">var</span> queryString = HttpUtility.ParseQueryString(<span class="keyword">string</span>.Empty);</div><div class="line"><span class="keyword">const</span> <span class="keyword">string</span> appId = <span class="string">"你的appid"</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">string</span> subscriptionKey = <span class="string">"你的訂閱key"</span>;</div><div class="line"><span class="comment">// Request headers</span></div><div class="line">client.DefaultRequestHeaders.Add(<span class="string">"Ocp-Apim-Subscription-Key"</span>, subscriptionKey);</div><div class="line"></div><div class="line"><span class="comment">// Request parameters</span></div><div class="line"><span class="comment">//如果回傳的內容中需要各 Intent 的話，請將 verbose 設定為 true </span></div><div class="line">queryString[<span class="string">"verbose"</span>] = <span class="string">"true"</span>;</div><div class="line"><span class="comment">//queryString["spellCheck"] = "&#123;boolean&#125;";</span></div><div class="line"><span class="comment">//queryString["staging"] = "&#123;boolean&#125;";</span></div><div class="line"><span class="comment">//queryString["bing-spell-check-subscription-key"] = "bing key";</span></div><div class="line"><span class="comment">//queryString["log"] = "&#123;boolean&#125;";</span></div><div class="line"></div><div class="line"><span class="keyword">var</span> uri = <span class="string">$"https://eastasia.api.cognitive.microsoft.com/luis/v2.0/apps/<span class="subst">&#123;appId&#125;</span>?q="</span> + HttpUtility.UrlEncode(reqString)+ <span class="string">"&amp;"</span> + queryString;;</div><div class="line"><span class="keyword">var</span> response = <span class="keyword">await</span> client.GetAsync(uri);</div><div class="line"><span class="keyword">var</span> result = <span class="keyword">await</span> response.Content.ReadAsStringAsync();</div><div class="line"><span class="keyword">return</span> result;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li><li><p>call 正式 api 使用 POST (筆者試了老半天都試不出來，後來詢問 MS Herman 大大才知道，POST 的 body 前後要加 雙引號)，如下， </p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">async</span> Task&lt;<span class="keyword">string</span>&gt; <span class="title">GetLuisResultPost</span>(<span class="params"><span class="keyword">string</span> reqString</span>)</span></div><div class="line"><span class="function"></span>&#123;</div><div class="line"><span class="comment">//最多是 500 個 ascii chars，中文我先取 230 個</span></div><div class="line"><span class="keyword">if</span> (reqString.Length &gt; <span class="number">230</span>)</div><div class="line">&#123;</div><div class="line">reqString = reqString.Substring(<span class="number">0</span>, <span class="number">230</span>);</div><div class="line">&#125;</div><div class="line"><span class="keyword">var</span> client = <span class="keyword">new</span> HttpClient();</div><div class="line"><span class="keyword">var</span> queryString = HttpUtility.ParseQueryString(<span class="keyword">string</span>.Empty);</div><div class="line"><span class="keyword">const</span> <span class="keyword">string</span> appId = <span class="string">"你的appid"</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">string</span> subscriptionKey = <span class="string">"你的訂閱key"</span>;</div><div class="line"><span class="comment">// Request headers</span></div><div class="line">client.DefaultRequestHeaders.Add(<span class="string">"Ocp-Apim-Subscription-Key"</span>, subscriptionKey);</div><div class="line"> </div><div class="line"><span class="comment">// Request parameters</span></div><div class="line"><span class="comment">//如果回傳的內容中需要各 Intent 的話，請將 verbose 設定為 true </span></div><div class="line">queryString[<span class="string">"verbose"</span>] = <span class="string">"true"</span>;</div><div class="line"><span class="comment">//queryString["spellCheck"] = "&#123;boolean&#125;";</span></div><div class="line"><span class="comment">//queryString["staging"] = "&#123;boolean&#125;";</span></div><div class="line"><span class="comment">//queryString["bing-spell-check-subscription-key"] = "bing key";</span></div><div class="line"><span class="comment">//queryString["log"] = "&#123;boolean&#125;";</span></div><div class="line"><span class="keyword">var</span> uri = <span class="string">$"https://westus.api.cognitive.microsoft.com/luis/v2.0/apps/<span class="subst">&#123;appId&#125;</span>?"</span> + queryString;</div><div class="line"></div><div class="line">HttpResponseMessage response;</div><div class="line"></div><div class="line"><span class="comment">// Request body，前後要加上 雙引號 哦! </span></div><div class="line"><span class="keyword">byte</span>[] byteData = Encoding.UTF8.GetBytes(<span class="string">"\""</span> + reqString + <span class="string">"\""</span>);</div><div class="line"><span class="keyword">using</span> (<span class="keyword">var</span> content = <span class="keyword">new</span> ByteArrayContent(byteData))</div><div class="line">&#123;</div><div class="line">response = <span class="keyword">await</span> client.PostAsync(uri, content);</div><div class="line"><span class="keyword">var</span> result = <span class="keyword">await</span> response.Content.ReadAsStringAsync();</div><div class="line"><span class="keyword">return</span> result;</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li><li><p>註: 在 LUIS 設定好，按下 Train 後，請記得要到 PUBLISH , 按下 「Publish to production slot」，這樣才會部到各區域去哦!  </p></li></ul><p>知道如何 Call Production 的 api 之後，如果我們想要像 <a href="https://rainmakerho.github.io/2018/01/25/2018003/">線上客服 + BOT 之路</a> 一文中，先用個 Excel 檔去試看看的話(目前 luis.ai 上 support 上傳 json , 整批測試)，一試下去免費的 quota 應該一下子就沒了吧! 如下所示，<br><img src="/2018/01/29/2018005/2018005001.png" alt="超過免費可呼叫的Quota" title="超過免費可呼叫的Quota">  </p><p>那怎麼辦呢? </p><ul><li><p>1.到 Azure 那買個服務，然後再將訂閱的 Key 加到 luis.ai 之中，如下， </p><img src="/2018/01/29/2018005/2018005002.png" alt="從Azure買付費的方案" title="從Azure買付費的方案">  </li><li><p>2.使用 luis.ai 測試的 api ，您可以在測試時，錄一下 network ，如下，  </p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">async</span> Task&lt;<span class="keyword">string</span>&gt; <span class="title">GetLuisResultTest</span>(<span class="params"><span class="keyword">string</span> reqString</span>)</span></div><div class="line"><span class="function"></span>&#123;</div><div class="line"><span class="comment">//最多是 500 個 ascii chars，中文我先取 230 個</span></div><div class="line"><span class="keyword">if</span> (reqString.Length &gt; <span class="number">230</span>)</div><div class="line">&#123;</div><div class="line">reqString = reqString.Substring(<span class="number">0</span>, <span class="number">230</span>);</div><div class="line">&#125;</div><div class="line"><span class="keyword">var</span> client = <span class="keyword">new</span> HttpClient();</div><div class="line"><span class="keyword">var</span> queryString = HttpUtility.ParseQueryString(<span class="keyword">string</span>.Empty);</div><div class="line"><span class="keyword">const</span> <span class="keyword">string</span> appId = <span class="string">"你的appid"</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">string</span> subscriptionKey = <span class="string">"你的免費訂閱key"</span>;</div><div class="line"><span class="comment">// Request headers</span></div><div class="line">client.DefaultRequestHeaders.Add(<span class="string">"Ocp-Apim-Subscription-Key"</span>, subscriptionKey);</div><div class="line"><span class="keyword">var</span> uri = <span class="string">$"https://westus.api.cognitive.microsoft.com/luis/webapi/v2.0/apps/<span class="subst">&#123;appId&#125;</span>/versions/0.1/predict?example="</span> + HttpUtility.UrlEncode(reqString);</div><div class="line"><span class="keyword">var</span> response = <span class="keyword">await</span> client.GetAsync(uri);</div><div class="line"><span class="keyword">var</span> result = <span class="keyword">await</span> response.Content.ReadAsStringAsync();</div><div class="line"><span class="keyword">return</span> result;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li></ul><p>這個測試的 api 跟正式機的差別除了內容不太相同，它取出的 Entity 中間會有空白，所以再使用上需要將空白清掉哦! 因為它是測試用的，所以在整批 Call 的時候，有時會 block 一段時間，我的做法是如果出錯就停個 15 秒，讓它再重試一次，後來就可以正常再 Call 了哦!</p><p>正式 api 的結果如下 ( verbose 參數為 true, 內容才會有 intents )，<br><figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  <span class="attr">"query"</span>: <span class="string">"下載下來可以用了，可是什麼是網址識別"</span>,</div><div class="line">  <span class="attr">"topScoringIntent"</span>: &#123;</div><div class="line">    <span class="attr">"intent"</span>: <span class="string">"FAQ"</span>,</div><div class="line">    <span class="attr">"score"</span>: <span class="number">1.0</span></div><div class="line">  &#125;,</div><div class="line">  <span class="attr">"intents"</span>: [</div><div class="line">    &#123;</div><div class="line">      <span class="attr">"intent"</span>: <span class="string">"FAQ"</span>,</div><div class="line">      <span class="attr">"score"</span>: <span class="number">1.0</span></div><div class="line">    &#125;,</div><div class="line">    &#123;</div><div class="line">      <span class="attr">"intent"</span>: <span class="string">"None"</span>,</div><div class="line">      <span class="attr">"score"</span>: <span class="number">0.05330094</span></div><div class="line">    &#125;</div><div class="line">  ],</div><div class="line">  <span class="attr">"entities"</span>: [</div><div class="line">    &#123;</div><div class="line">      <span class="attr">"entity"</span>: <span class="string">"網址"</span>,</div><div class="line">      <span class="attr">"type"</span>: <span class="string">"Keyword"</span>,</div><div class="line">      <span class="attr">"startIndex"</span>: <span class="number">14</span>,</div><div class="line">      <span class="attr">"endIndex"</span>: <span class="number">15</span>,</div><div class="line">      <span class="attr">"score"</span>: <span class="number">0.9081365</span></div><div class="line">    &#125;,</div><div class="line">    &#123;</div><div class="line">      <span class="attr">"entity"</span>: <span class="string">"識別"</span>,</div><div class="line">      <span class="attr">"type"</span>: <span class="string">"Keyword"</span>,</div><div class="line">      <span class="attr">"startIndex"</span>: <span class="number">16</span>,</div><div class="line">      <span class="attr">"endIndex"</span>: <span class="number">17</span>,</div><div class="line">      <span class="attr">"score"</span>: <span class="number">0.9102927</span></div><div class="line">    &#125;,</div><div class="line">    &#123;</div><div class="line">      <span class="attr">"entity"</span>: <span class="string">"下載"</span>,</div><div class="line">      <span class="attr">"type"</span>: <span class="string">"Action"</span>,</div><div class="line">      <span class="attr">"startIndex"</span>: <span class="number">0</span>,</div><div class="line">      <span class="attr">"endIndex"</span>: <span class="number">1</span>,</div><div class="line">      <span class="attr">"score"</span>: <span class="number">0.9999258</span></div><div class="line">    &#125;</div><div class="line">  ]</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>測試 api 的結果如下( entityPredictions 中的 phrase 字之間會有空白哦!!! )， </p><pre><code class="json">{    <span class="attr">"id"</span>: <span class="literal">null</span>,    <span class="attr">"text"</span>: <span class="string">"下載下來可以用了，可是什麼是網址識別"</span>,    <span class="attr">"alteredText"</span>: <span class="string">"下載下來可以用了，可是什麼是網址識別"</span>,    <span class="attr">"tokenizedText"</span>: [        <span class="string">"下"</span>    ],    <span class="attr">"intentPredictions"</span>: [        {            <span class="attr">"id"</span>: <span class="string">"9e70ed0a-561c-45f4-b8a4-2439de42acb1"</span>,            <span class="attr">"name"</span>: <span class="string">"FAQ"</span>,            <span class="attr">"score"</span>: <span class="number">1.0</span>        },        {            <span class="attr">"id"</span>: <span class="string">"8d898fa2-667f-471d-b87f-309011627b5d"</span>,            <span class="attr">"name"</span>: <span class="string">"None"</span>,            <span class="attr">"score"</span>: <span class="number">0.05</span>        }    ],    <span class="attr">"entityPredictions"</span>: [        {            <span class="attr">"id"</span>: <span class="string">"cb403a63-347c-448c-9b08-3e48d6ac0c61"</span>,            <span class="attr">"entityName"</span>: <span class="string">"Keyword"</span>,            <span class="attr">"startTokenIndex"</span>: <span class="number">14</span>,            <span class="attr">"endTokenIndex"</span>: <span class="number">15</span>,            <span class="attr">"phrase"</span>: <span class="string">"網 址"</span>,            <span class="attr">"entityType"</span>: <span class="number">1</span>        },        {            <span class="attr">"id"</span>: <span class="string">"cb403a63-347c-448c-9b08-3e48d6ac0c61"</span>,            <span class="attr">"entityName"</span>: <span class="string">"Keyword"</span>,            <span class="attr">"startTokenIndex"</span>: <span class="number">16</span>,            <span class="attr">"endTokenIndex"</span>: <span class="number">17</span>,            <span class="attr">"phrase"</span>: <span class="string">"識 別"</span>,            <span class="attr">"entityType"</span>: <span class="number">1</span>        },        {            <span class="attr">"id"</span>: <span class="string">"1771cbab-fb7b-4a83-b46d-4c085ba88341"</span>,            <span class="attr">"entityName"</span>: <span class="string">"Action"</span>,            <span class="attr">"startTokenIndex"</span>: <span class="number">0</span>,            <span class="attr">"endTokenIndex"</span>: <span class="number">1</span>,            <span class="attr">"phrase"</span>: <span class="string">"下 載"</span>,            <span class="attr">"entityType"</span>: <span class="number">1</span>        }    ],    <span class="attr">"tokenMetadata"</span>: <span class="literal">null</span>}</code></pre><p>預設 call 正式 api 時，會 log 查詢的資料，最近幾筆資料可以從 「 Review endpoint utterances 」 看到，如下<br><img src="/2018/01/29/2018005/2018005003.png" alt="Review endpoint utterances" title="Review endpoint utterances">  </p><p>那如果我需要的是全部的 Log 呢? 可以到「 My apps 」，在那個 app 右邊的 … ，選取「 Export Endpoint Log 」，就可以了哦，如下，<br><img src="/2018/01/29/2018005/2018005004.png" alt="Export Endpoint Logs" title="Export Endpoint Logs"> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在 &lt;a href=&quot;https://westus.dev.cognitive.microsoft.com/docs/services/5819c76f40a6350ce09de1ac/operations/5819c77140a63516d81aee78&quot; target=
      
    
    </summary>
    
    
      <category term="luis.ai" scheme="https://rainmakerho.github.io/tags/luis-ai/"/>
    
      <category term="predictions api" scheme="https://rainmakerho.github.io/tags/predictions-api/"/>
    
  </entry>
  
  <entry>
    <title>客製 BotDataStore ，將 Bot State 資料存到 SQL Server之中</title>
    <link href="https://rainmakerho.github.io/2018/01/26/2018004/"/>
    <id>https://rainmakerho.github.io/2018/01/26/2018004/</id>
    <published>2018-01-26T05:11:04.000Z</published>
    <updated>2018-01-26T06:34:50.534Z</updated>
    
    <content type="html"><![CDATA[<p>不知大家在使用 botframework-emulator 測試 chatbot 時，有沒有發現，對話一開始時，會先將 Bot State 取出來(BotConversationData, BotPrivateConversationData 及 BotUserData)，而在對話後，則將這些資料存回去，如下圖所示，<br><img src="/2018/01/26/2018004/2018004001.png" alt="對話中BotState的處理順序" title="對話中BotState的處理順序"><br>那大家會好奇那些 Bot State 都存到那裡去了呢?<br>預設的 BotDataStore 是使用 <a href="https://github.com/Microsoft/BotBuilder/blob/master/CSharp/Library/Microsoft.Bot.Builder/ConnectorEx/BotData.cs#L197" target="_blank" rel="external">ConnectorStore</a> ，它依 StateClient.BotState 去儲存，而 url 就是 {serverUrl}/v3/botstate/{channelId}/conversations/{conversationId} ， {serverUrl}/v3/botstate/{channelId}/conversations/{conversationId}/users/{userId} 及 {serverUrl}/v3/botstate/{channelId}/users/{userId} ，詳細可以參考 <a href="https://github.com/Microsoft/BotBuilder/blob/master/CSharp/Library/Microsoft.Bot.Connector.Shared/StateAPI/BotState.cs" target="_blank" rel="external">BotState.cs</a> ，serverUrl 是 activity.ServiceUrl ，詳細可以參考 <a href="https://github.com/Microsoft/BotBuilder/blob/master/CSharp/Library/Microsoft.Bot.Connector.Shared/StateAPI/StateClient.cs" target="_blank" rel="external">StateClient.cs</a>。 </p><p>在 <a href="https://blog.botframework.com/2017/07/26/saving-state-sql-dotnet/" target="_blank" rel="external">Saving State data in SQL with .NET</a> 這篇之中，說明如何實作 IBotDataStore<botdata> 然後將 Bot State 存到 SQL Server 之中。<br>客製的 BotDataStore 寫好了之後，記得要在 global.asax 中去設定讓 autofac 使用我們的 SqlBotDataStore，如下， </botdata></p><pre><code class="csharp"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">Application_Start</span>(<span class="params"></span>)</span><span class="function"></span>{    Conversation.UpdateContainer(builder =&gt;    {        <span class="keyword">var</span> store = <span class="keyword">new</span> SqlBotDataStore(<span class="string">"BotDataContextConnectionString"</span>);        builder.Register(c =&gt; <span class="keyword">new</span> CachingBotDataStore(store              , CachingBotDataStoreConsistencyPolicy.LastWriteWins))            .As&lt;IBotDataStore&lt;BotData&gt;&gt;()            .AsSelf()            .InstancePerLifetimeScope();    });    GlobalConfiguration.Configure(WebApiConfig.Register);}</code></pre><p>這樣在SQL中就可以看到 Bot State 存到了 SQL DB 之中，如下，<br><img src="/2018/01/26/2018004/2018004002.png" alt="StateInSQLDB" title="StateInSQLDB"> </p><p>另外，像我們之前寫的 Local Direct Line Server <a href="https://rainmakerhoblog.wordpress.com/2017/08/30/20170830/" target="_blank" rel="external">使用 Microsoft Bot Framework 地端的 WebChat 機器人(企業內)</a>，我們會將 Channel 的資料放在 ChannelData 之中，而在存 State 時， ChannelId 要取自 activity 的 channelData ，則可以改自 ConnectorStore ，加入讀取 activity ，如下，</p><pre><code class="csharp"><span class="comment">//modify from ConnectorStore</span>public class LDLDataStore : IBotDataStore&lt;BotData&gt;{    <span class="keyword">private</span> <span class="keyword">readonly</span> IStateClient stateClient;    <span class="keyword">private</span> <span class="keyword">readonly</span> IActivity activity;    <span class="function"><span class="keyword">public</span> <span class="title">LDLDataStore</span>(<span class="params">IStateClient stateClient, IActivity activity</span>)</span><span class="function">    </span>{        SetField.NotNull(<span class="keyword">out</span> <span class="keyword">this</span>.stateClient, <span class="keyword">nameof</span>(stateClient), stateClient);        SetField.NotNull(<span class="keyword">out</span> <span class="keyword">this</span>.activity, <span class="keyword">nameof</span>(activity), activity);    }    <span class="keyword">async</span> Task&lt;BotData&gt; IBotDataStore&lt;BotData&gt;.LoadAsync(IAddress key, BotStoreType botStoreType, CancellationToken cancellationToken)    {        <span class="keyword">var</span> channelId = GetChannelId(key);        BotData botData;        <span class="keyword">switch</span> (botStoreType)        {            <span class="keyword">case</span> BotStoreType.BotConversationData:                botData = <span class="keyword">await</span> stateClient.BotState.GetConversationDataAsync(channelId, key.ConversationId, cancellationToken);                <span class="keyword">break</span>;            <span class="keyword">case</span> BotStoreType.BotUserData:                botData = <span class="keyword">await</span> stateClient.BotState.GetUserDataAsync(channelId, key.UserId, cancellationToken);                <span class="keyword">break</span>;            <span class="keyword">case</span> BotStoreType.BotPrivateConversationData:                botData = <span class="keyword">await</span> stateClient.BotState.GetPrivateConversationDataAsync(channelId, key.ConversationId, key.UserId, cancellationToken);                <span class="keyword">break</span>;            <span class="keyword">default</span>:                <span class="keyword">throw</span> <span class="keyword">new</span> ArgumentException(<span class="string">$"<span class="subst">{botStoreType}</span> is not a valid store type!"</span>);        }        <span class="keyword">return</span> botData;    }    <span class="keyword">async</span> Task IBotDataStore&lt;BotData&gt;.SaveAsync(IAddress key, BotStoreType botStoreType, BotData botData, CancellationToken cancellationToken)    {        <span class="keyword">var</span> channelId = GetChannelId(key);        <span class="keyword">switch</span> (botStoreType)        {            <span class="keyword">case</span> BotStoreType.BotConversationData:                <span class="keyword">await</span> stateClient.BotState.SetConversationDataAsync(channelId, key.ConversationId, botData, cancellationToken);                <span class="keyword">break</span>;            <span class="keyword">case</span> BotStoreType.BotUserData:                <span class="keyword">await</span> stateClient.BotState.SetUserDataAsync(channelId, key.UserId, botData, cancellationToken);                <span class="keyword">break</span>;            <span class="keyword">case</span> BotStoreType.BotPrivateConversationData:                <span class="keyword">await</span> stateClient.BotState.SetPrivateConversationDataAsync(channelId, key.ConversationId, key.UserId, botData, cancellationToken);                <span class="keyword">break</span>;            <span class="keyword">default</span>:                <span class="keyword">throw</span> <span class="keyword">new</span> ArgumentException(<span class="string">$"<span class="subst">{botStoreType}</span> is not a valid store type!"</span>);        }    }    Task&lt;<span class="keyword">bool</span>&gt; IBotDataStore&lt;BotData&gt;.FlushAsync(IAddress key, CancellationToken cancellationToken)    {        <span class="comment">// Everything is saved. Flush is no-op</span>        <span class="keyword">return</span> Task.FromResult(<span class="literal">true</span>);    }    <span class="function"><span class="keyword">private</span> <span class="keyword">string</span> <span class="title">GetChannelId</span>(<span class="params">IAddress key</span>)</span><span class="function">    </span>{        <span class="keyword">var</span> channelData = JObject.FromObject(activity.ChannelData);        <span class="keyword">string</span> channelId = channelData.SelectToken(<span class="string">"channelId"</span>)?.ToString();        <span class="keyword">if</span> (<span class="keyword">string</span>.IsNullOrWhiteSpace(channelId))        {            channelId = key.ChannelId;        }        <span class="keyword">return</span> channelId;    }}</code></pre><p>而在 global.asax 之中，我們的 LDLDataStore 需要多傳入 Activity ，如下， </p><pre><code class="csharp"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">Application_Start</span>(<span class="params"></span>)</span><span class="function"></span>{    Conversation.UpdateContainer(builder =&gt;    {        builder.Register(c =&gt; <span class="keyword">new</span> CachingBotDataStore(<span class="keyword">new</span> LDLDataStore(c.Resolve&lt;IStateClient&gt;(), c.Resolve&lt;IActivity&gt;())            , CachingBotDataStoreConsistencyPolicy.LastWriteWins))            .As&lt;IBotDataStore&lt;BotData&gt;&gt;()            .AsSelf()            .InstancePerLifetimeScope();     });     GlobalConfiguration.Configure(WebApiConfig.Register);}</code></pre><p>知道如何在 global.asax 中置換 BotDataStore ，只要實作 IBotDataStore<botdata> 便可以輕易的更換 BotDataStore 哦! </botdata></p><h3 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h3><p><a href="https://blog.botframework.com/2017/07/26/saving-state-sql-dotnet/" target="_blank" rel="external">Saving State data in SQL with .NET</a><br><a href="https://docs.microsoft.com/en-us/bot-framework/dotnet/bot-builder-dotnet-state#Botstatemethods" target="_blank" rel="external">Manage state data</a> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;不知大家在使用 botframework-emulator 測試 chatbot 時，有沒有發現，對話一開始時，會先將 Bot State 取出來(BotConversationData, BotPrivateConversationData 及 BotUserData)，
      
    
    </summary>
    
    
      <category term="chatbot" scheme="https://rainmakerho.github.io/tags/chatbot/"/>
    
      <category term="botframework" scheme="https://rainmakerho.github.io/tags/botframework/"/>
    
      <category term="BotDataStore" scheme="https://rainmakerho.github.io/tags/BotDataStore/"/>
    
      <category term="ConnectorStore" scheme="https://rainmakerho.github.io/tags/ConnectorStore/"/>
    
  </entry>
  
  <entry>
    <title>線上客服 + BOT 之路</title>
    <link href="https://rainmakerho.github.io/2018/01/25/2018003/"/>
    <id>https://rainmakerho.github.io/2018/01/25/2018003/</id>
    <published>2018-01-25T08:10:47.000Z</published>
    <updated>2018-01-26T06:38:51.976Z</updated>
    
    <content type="html"><![CDATA[<p>相信很多產品都會有線上客服系統及線上 FAQ 系統，提供給使用者線上詢問或查詢來排除操作系統所發生的問題。<br>如果加上 FAQ Chatbot 可以服務更多的使用者(當線上客服人員下班時)，也可以讓線上客服人員可以服務復雜的問題。<br>我們要如何加上 FAQ Chatbot 呢? 讓我們繼續看下去 … </p><p>FAQ系統是使用 keyword 來 Search 的，如下，<br><img src="/2018/01/25/2018003/2018003001.png" alt="FAQ關鍵字Search" title="FAQ關鍵字Search">   </p><p>但是當使用者輸入「一句話」，FAQ可能就查不出資料了，如下，<br><img src="/2018/01/25/2018003/2018003002.png" alt="FAQ一句話Search" title="FAQ一句話Search"> </p><p>Microsoft 有一個 <a href="https://qnamaker.ai/" target="_blank" rel="external">QnAMaker</a>，剛好符合我們的需求，只要將 Q and A 匯進去，呼叫它的 api 就可以回傳合適的答案。<br>於是我們就將 FAQ 中的資料匯到了 <a href="https://qnamaker.ai/" target="_blank" rel="external">QnAMaker</a> 之中(大約有230個問題)，如下<br><img src="/2018/01/25/2018003/2018003003.png" alt="已匯入資料的QnAMaker" title="已匯入資料的QnAMaker"><br>用中文來測試，有些 OK，有些又不太 OK。 於是有看到「Alternative Phrasing」，目前用的狀況是「中文真的不OK~」。 所以我們就只好改成，依不同的問法分別建立一個 QnA pair 。<br>另外一個狀況就是，目前它是 Preview ，所以會限速 … <a href="https://docs.microsoft.com/en-us/azure/cognitive-services/qnamaker/faqs" target="_blank" rel="external">Current transaction limits are 10 calls per minute and 10,000 calls per month…</a>，所以在 Call 它的 api 時，常常會出現 429 的錯誤。(Error code 429: Rate limit is exceeded. Try again or upgrade to a higher pricing tier with a higher rate limit (if available).)  </p><p>接下來我們就使用 1645 個問題來試看看 QnA Maker ，結果它有回答 336 筆，約 20% 。 </p><ul><li>註: 因為 QnA Maker 目前還是 Preview, 所以持續 Call 時，要停個 500 ms, 如果發生錯誤時，就再等個 10 秒再試一次哦! </li></ul><p>怎麼辦呢? 這樣子 FAQ Bot 不就沒人要用 !!!<br>詢問 MS Tom 哥後，他給我們的建議是用 <a href="https://www.luis.ai/" target="_blank" rel="external">LUIS</a> + <a href="http://www.vitalsesp.com/" target="_blank" rel="external">Vital ESP</a>(FAQ系統)。<br>可以透過 <a href="https://www.luis.ai/" target="_blank" rel="external">LUIS</a> 解析使用者的問題，解析出「意圖」及「關鍵字」，然後再把「關鍵字」送到 FAQ 去查詢，這樣正確率就會比較高。<br>一開始我的想法是一個問題建立一個 Intent (LUIS now allows you to create 500 intents and 100 entities)，但是這樣子蠻不準的。<br>Tom 哥說，<a href="https://www.luis.ai/" target="_blank" rel="external">LUIS</a> 是依句型去解析的，類似的句型不同的 Intent 反而會造成混亂。<br>所以我們就建立一個 FAQ 的 Intent ，然後將 FAQ 系統中 230 個問題都匯進 FAQ Intent 之中，然後我們再進去設定關鍵字(Entity)。<br>不過這樣子設定的人要針對 230 個問題一個一個地去設定 Entity ，也還蠻累的。<br>後來同事 Alex 大大測試，即然 <a href="https://www.luis.ai/" target="_blank" rel="external">LUIS</a> 是依句型去解析的，那我們只需要建立一些使用者會詢問的句型，然後 關鍵字(Entity)就設定2種(action, keyword)，再依 action 及 keyword 建立 Phrase lists ，例如 keyword Phrase lists 裡面就有 App, 行事曆, 客戶, 會員, 網址, 權限 等等的詞，這樣子解析出來的狀況還蠻不錯的。如下，<br><img src="/2018/01/25/2018003/2018003004.png" alt="少量 Utterance + 2 個 Entities" title="少量 Utterance + 2 個 Entities"><br><img src="/2018/01/25/2018003/2018003005.png" alt="相同 Phrase List 建立很多" title="相同 Phrase List 建立很多"><br>註:目前 Phrase List 可以建立 5,000 個<a href="https://docs.microsoft.com/en-us/azure/cognitive-services/luis/luis-resources-faq" target="_blank" rel="external">Language Understanding FAQ</a>。  </p><p>所以當使用者輸入「請問如何快速新增行事曆」，透過 <a href="https://www.luis.ai/" target="_blank" rel="external">LUIS</a> 就可以找到關鍵字為 新增 及 行事曆 ，如下，<br><img src="/2018/01/25/2018003/2018003006.png" alt="LUIS Parse Entities" title="LUIS Parse Entities"> </p><p>所以我們再到 <a href="http://www.vitalsesp.com/" target="_blank" rel="external">Vital ESP</a>(FAQ系統)，輸入「新增 行事曆」，就可以正確查到資料了，如下，<br><img src="/2018/01/25/2018003/2018003007.png" alt="LUIS Parse Entities" title="LUIS Parse Entities">  </p><p>所以我們一樣使用 1645 個問題來試看看 <a href="https://www.luis.ai/" target="_blank" rel="external">LUIS</a> + <a href="http://www.vitalsesp.com/" target="_blank" rel="external">Vital ESP</a>(FAQ系統) ，有找出結果的約有 968 個，約 50 %。<br>註:我們會產生一個 Excel 的結果檔如下，<br><img src="/2018/01/25/2018003/2018003008.png" alt="測試結果的Excel內容" title="測試結果的Excel內容"> </p><p>架構類似如下，<br><img src="/2018/01/25/2018003/2018003010.png" alt="架構圖" title="架構圖"></p><p>而透過 Chatbot 去封裝的話，畫面如下，<br><img src="/2018/01/25/2018003/2018003009.png" alt="FAQ chatbot" title="FAQ chatbot"> </p><p>之後在 Chatbot 中就可以再去記錄一些使用者的行為，讓 Chatbot 更智能。 </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;相信很多產品都會有線上客服系統及線上 FAQ 系統，提供給使用者線上詢問或查詢來排除操作系統所發生的問題。&lt;br&gt;如果加上 FAQ Chatbot 可以服務更多的使用者(當線上客服人員下班時)，也可以讓線上客服人員可以服務復雜的問題。&lt;br&gt;我們要如何加上 FAQ Chat
      
    
    </summary>
    
    
      <category term="QnA Maker" scheme="https://rainmakerho.github.io/tags/QnA-Maker/"/>
    
      <category term="LUIS" scheme="https://rainmakerho.github.io/tags/LUIS/"/>
    
      <category term="Vital ESP" scheme="https://rainmakerho.github.io/tags/Vital-ESP/"/>
    
      <category term="chatbot" scheme="https://rainmakerho.github.io/tags/chatbot/"/>
    
      <category term="FAQ" scheme="https://rainmakerho.github.io/tags/FAQ/"/>
    
  </entry>
  
  <entry>
    <title>Excel.WorkbookClass.SaveAs 發生例外狀況於 HRESULT: 0x800A03EC [ COMException.ErrorCode : -2146827284 ]</title>
    <link href="https://rainmakerho.github.io/2018/01/11/2018002/"/>
    <id>https://rainmakerho.github.io/2018/01/11/2018002/</id>
    <published>2018-01-11T07:30:42.000Z</published>
    <updated>2018-01-11T08:13:59.964Z</updated>
    
    <content type="html"><![CDATA[<p>今天同事詢問一個錯誤訊息如下，<br>Excel.WorkbookClass.SaveAs  <system.runtime.interopservices.comexception> 發生例外狀況於 HRESULT: 0x800A03EC [ COMException.ErrorCode : -2146827284 ]<br>於 Excel.WorkbookClass.SaveAs(Object Filename, Object FileFormat, Object Password, Object WriteResPassword, Object ReadOnlyRecommended, Object CreateBackup, XlSaveAsAccessMode AccessMode, Object ConflictResolution, Object AddToMru, Object TextCodepage, Object TextVisualLayout)</system.runtime.interopservices.comexception></p><p>程式中的寫法類似如下，<br><figure class="highlight vb"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">dim</span> xlsApp <span class="keyword">As</span> <span class="keyword">New</span> Excel.Application</div><div class="line"><span class="keyword">Dim</span> wb <span class="keyword">As</span> Excel.Workbook</div><div class="line">xlsApp.Visible = <span class="literal">False</span></div><div class="line">xlsApp.DisplayAlerts = <span class="literal">False</span></div><div class="line">xlsApp.Workbooks.OpenText(<span class="keyword">Me</span>.UpFile_Path)</div><div class="line">wb = xlsApp.Workbooks(<span class="number">1</span>)</div><div class="line"><span class="keyword">Const</span> xlNormal = <span class="number">-4143</span></div><div class="line">wb.SaveAs(Filename:=sfileName, FileFormat:=xlNormal, Password:=<span class="string">""</span>, WriteResPassword:=<span class="string">""</span>, ReadOnlyRecommended:=<span class="literal">False</span>, CreateBackup:=<span class="literal">False</span>)</div></pre></td></tr></table></figure></p><p>程式是掛在 wb.SaveAs 那行，而且客戶端是裝 Excel 2016 才噴錯，同事是 Excel 2010 則沒問題。<br>程式中，有加入 interop.excel.dll 參考，使用 earlay binding 的方式，所以似乎是因為版本不同，SaveAs Method 的參數不同所造成的錯誤。</p><p>所以開啟 Excel 2016 ，按下 Alt + F11 後，再按下 F2 瀏覽物件，查看 Workbook 的 SaveAs Method 如下，</p><figure class="highlight vb"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">Sub</span> SaveAs([Filename], [FileFormat], [Password], [WriteResPassword], [ReadOnlyRecommended], [CreateBackup], [AccessMode <span class="keyword">As</span> XlSaveAsAccessMode = xlNoChange]</div><div class="line">, [ConflictResolution], [AddToMru], [TextCodepage], [TextVisualLayout], [Local], [WorkIdentity])</div></pre></td></tr></table></figure><p>跟錯誤訊息比較一下，可以發現 Excel 2016 從參數 TextVisualLayout 後面，又多了 2 個參考 (Local 及 WorkIdentity)。所以程式自然就 GG 了。</p><p>那怎麼辦呢? 改用 Later Binding 的方式，將 interOP.Excel 移除參考，並將原本 Excel.Application 、Excel.Workbook 改成 Object ，重新建置專案，就可以了哦!</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今天同事詢問一個錯誤訊息如下，&lt;br&gt;Excel.WorkbookClass.SaveAs  &lt;system.runtime.interopservices.comexception&gt; 發生例外狀況於 HRESULT: 0x800A03EC [ COMException.E
      
    
    </summary>
    
    
      <category term="Excel" scheme="https://rainmakerho.github.io/tags/Excel/"/>
    
      <category term="SaveAs" scheme="https://rainmakerho.github.io/tags/SaveAs/"/>
    
      <category term="2148140012" scheme="https://rainmakerho.github.io/tags/2148140012/"/>
    
      <category term="2146827284" scheme="https://rainmakerho.github.io/tags/2146827284/"/>
    
      <category term="Workbook" scheme="https://rainmakerho.github.io/tags/Workbook/"/>
    
  </entry>
  
  <entry>
    <title>Windows 10 IoT Core UWP Beacon 程式 Crash 事件</title>
    <link href="https://rainmakerho.github.io/2018/01/09/2018001/"/>
    <id>https://rainmakerho.github.io/2018/01/09/2018001/</id>
    <published>2018-01-09T07:03:42.000Z</published>
    <updated>2018-01-11T07:30:28.006Z</updated>
    
    <content type="html"><![CDATA[<p>我們在2016年有透過 Windows 10 IoT Core 來開發 UWP beacon 的程式，並透過 Azure IoT Hub 來處理訊息。<br>但是這支 UWP 程式執行一段時間後，那台 Raspberry 就無法由外部到它。<br>後來更新到 Build 15063 後，過一段時間後，整個作業系統直接就 Crash 掉了。<br>同事 Kent 查看 event 發現，因為 IoT Core 如果自動更新後，自動重新開機後， OS 就 Crash 掉了。<br>所以將自動更新透過 Power Shell 將它關掉(要更新的話，就手動更新測試沒問題再上)，可參考<a href="https://brosteins.com/2016/09/06/disable-windows-update-windows-10-iot-core-powershell/" target="_blank" rel="external">Disable Windows Update in Windows 10 IoT Core with PowerShell</a>。</p><p>過了一陣子後，無法連網的狀況又發生了，但系統是有取到 ip 的，但就是無法連網。<br>再將系統重新啟動後，就又可以正常連網。<br>所以就在程式中檢查，如果無法連到 Azure IoT Hub N 次之後，就讓系統重新啟動，可參考<a href="https://rainmakerho.github.io/2017/12/11/2017016/">Windows 10 IoT Core 如何透過 UWP 程式來 重開機 或是 關機 (C00CE014)</a>。</p><ul><li>而觀察到目前為止，採取這樣子的方式(停止自動更新、無法連網 N 次就重開機)，程式目前運作的都還蠻順利的哦! </li><li>另外比較麻煩的就是 Android 的手機如果有連到 藍牙裝置(耳機、手環 …)，就無法掃到 Beacon ，手機重開機後才掃得到。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;我們在2016年有透過 Windows 10 IoT Core 來開發 UWP beacon 的程式，並透過 Azure IoT Hub 來處理訊息。&lt;br&gt;但是這支 UWP 程式執行一段時間後，那台 Raspberry 就無法由外部到它。&lt;br&gt;後來更新到 Build 1
      
    
    </summary>
    
    
      <category term="Windows 10 IoT Core" scheme="https://rainmakerho.github.io/tags/Windows-10-IoT-Core/"/>
    
      <category term="UWP" scheme="https://rainmakerho.github.io/tags/UWP/"/>
    
      <category term="restart" scheme="https://rainmakerho.github.io/tags/restart/"/>
    
      <category term="disable update" scheme="https://rainmakerho.github.io/tags/disable-update/"/>
    
      <category term="beacon" scheme="https://rainmakerho.github.io/tags/beacon/"/>
    
  </entry>
  
  <entry>
    <title>Service Worker @ Angular</title>
    <link href="https://rainmakerho.github.io/2017/12/18/2017017/"/>
    <id>https://rainmakerho.github.io/2017/12/18/2017017/</id>
    <published>2017-12-18T08:26:51.000Z</published>
    <updated>2017-12-18T10:04:25.880Z</updated>
    
    <content type="html"><![CDATA[<p>一般的 Web 應用程式，如果 Server 端連不上了，就會直接 GG (在 Chrome 上 恐龍就出現了)。是否有什麼方式在 Client 端程式與 Server 端之間有一個 Buffer 呢?<br>讓應用系統會整個 GG 呢? 答案就是 <a href="https://developers.google.com/web/fundamentals/primers/service-workers/" target="_blank" rel="external">Service Worker</a> 。</p><p>Service Worker 就像是一個 Middleware 一樣，在 Client 端程式與 Server 端之間，如下圖所示，<br><img src="/2017/12/18/2017017/serviceworker.png" alt="Service Worker" title="Service Worker"></p><p>而各 Browser 的 Support 狀況可以參考 <a href="https://developer.microsoft.com/en-us/microsoft-edge/platform/status/serviceworker/" target="_blank" rel="external">Service Worker - Platform status</a><br>那我們在 Angular (筆者使用的版本是 Angular CLI v 1.6.0) 中要如何使用 Service Worker 呢?</p><p>1.寫 Service Worker 的 js 檔(sw.js 放在 src 目錄下)。<br><img src="/2017/12/18/2017017/swFile.png" alt="Service Worker JS" title="Service Worker JS"></p><p>2.在 .angular-cli.json 中 Apps -&gt; assets 中加入 sw.js。<br><img src="/2017/12/18/2017017/cliJSON.png" alt=".angular-cli.json" title=".angular-cli.json"></p><p>3.main.ts 註冊 service worker (sw.js)。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">platformBrowserDynamic()</div><div class="line">    .bootstrapModule(AppModule)</div><div class="line">    .then(<span class="function"><span class="params">_</span> =&gt;</span> &#123;</div><div class="line">        <span class="keyword">if</span> (<span class="string">'serviceWorker'</span> <span class="keyword">in</span> navigator) &#123;</div><div class="line">            navigator.serviceWorker</div><div class="line">                .register(<span class="string">'/sw.js'</span>, &#123;  <span class="attr">scope</span>: <span class="string">'/’ &#125;)</span></div><div class="line"><span class="string">                .then(reg =&gt; &#123;console.log('</span>Service worker Registered!’); &#125;)</div><div class="line">                .catch(<span class="function"><span class="params">err</span> =&gt;</span> &#123; <span class="built_in">console</span>.log(<span class="string">'Service Worker Registration Failed:'</span>, err);&#125;);</div><div class="line">        &#125;</div><div class="line">    &#125;).catch(<span class="function"><span class="params">err</span> =&gt;</span> <span class="built_in">console</span>.log(err));</div></pre></td></tr></table></figure><h4 id="那-Service-Worker-要寫些什麼呢"><a href="#那-Service-Worker-要寫些什麼呢" class="headerlink" title="那 Service Worker 要寫些什麼呢?"></a>那 Service Worker 要寫些什麼呢?</h4><p>它是 event base 的，而它的 event Life Cycle 可以參考以下的圖，<br><img src="/2017/12/18/2017017/sw-lifecycle.png" alt="Service Worker Life Cyclevents" title="Service Worker Life Cyclevents"><br>舉個簡單的例子，在 Angular 首頁中讀取 /api/lessons 的課程資料下來呈現，如下圖，<br><img src="/2017/12/18/2017017/webap.png" alt="SampleWebAp" title="SampleWebAp"></p><p>所以在 Service Worker (sw.js) 中就可以在 install event 中將這些 Resource 存到 Cache 之中。在 fetch event 中，就從 Cache 中取得這些 Resource，如下，</p><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> VERSION = <span class="string">'v1'</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">log</span>(<span class="params">...messages</span>) </span>&#123;</div><div class="line"><span class="built_in">console</span>.log(VERSION, ...messages);</div><div class="line">&#125;</div><div class="line"></div><div class="line">log(<span class="string">'Installing Service Worker'</span>);</div><div class="line"></div><div class="line">self.addEventListener(<span class="string">'install'</span>, event =&gt; &#123;</div><div class="line">log(<span class="string">'version is installed'</span>);</div><div class="line">event.waitUntil(installServiceWorker());</div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">installServiceWorker</span>(<span class="params"></span>) </span>&#123;</div><div class="line">log(<span class="string">'Service Worker installation started!'</span>);</div><div class="line"><span class="keyword">const</span> cache = <span class="keyword">await</span> caches.open(getCacheName());</div><div class="line"><span class="keyword">return</span> cache.addAll([</div><div class="line"><span class="string">'/'</span>,</div><div class="line"><span class="string">'/polyfills.bundle.js'</span>,</div><div class="line"><span class="string">'/inline.bundle.js'</span>,</div><div class="line"><span class="string">'/styles.bundle.js'</span>,</div><div class="line"><span class="string">'/vendor.bundle.js'</span>,</div><div class="line"><span class="string">'/main.bundle.js'</span>,</div><div class="line"><span class="string">'/api/lessons'</span></div><div class="line">]);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">getCacheName</span>(<span class="params"></span>) </span>&#123;</div><div class="line"><span class="keyword">return</span> <span class="string">`app-cache-<span class="subst">$&#123;VERSION&#125;</span>`</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line">self.addEventListener(<span class="string">'activate'</span>, () =&gt; activateSW());</div><div class="line"></div><div class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">activateSW</span>(<span class="params"></span>) </span>&#123;</div><div class="line">log(<span class="string">'service worker activating ...*** '</span>);</div><div class="line"><span class="keyword">const</span> cacheKeys = <span class="keyword">await</span> caches.keys();</div><div class="line">cacheKeys.forEach(<span class="function"><span class="params">cacheKey</span> =&gt;</span> &#123;</div><div class="line"><span class="keyword">if</span> (cacheKey !== getCacheName()) &#123;</div><div class="line">caches.delete(cacheKey);</div><div class="line">&#125;</div><div class="line">&#125;);</div><div class="line">&#125;</div><div class="line"></div><div class="line">self.addEventListener(<span class="string">'fetch'</span>, event =&gt; &#123;</div><div class="line">log(<span class="string">'version is ftech'</span>);</div><div class="line">event.respondWith(cacheThenNetwork(event));</div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">cacheThenNetwork</span>(<span class="params">event</span>) </span>&#123;</div><div class="line"><span class="keyword">const</span> cache = <span class="keyword">await</span> caches.open(getCacheName());</div><div class="line"></div><div class="line"><span class="keyword">const</span> cacheResponse = <span class="keyword">await</span> cache.match(event.request);</div><div class="line"><span class="keyword">if</span> (cacheResponse) &#123;</div><div class="line">log(<span class="string">'From Cache:'</span>, event.request.url);</div><div class="line"><span class="keyword">return</span> cacheResponse;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">const</span> networkResponse = fetch(event.request);</div><div class="line">log(<span class="string">'Calling network:'</span>, event.request.url);</div><div class="line"><span class="keyword">return</span> networkResponse;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>所以從開發工具的 Application (左邊選 Service Workers)可以發現，sw.js 已經 activated 及 running ，在 Cache Storage 也儲存我們要 Cache 的資源 。如下圖，<br><img src="/2017/12/18/2017017/devtool_s.png" alt="DevTool Service Workers" title="DevTool Service Workers"><br><img src="/2017/12/18/2017017/sw-cache.png" alt="DevTool Service Workers Cache" title="DevTool Service Workers Cache"></p><p>然後我們在開發工具的 Application 中勾選 offline 後，再重新整理頁面，可以發現我們的頁面可以正常的顯示哦! 如下圖，<br><img src="/2017/12/18/2017017/sw-offline.png" alt="DevTool Service Workers Offline" title="DevTool Service Workers Offline"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;一般的 Web 應用程式，如果 Server 端連不上了，就會直接 GG (在 Chrome 上 恐龍就出現了)。是否有什麼方式在 Client 端程式與 Server 端之間有一個 Buffer 呢?&lt;br&gt;讓應用系統會整個 GG 呢? 答案就是 &lt;a href=&quot;htt
      
    
    </summary>
    
    
      <category term="Angular" scheme="https://rainmakerho.github.io/tags/Angular/"/>
    
      <category term="Service Worker" scheme="https://rainmakerho.github.io/tags/Service-Worker/"/>
    
  </entry>
  
  <entry>
    <title>Windows 10 IoT Core 如何透過 UWP 程式來 重開機 或是 關機 (C00CE014)</title>
    <link href="https://rainmakerho.github.io/2017/12/11/2017016/"/>
    <id>https://rainmakerho.github.io/2017/12/11/2017016/</id>
    <published>2017-12-11T06:35:08.000Z</published>
    <updated>2017-12-11T07:11:54.327Z</updated>
    
    <content type="html"><![CDATA[<p>最近在 RPi2 上面的 Windows IoT Core UWP 程式，網路跑一跑就 GG 了，它就完全沒辦法對外連網，外面也連不到它。一定要重新開機後，網路才會好。<br>於是參考 <a href="https://marcominerva.wordpress.com/2016/12/13/how-to-shutdown-a-windows-10-iot-core-device-from-a-uwp-app/" target="_blank" rel="external">How to shutdown a Windows 10 IoT Core device from a UWP app</a>這篇文章的方式，使用 <em>ShutdownManager.BeginShutdown(ShutdownKind.Restart, TimeSpan.FromSeconds(5));</em>，並在 <em>Package.appxmanifest</em> 檔案中加入 xmlns:iot namespace, IgnorableNamespaces 以及在 Capabilities 節點中加入 <em>iot:Capability Name=”systemManagement”</em> (請檢視原始碼編輯哦! UI 無法設定!)。<br>結果程式一建置下去就 GG 了，出現「驗證錯誤。error C00CE014: App manifest validation error: The app manifest must be valid as per schema:」的錯誤。</p><p>我的 Package.appxmanifest 檔案如下，</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">Package</span> <span class="attr">xmlns</span>=<span class="string">"http://schemas.microsoft.com/appx/manifest/foundation/windows10"</span></span></div><div class="line"><span class="tag">         <span class="attr">xmlns:mp</span>=<span class="string">"http://schemas.microsoft.com/appx/2014/phone/manifest"</span></span></div><div class="line"><span class="tag">         <span class="attr">xmlns:uap</span>=<span class="string">"http://schemas.microsoft.com/appx/manifest/uap/windows10"</span></span></div><div class="line"><span class="tag">         <span class="attr">xmlns:iot</span>=<span class="string">"http://schemas.microsoft.com/appx/manifest/iot/windows10"</span> <span class="attr">IgnorableNamespaces</span>=<span class="string">"uap mp iot"</span>&gt;</span></div><div class="line">  ...</div><div class="line">  <span class="tag">&lt;<span class="name">Capabilities</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">Capability</span> <span class="attr">Name</span>=<span class="string">"internetClient"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">DeviceCapability</span> <span class="attr">Name</span>=<span class="string">"bluetooth"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">iot:Capability</span> <span class="attr">Name</span>=<span class="string">"systemManagement"</span> /&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">Capabilities</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">Package</span>&gt;</span></div></pre></td></tr></table></figure><p>會有 <em>error C00CE014</em> 的錯誤，因為在 Capabilities 中的順序不對，Capability 要在第一順位，而且要在一起，再來才是 DeviceCapability ，如下面的順序就可以順利建置成功，</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">Package</span> <span class="attr">xmlns</span>=<span class="string">"http://schemas.microsoft.com/appx/manifest/foundation/windows10"</span></span></div><div class="line"><span class="tag">         <span class="attr">xmlns:mp</span>=<span class="string">"http://schemas.microsoft.com/appx/2014/phone/manifest"</span></span></div><div class="line"><span class="tag">         <span class="attr">xmlns:uap</span>=<span class="string">"http://schemas.microsoft.com/appx/manifest/uap/windows10"</span></span></div><div class="line"><span class="tag">         <span class="attr">xmlns:iot</span>=<span class="string">"http://schemas.microsoft.com/appx/manifest/iot/windows10"</span> <span class="attr">IgnorableNamespaces</span>=<span class="string">"uap mp iot"</span>&gt;</span></div><div class="line">  ...</div><div class="line">  <span class="tag">&lt;<span class="name">Capabilities</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">Capability</span> <span class="attr">Name</span>=<span class="string">"internetClient"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">iot:Capability</span> <span class="attr">Name</span>=<span class="string">"systemManagement"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">DeviceCapability</span> <span class="attr">Name</span>=<span class="string">"bluetooth"</span> /&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">Capabilities</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">Package</span>&gt;</span></div></pre></td></tr></table></figure><p>Capability -&gt; iot:Capability -&gt; DeviceCapability …</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近在 RPi2 上面的 Windows IoT Core UWP 程式，網路跑一跑就 GG 了，它就完全沒辦法對外連網，外面也連不到它。一定要重新開機後，網路才會好。&lt;br&gt;於是參考 &lt;a href=&quot;https://marcominerva.wordpress.com/
      
    
    </summary>
    
    
      <category term="Windows 10 IoT Core" scheme="https://rainmakerho.github.io/tags/Windows-10-IoT-Core/"/>
    
      <category term="Shutdown" scheme="https://rainmakerho.github.io/tags/Shutdown/"/>
    
      <category term="Restart" scheme="https://rainmakerho.github.io/tags/Restart/"/>
    
      <category term="iot:Capability" scheme="https://rainmakerho.github.io/tags/iot-Capability/"/>
    
      <category term="systemManagement" scheme="https://rainmakerho.github.io/tags/systemManagement/"/>
    
      <category term="C00CE014" scheme="https://rainmakerho.github.io/tags/C00CE014/"/>
    
  </entry>
  
  <entry>
    <title>為什麼 OPTIONS 時會給 404 呢?</title>
    <link href="https://rainmakerho.github.io/2017/12/07/2017015/"/>
    <id>https://rainmakerho.github.io/2017/12/07/2017015/</id>
    <published>2017-12-07T09:30:04.000Z</published>
    <updated>2017-12-11T09:52:54.785Z</updated>
    
    <content type="html"><![CDATA[<h4 id="同事在-CALL-IIS-上的網頁時，因為-CORS-所以會先做-Preflight-request，跑-OPTIONS-時，居然回-404-。"><a href="#同事在-CALL-IIS-上的網頁時，因為-CORS-所以會先做-Preflight-request，跑-OPTIONS-時，居然回-404-。" class="headerlink" title="同事在 CALL IIS 上的網頁時，因為 CORS 所以會先做 Preflight request，跑 OPTIONS 時，居然回 404 。"></a>同事在 CALL IIS 上的網頁時，因為 CORS 所以會先做 <a href="https://developer.mozilla.org/en-US/docs/Glossary/Preflight_request" target="_blank" rel="external">Preflight request</a>，跑 OPTIONS 時，居然回 404 。</h4><h4 id="在-web-config-中有允許-OPTIONS-呀-而且在-web-config-中設定的-header-也有-response-出來。-但-status-code-卻是-404-。"><a href="#在-web-config-中有允許-OPTIONS-呀-而且在-web-config-中設定的-header-也有-response-出來。-但-status-code-卻是-404-。" class="headerlink" title="在 web.config 中有允許 OPTIONS 呀 ~ 而且在 web.config 中設定的 header 也有 response 出來。 但 status code 卻是 404 。"></a>在 web.config 中有允許 OPTIONS 呀 ~ 而且在 web.config 中設定的 header 也有 response 出來。 但 status code 卻是 404 。</h4><h4 id="後來到-IIS-一看才知道，在-IIS-的「要求篩選」那裡，-OPTIONS-被設定成了-不允許，如下圖，"><a href="#後來到-IIS-一看才知道，在-IIS-的「要求篩選」那裡，-OPTIONS-被設定成了-不允許，如下圖，" class="headerlink" title="後來到 IIS 一看才知道，在 IIS 的「要求篩選」那裡， OPTIONS 被設定成了 不允許，如下圖，"></a>後來到 IIS 一看才知道，在 IIS 的「要求篩選」那裡， OPTIONS 被設定成了 不允許，如下圖，</h4><p><br><br><img src="/2017/12/07/2017015/REQFILTER.png" alt="slug 要求篩選" title="slug 要求篩選"><br><br></p><h4 id="後來將它移除後，就可以了哦"><a href="#後來將它移除後，就可以了哦" class="headerlink" title="後來將它移除後，就可以了哦 ~"></a>後來將它移除後，就可以了哦 ~</h4><h4 id="大家如果有類似的問題，可以檢查一下-IIS-的「要求篩選」設定哦"><a href="#大家如果有類似的問題，可以檢查一下-IIS-的「要求篩選」設定哦" class="headerlink" title="大家如果有類似的問題，可以檢查一下 IIS 的「要求篩選」設定哦 !"></a>大家如果有類似的問題，可以檢查一下 IIS 的「要求篩選」設定哦 !</h4>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;同事在-CALL-IIS-上的網頁時，因為-CORS-所以會先做-Preflight-request，跑-OPTIONS-時，居然回-404-。&quot;&gt;&lt;a href=&quot;#同事在-CALL-IIS-上的網頁時，因為-CORS-所以會先做-Preflight-reque
      
    
    </summary>
    
    
      <category term="OPTIONS" scheme="https://rainmakerho.github.io/tags/OPTIONS/"/>
    
      <category term="IIS" scheme="https://rainmakerho.github.io/tags/IIS/"/>
    
      <category term="404" scheme="https://rainmakerho.github.io/tags/404/"/>
    
      <category term="要求篩選" scheme="https://rainmakerho.github.io/tags/%E8%A6%81%E6%B1%82%E7%AF%A9%E9%81%B8/"/>
    
  </entry>
  
  <entry>
    <title>Writeable Session 造成網頁被卡住的問題</title>
    <link href="https://rainmakerho.github.io/2017/11/30/2017014/"/>
    <id>https://rainmakerho.github.io/2017/11/30/2017014/</id>
    <published>2017-11-30T09:49:38.000Z</published>
    <updated>2017-12-11T09:53:17.871Z</updated>
    
    <content type="html"><![CDATA[<h4 id="在之前有討論到不同網頁使用到-Writeable-Session-時會卡來卡去的狀況-Lock-or-Blocking-使用-Session-要小心網頁會被-卡住哦-，或是-Web-Service-如果開啟-Session-存取的話，預設是-Writeable-Session-模式-設定-WebService-使用-ReadOnly-Session-。"><a href="#在之前有討論到不同網頁使用到-Writeable-Session-時會卡來卡去的狀況-Lock-or-Blocking-使用-Session-要小心網頁會被-卡住哦-，或是-Web-Service-如果開啟-Session-存取的話，預設是-Writeable-Session-模式-設定-WebService-使用-ReadOnly-Session-。" class="headerlink" title="在之前有討論到不同網頁使用到 Writeable Session 時會卡來卡去的狀況 Lock or Blocking( 使用 Session 要小心網頁會被 卡住哦! )，或是 Web Service 如果開啟 Session 存取的話，預設是 Writeable Session 模式(設定 WebService 使用 ReadOnly Session)。"></a>在之前有討論到不同網頁使用到 Writeable Session 時會卡來卡去的狀況 Lock or Blocking( <a href="https://dotblogs.com.tw/rainmaker/2016/06/30/103719" target="_blank" rel="external">使用 Session 要小心網頁會被 卡住哦!</a> )，或是 Web Service 如果開啟 Session 存取的話，預設是 Writeable Session 模式(<a href="https://dotblogs.com.tw/rainmaker/2015/02/10/149456" target="_blank" rel="external">設定 WebService 使用 ReadOnly Session</a>)。</h4><h4 id="解法除了設定-SessionStateBehavior-ReadOnly-外，如果一定要用-Writeable-Session-時-怕改成-ReadOnly-會影響現有系統的話-，可以參考When-a-Single-ASP-NET-Client-makes-Concurrent-Requests-for-Writeable-Session-Variables提供的方式，因為在寫入-Session-時會造成-500ms-的-Delay-時間-請參考-Storing-Anything-in-ASP-NET-Session-Causes-500ms-Delays-，"><a href="#解法除了設定-SessionStateBehavior-ReadOnly-外，如果一定要用-Writeable-Session-時-怕改成-ReadOnly-會影響現有系統的話-，可以參考When-a-Single-ASP-NET-Client-makes-Concurrent-Requests-for-Writeable-Session-Variables提供的方式，因為在寫入-Session-時會造成-500ms-的-Delay-時間-請參考-Storing-Anything-in-ASP-NET-Session-Causes-500ms-Delays-，" class="headerlink" title="解法除了設定 SessionStateBehavior.ReadOnly 外，如果一定要用 Writeable Session 時(怕改成 ReadOnly 會影響現有系統的話)，可以參考When a Single ASP.NET Client makes Concurrent Requests for Writeable Session Variables提供的方式，因為在寫入 Session 時會造成 500ms 的 Delay 時間(請參考:Storing Anything in ASP.NET Session Causes 500ms Delays)，"></a>解法除了設定 SessionStateBehavior.ReadOnly 外，如果一定要用 Writeable Session 時(怕改成 ReadOnly 會影響現有系統的話)，可以參考<a href="https://www.red-gate.com/simple-talk/dotnet/asp-net/single-asp-net-client-makes-concurrent-requests-writeable-session-variables/" target="_blank" rel="external">When a Single ASP.NET Client makes Concurrent Requests for Writeable Session Variables</a>提供的方式，因為在寫入 Session 時會造成 500ms 的 Delay 時間(請參考:<a href="https://stackoverflow.com/questions/8349033/storing-anything-in-asp-net-session-causes-500ms-delays" target="_blank" rel="external">Storing Anything in ASP.NET Session Causes 500ms Delays</a>)，</h4><ul><li><h4 id="降低-Session-Lock-Check-的時間"><a href="#降低-Session-Lock-Check-的時間" class="headerlink" title="降低 Session Lock Check 的時間"></a>降低 Session Lock Check 的時間</h4><h4 id="可以在-Global-asax-cs-的-Application-Start-Method-去設定預設值，-Polling-Interval-從-500ms-改成-30ms-Polling-Delta-從-250ms-改成-15ms-，如下，"><a href="#可以在-Global-asax-cs-的-Application-Start-Method-去設定預設值，-Polling-Interval-從-500ms-改成-30ms-Polling-Delta-從-250ms-改成-15ms-，如下，" class="headerlink" title="可以在 Global.asax.cs 的 Application_Start Method 去設定預設值， Polling Interval 從 500ms 改成 30ms, Polling Delta 從 250ms 改成 15ms ，如下，"></a>可以在 Global.asax.cs 的 Application_Start Method 去設定預設值， Polling Interval 從 500ms 改成 30ms, Polling Delta 從 250ms 改成 15ms ，如下，</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">Application_Start</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>)</span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">    <span class="keyword">var</span> sessionStateModuleType = <span class="keyword">typeof</span>(SessionStateModule);</div><div class="line">    <span class="keyword">var</span> pollingIntervalFieldInfo = sessionStateModuleType.GetField(<span class="string">"LOCKED_ITEM_POLLING_INTERVAL"</span>, BindingFlags.NonPublic | BindingFlags.Static);</div><div class="line">    <span class="keyword">var</span> orgpollingInterval = pollingIntervalFieldInfo.GetValue(<span class="literal">null</span>);</div><div class="line">    pollingIntervalFieldInfo.SetValue(<span class="literal">null</span>, <span class="number">30</span>); <span class="comment">// default 500ms</span></div><div class="line">    <span class="keyword">var</span> pollingDeltaFieldInfo = sessionStateModuleType.GetField(<span class="string">"LOCKED_ITEM_POLLING_DELTA"</span>, BindingFlags.NonPublic | BindingFlags.Static);</div><div class="line">    <span class="keyword">var</span> orgPollingDelta = pollingDeltaFieldInfo.GetValue(<span class="literal">null</span>);</div><div class="line">    pollingDeltaFieldInfo.SetValue(<span class="literal">null</span>, TimeSpan.FromMilliseconds(<span class="number">15.0</span>)); <span class="comment">// default 250ms</span></div><div class="line">&#125;</div></pre></td></tr></table></figure></li></ul><img src="/2017/11/30/2017014/application_start.png" alt="slug 在 Application Start 事件中更改預設值" title="slug 在 Application Start 事件中更改預設值">  <p><br><br><img src="/2017/11/30/2017014/beginRequest.png" alt="slug 可以在 Request 時發現，預設值已經被更改了" title="slug 可以在 Request 時發現，預設值已經被更改了"><br><br></p><ul><li><h4 id="實作-Lockless-SessionStateStoreProvider"><a href="#實作-Lockless-SessionStateStoreProvider" class="headerlink" title="實作 Lockless SessionStateStoreProvider"></a>實作 Lockless SessionStateStoreProvider</h4></li></ul><figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">LocklessInProcSessionStateStore</span> : <span class="title">SessionStateStoreProviderBase</span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">private</span> SessionStateStoreProviderBase _store;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Initialize</span>(<span class="params"><span class="keyword">string</span> name, NameValueCollection config</span>)</span></div><div class="line"><span class="function">    </span>&#123;</div><div class="line">        <span class="keyword">base</span>.Initialize(name, config);</div><div class="line"></div><div class="line">        <span class="keyword">var</span> storeType = <span class="keyword">typeof</span>(SessionStateStoreProviderBase).Assembly.GetType(<span class="string">"System.Web.SessionState.InProcSessionStateStore"</span>);</div><div class="line">        _store = (SessionStateStoreProviderBase)Activator.CreateInstance(storeType);</div><div class="line">        _store.Initialize(name, config);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Dispose</span>(<span class="params"></span>)</span></div><div class="line"><span class="function">    </span>&#123;</div><div class="line">        _store.Dispose();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">bool</span> <span class="title">SetItemExpireCallback</span>(<span class="params">SessionStateItemExpireCallback expireCallback</span>)</span></div><div class="line"><span class="function">    </span>&#123;</div><div class="line">        <span class="keyword">return</span> _store.SetItemExpireCallback(expireCallback);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">InitializeRequest</span>(<span class="params">HttpContext context</span>)</span></div><div class="line"><span class="function">    </span>&#123;</div><div class="line">        _store.InitializeRequest(context);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> SessionStateStoreData <span class="title">GetItem</span>(<span class="params">HttpContext context, <span class="keyword">string</span> id, <span class="keyword">out</span> <span class="keyword">bool</span> locked, <span class="keyword">out</span> TimeSpan lockAge, <span class="keyword">out</span> <span class="keyword">object</span> lockId,</span></span></div><div class="line"><span class="function"><span class="params">        <span class="keyword">out</span> SessionStateActions actions</span>)</span></div><div class="line"><span class="function">    </span>&#123;</div><div class="line">        <span class="keyword">var</span> returnValue = _store.GetItem(context, id, <span class="keyword">out</span> locked, <span class="keyword">out</span> lockAge, <span class="keyword">out</span> lockId, <span class="keyword">out</span> actions);</div><div class="line">        <span class="keyword">if</span> (returnValue == <span class="literal">null</span> &amp;&amp; lockId != <span class="literal">null</span>)</div><div class="line">        &#123;</div><div class="line">            _store.ReleaseItemExclusive(context, id, lockId);</div><div class="line">            returnValue = _store.GetItem(context, id, <span class="keyword">out</span> locked, <span class="keyword">out</span> lockAge, <span class="keyword">out</span> lockId, <span class="keyword">out</span> actions);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">return</span> returnValue;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> SessionStateStoreData <span class="title">GetItemExclusive</span>(<span class="params">HttpContext context, <span class="keyword">string</span> id, <span class="keyword">out</span> <span class="keyword">bool</span> locked, <span class="keyword">out</span> TimeSpan lockAge,</span></span></div><div class="line"><span class="function"><span class="params">        <span class="keyword">out</span> <span class="keyword">object</span> lockId, <span class="keyword">out</span> SessionStateActions actions</span>)</span></div><div class="line"><span class="function">    </span>&#123;</div><div class="line">        <span class="keyword">var</span> returnValue = _store.GetItemExclusive(context, id, <span class="keyword">out</span> locked, <span class="keyword">out</span> lockAge, <span class="keyword">out</span> lockId, <span class="keyword">out</span> actions);</div><div class="line">        <span class="keyword">if</span> (returnValue == <span class="literal">null</span> &amp;&amp; lockId != <span class="literal">null</span>)</div><div class="line">        &#123;</div><div class="line">            _store.ReleaseItemExclusive(context, id, lockId);</div><div class="line">            returnValue = _store.GetItemExclusive(context, id, <span class="keyword">out</span> locked, <span class="keyword">out</span> lockAge, <span class="keyword">out</span> lockId, <span class="keyword">out</span> actions);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">return</span> returnValue;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">ReleaseItemExclusive</span>(<span class="params">HttpContext context, <span class="keyword">string</span> id, <span class="keyword">object</span> lockId</span>)</span></div><div class="line"><span class="function">    </span>&#123;</div><div class="line">        _store.ReleaseItemExclusive(context, id, lockId);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">SetAndReleaseItemExclusive</span>(<span class="params">HttpContext context, <span class="keyword">string</span> id, SessionStateStoreData item, <span class="keyword">object</span> lockId, <span class="keyword">bool</span> newItem</span>)</span></div><div class="line"><span class="function">    </span>&#123;</div><div class="line">        _store.SetAndReleaseItemExclusive(context, id, item, lockId, newItem);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">RemoveItem</span>(<span class="params">HttpContext context, <span class="keyword">string</span> id, <span class="keyword">object</span> lockId, SessionStateStoreData item</span>)</span></div><div class="line"><span class="function">    </span>&#123;</div><div class="line">        _store.RemoveItem(context, id, lockId, item);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">ResetItemTimeout</span>(<span class="params">HttpContext context, <span class="keyword">string</span> id</span>)</span></div><div class="line"><span class="function">    </span>&#123;</div><div class="line">        _store.ResetItemTimeout(context, id);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> SessionStateStoreData <span class="title">CreateNewStoreData</span>(<span class="params">HttpContext context, <span class="keyword">int</span> timeout</span>)</span></div><div class="line"><span class="function">    </span>&#123;</div><div class="line">        <span class="keyword">return</span> _store.CreateNewStoreData(context, timeout);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">CreateUninitializedItem</span>(<span class="params">HttpContext context, <span class="keyword">string</span> id, <span class="keyword">int</span> timeout</span>)</span></div><div class="line"><span class="function">    </span>&#123;</div><div class="line">        _store.CreateUninitializedItem(context, id, timeout);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">EndRequest</span>(<span class="params">HttpContext context</span>)</span></div><div class="line"><span class="function">    </span>&#123;</div><div class="line">        _store.EndRequest(context);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><pre><code>#### 在 web.config 中加入設定自定的 SessionState，如下，<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">sessionState</span> <span class="attr">mode</span>=<span class="string">"Custom"</span> <span class="attr">customProvider</span>=<span class="string">"LocklessInProcSessionStateStore"</span> <span class="attr">cookieless</span>=<span class="string">"false"</span> <span class="attr">timeout</span>=<span class="string">"1"</span> &gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">providers</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">add</span> <span class="attr">name</span>=<span class="string">"LocklessInProcSessionStateStore"</span> </span></div><div class="line"><span class="tag">        <span class="attr">type</span>=<span class="string">"你專案的namespace.LocklessInProcSessionStateStore"</span>/&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">providers</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">sessionState</span>&gt;</span></div></pre></td></tr></table></figure></code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;在之前有討論到不同網頁使用到-Writeable-Session-時會卡來卡去的狀況-Lock-or-Blocking-使用-Session-要小心網頁會被-卡住哦-，或是-Web-Service-如果開啟-Session-存取的話，預設是-Writeable-S
      
    
    </summary>
    
    
      <category term="Session" scheme="https://rainmakerho.github.io/tags/Session/"/>
    
      <category term="EnableSessionState" scheme="https://rainmakerho.github.io/tags/EnableSessionState/"/>
    
      <category term="SessionStateStoreProvider" scheme="https://rainmakerho.github.io/tags/SessionStateStoreProvider/"/>
    
      <category term="Concurrent" scheme="https://rainmakerho.github.io/tags/Concurrent/"/>
    
  </entry>
  
  <entry>
    <title>為什麼 scrollbar 在 mac os 的 browser 無法顯示出來呢?</title>
    <link href="https://rainmakerho.github.io/2017/11/29/2017013/"/>
    <id>https://rainmakerho.github.io/2017/11/29/2017013/</id>
    <published>2017-11-29T01:33:20.000Z</published>
    <updated>2017-11-29T01:45:44.528Z</updated>
    
    <content type="html"><![CDATA[<h4 id="最近在-div-上加入-overflow-y-scroll-height-250px-讓-div-高度超過-250px-時就呈現-scrollbar-。-在-Windows-的機器上測試顯示都正常。"><a href="#最近在-div-上加入-overflow-y-scroll-height-250px-讓-div-高度超過-250px-時就呈現-scrollbar-。-在-Windows-的機器上測試顯示都正常。" class="headerlink" title="最近在 div 上加入 overflow-y: scroll; height:250px; 讓 div 高度超過 250px 時就呈現 scrollbar 。 在 Windows 的機器上測試顯示都正常。"></a>最近在 div 上加入 <em>overflow-y: scroll; height:250px;</em> 讓 div 高度超過 250px 時就呈現 scrollbar 。 在 Windows 的機器上測試顯示都正常。</h4><h4 id="但是在-mac-上測試，-scrollbar-卻沒有呈現出來。"><a href="#但是在-mac-上測試，-scrollbar-卻沒有呈現出來。" class="headerlink" title="但是在 mac 上測試， scrollbar 卻沒有呈現出來。"></a>但是在 mac 上測試， scrollbar 卻沒有呈現出來。</h4><h4 id="後來有查到-Force-the-scrollbar-back-這些的說明，我們需要針對-webkit-scrollbar-來設定它，所以在-css-中需要再加入以下的設定，來讓-scrollbar-在-mac-的瀏覽器可以正常呈現-scrollbar-哦"><a href="#後來有查到-Force-the-scrollbar-back-這些的說明，我們需要針對-webkit-scrollbar-來設定它，所以在-css-中需要再加入以下的設定，來讓-scrollbar-在-mac-的瀏覽器可以正常呈現-scrollbar-哦" class="headerlink" title="後來有查到 Force the scrollbar back 這些的說明，我們需要針對 -webkit-scrollbar 來設定它，所以在 css 中需要再加入以下的設定，來讓 scrollbar 在 mac 的瀏覽器可以正常呈現 scrollbar 哦!"></a>後來有查到 <a href="http://simurai.com/blog/2011/07/26/webkit-scrollbar" target="_blank" rel="external">Force the scrollbar back</a> 這些的說明，我們需要針對 -webkit-scrollbar 來設定它，所以在 css 中需要再加入以下的設定，來讓 scrollbar 在 mac 的瀏覽器可以正常呈現 scrollbar 哦!</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="selector-pseudo">::-webkit-scrollbar</span> &#123;</div><div class="line">    <span class="attribute">-webkit-appearance</span>: none;</div><div class="line">    <span class="attribute">width</span>: <span class="number">7px</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-pseudo">::-webkit-scrollbar-thumb</span> &#123;</div><div class="line">    <span class="attribute">border-radius</span>: <span class="number">4px</span>;</div><div class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(0,0,0,.5);</div><div class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">1px</span> <span class="built_in">rgba</span>(255,255,255,.5);</div><div class="line">&#125;</div></pre></td></tr></table></figure><p><a href="http://jsfiddle.net/simurai/UsvLN/" target="_blank" rel="external">測試網頁</a> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;最近在-div-上加入-overflow-y-scroll-height-250px-讓-div-高度超過-250px-時就呈現-scrollbar-。-在-Windows-的機器上測試顯示都正常。&quot;&gt;&lt;a href=&quot;#最近在-div-上加入-overflow-
      
    
    </summary>
    
    
      <category term="mac" scheme="https://rainmakerho.github.io/tags/mac/"/>
    
      <category term="scrollbar" scheme="https://rainmakerho.github.io/tags/scrollbar/"/>
    
  </entry>
  
  <entry>
    <title>解析 SQL Server Deadlocks</title>
    <link href="https://rainmakerho.github.io/2017/11/16/2017012/"/>
    <id>https://rainmakerho.github.io/2017/11/16/2017012/</id>
    <published>2017-11-16T01:57:34.000Z</published>
    <updated>2017-12-11T09:54:30.985Z</updated>
    
    <content type="html"><![CDATA[<h4 id="最近收到了-Deadlock-的-trace-file，如下圖，"><a href="#最近收到了-Deadlock-的-trace-file，如下圖，" class="headerlink" title="最近收到了 Deadlock 的 trace file，如下圖，"></a>最近收到了 Deadlock 的 trace file，如下圖，</h4><img src="/2017/11/16/2017012/001.png" alt="slug Deadlock graph" title="slug Deadlock graph"><h4 id="如果直接看圖示資訊不夠清楚的話，可以將那個-trc-檔用-Notepad-來開，用-xml-方式檢視，就可以看到更多詳細的資料，如下圖，"><a href="#如果直接看圖示資訊不夠清楚的話，可以將那個-trc-檔用-Notepad-來開，用-xml-方式檢視，就可以看到更多詳細的資料，如下圖，" class="headerlink" title="如果直接看圖示資訊不夠清楚的話，可以將那個 trc 檔用 Notepad++ 來開，用 xml 方式檢視，就可以看到更多詳細的資料，如下圖，"></a>如果直接看圖示資訊不夠清楚的話，可以將那個 trc 檔用 Notepad++ 來開，用 xml 方式檢視，就可以看到更多詳細的資料，如下圖，</h4><img src="/2017/11/16/2017012/002.png" alt="slug View in Notepad++" title="slug View in Notepad++"><h4 id="當然如果這樣資訊又太雜的話，那還有一個方式，就是在那個-Deadlock-graph-那列上面按右鍵，選取「擷取事件資料-X-」將它另存成-xdl-檔，然後用-「SQL-Sentry-Plan-Explorer」-來檢視，如下圖，"><a href="#當然如果這樣資訊又太雜的話，那還有一個方式，就是在那個-Deadlock-graph-那列上面按右鍵，選取「擷取事件資料-X-」將它另存成-xdl-檔，然後用-「SQL-Sentry-Plan-Explorer」-來檢視，如下圖，" class="headerlink" title="當然如果這樣資訊又太雜的話，那還有一個方式，就是在那個 Deadlock graph 那列上面按右鍵，選取「擷取事件資料(X)」將它另存成 .xdl 檔，然後用 「SQL Sentry Plan Explorer」 來檢視，如下圖，"></a>當然如果這樣資訊又太雜的話，那還有一個方式，就是在那個 Deadlock graph 那列上面按右鍵，選取「擷取事件資料(X)」將它另存成 .xdl 檔，然後用 「<a href="http://www.sentryone.com/plan-explorer" target="_blank" rel="external">SQL Sentry Plan Explorer</a>」 來檢視，如下圖，</h4><img src="/2017/11/16/2017012/003.png" alt="slug saveAs XDL file" title="slug saveAs XDL file"><img src="/2017/11/16/2017012/004.png" alt="slug View in [SQL Sentry Plan Explorer]" title="slug View in [SQL Sentry Plan Explorer]"><h3 id="案例分享"><a href="#案例分享" class="headerlink" title="案例分享"></a>案例分享</h3><ul><li><h4 id="Reader-Writer-Deadlocks"><a href="#Reader-Writer-Deadlocks" class="headerlink" title="Reader-Writer Deadlocks"></a>Reader-Writer Deadlocks</h4><h4 id="當可以看到詳細資料後，就要來開始解析看看是什麼原因造成的，以上面那個例子來說，一個是-update-，另一個是-select-，而-Isolation-Level-是-repeatable-read-。是典型的-Reader-Writer-Deadlocks-，解法如下，"><a href="#當可以看到詳細資料後，就要來開始解析看看是什麼原因造成的，以上面那個例子來說，一個是-update-，另一個是-select-，而-Isolation-Level-是-repeatable-read-。是典型的-Reader-Writer-Deadlocks-，解法如下，" class="headerlink" title="當可以看到詳細資料後，就要來開始解析看看是什麼原因造成的，以上面那個例子來說，一個是 update ，另一個是 select ，而 Isolation Level 是 repeatable read 。是典型的 Reader-Writer Deadlocks ，解法如下，"></a>當可以看到詳細資料後，就要來開始解析看看是什麼原因造成的，以上面那個例子來說，一個是 update ，另一個是 select ，而 Isolation Level 是 repeatable read 。是典型的 Reader-Writer Deadlocks ，解法如下，</h4></li></ul><ul><li>SELECT 語句不要包在交易之中。</li><li>檢查 SELECT 語句是否有用到合適的 INDEX (使用 SEEK, 而非 SCAN)，如果已用 SEEK 了，就嘗試下面的解法。</li><li>使用 row-version based isolation level，例如 READ COMMITTED SNAPSHOT 或是 SNAPSHOT。</li><li>SELECT 語句使用 NOLOCK。</li></ul><ul><li><h4 id="Writer-Writer-Deadlocks"><a href="#Writer-Writer-Deadlocks" class="headerlink" title="Writer-Writer Deadlocks"></a>Writer-Writer Deadlocks</h4><img src="/2017/11/16/2017012/005.png" alt="slug Writer-Writer Deadlock" title="slug Writer-Writer Deadlock"><h4 id="從上圖來看都是針對同一個-Page-想要做-Update-而造成的-Deadlock，另外會有一個比較奇怪的就是「交換事件-exchangeEvent-」，是因為平行處理的原因，可能是沒用到適合的-index，所以才會讓-SQL-使用平行處理。"><a href="#從上圖來看都是針對同一個-Page-想要做-Update-而造成的-Deadlock，另外會有一個比較奇怪的就是「交換事件-exchangeEvent-」，是因為平行處理的原因，可能是沒用到適合的-index，所以才會讓-SQL-使用平行處理。" class="headerlink" title="從上圖來看都是針對同一個 Page 想要做 Update 而造成的 Deadlock，另外會有一個比較奇怪的就是「交換事件(exchangeEvent)」，是因為平行處理的原因，可能是沒用到適合的 index，所以才會讓 SQL 使用平行處理。"></a>從上圖來看都是針對同一個 Page 想要做 Update 而造成的 Deadlock，另外會有一個比較奇怪的就是「交換事件(exchangeEvent)」，是因為平行處理的原因，可能是沒用到適合的 index，所以才會讓 SQL 使用平行處理。</h4></li></ul><img src="/2017/11/16/2017012/006.png" alt="slug View in [SQL Sentry Plan Explorer]" title="slug View in [SQL Sentry Plan Explorer]"><h4 id="從上圖可以發現，使用相同的-Store-Procedure-，而-Lock-在-Delete-，可以判斷那個-Delete-應該是沒有使用到適合的-index-，所以在-Delete-時，會使用-Scan-的方式去找到要刪除的那一些資料，如下的執行計畫，"><a href="#從上圖可以發現，使用相同的-Store-Procedure-，而-Lock-在-Delete-，可以判斷那個-Delete-應該是沒有使用到適合的-index-，所以在-Delete-時，會使用-Scan-的方式去找到要刪除的那一些資料，如下的執行計畫，" class="headerlink" title="從上圖可以發現，使用相同的 Store Procedure ，而 Lock 在 Delete ，可以判斷那個 Delete 應該是沒有使用到適合的 index ，所以在 Delete 時，會使用 Scan 的方式去找到要刪除的那一些資料，如下的執行計畫，"></a>從上圖可以發現，使用相同的 Store Procedure ，而 Lock 在 Delete ，可以判斷那個 Delete 應該是沒有使用到適合的 index ，所以在 Delete 時，會使用 Scan 的方式去找到要刪除的那一些資料，如下的執行計畫，</h4><img src="/2017/11/16/2017012/007.png" alt="slug Delete 的執行計畫" title="slug Delete 的執行計畫"><h4 id="可以發現，它是真的是使用-SCAN-的方式。解法如下，"><a href="#可以發現，它是真的是使用-SCAN-的方式。解法如下，" class="headerlink" title="可以發現，它是真的是使用 SCAN 的方式。解法如下，"></a>可以發現，它是真的是使用 SCAN 的方式。解法如下，</h4><ul><li>建立適合的 index ，例如，</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">CREATE</span> NONCLUSTERED <span class="keyword">INDEX</span> NIDX_SRB_QNTSCORE_DATA_CASEID <span class="keyword">ON</span> dbo.SRB_QNTSCORE_DATA(CASEID);</div></pre></td></tr></table></figure><img src="/2017/11/16/2017012/008.png" alt="slug 建立過 index 的執行計畫" title="slug 建立過 index 的執行計畫"><h3 id="其他解決方式"><a href="#其他解決方式" class="headerlink" title="其他解決方式"></a>其他解決方式</h3><h4 id="除了上述的-Case-的解法外，有其他的解法，"><a href="#除了上述的-Case-的解法外，有其他的解法，" class="headerlink" title="除了上述的 Case 的解法外，有其他的解法，"></a>除了上述的 Case 的解法外，有其他的解法，</h4><ul><li>更新資料表的順序<br>針對 Tables 修改的順序也是要注意，例如 sp1 是更新 tblA 及 tblB ，另一個 sp2 則是先更新 tblB 再更新 tblA ，這樣子的順序交叉，就很容易造成 Deadlock。 所以在 更新的順序上也是要考量到哦!</li><li>Create Indexes with Included Columns<br>有一些 Key Lookup deadlock 就是因為在 Update 某 Table 時，除了更新了 Clustered Index 後，還需要再更新 Non Clustered Index，而另一個 Select 除了透過 Non Clustered Index 找到資料後，還需要到 Lookup 到 Clustered Index 取得資料。這樣子就有可能會互相 Lock 到而造成 Deadlock，這種狀況可以加入 Included Columns 來解決。</li><li>MAXDOP<br>有些光 SELECT 時，就會發生 Deadlock ，是因為平行處理造成的，解法就是調整 SQL 。如果還會有 Deadlock 的話，就設定 MAXDOP 看看能不能解決。</li></ul><h3 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h3><h4 id="SQL-Server-Deadlocks-by-Example"><a href="#SQL-Server-Deadlocks-by-Example" class="headerlink" title="SQL Server Deadlocks by Example"></a><a href="https://www.red-gate.com/simple-talk/sql/performance/sql-server-deadlocks-by-example/" target="_blank" rel="external">SQL Server Deadlocks by Example</a></h4>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;最近收到了-Deadlock-的-trace-file，如下圖，&quot;&gt;&lt;a href=&quot;#最近收到了-Deadlock-的-trace-file，如下圖，&quot; class=&quot;headerlink&quot; title=&quot;最近收到了 Deadlock 的 trace file，
      
    
    </summary>
    
    
      <category term="SQL" scheme="https://rainmakerho.github.io/tags/SQL/"/>
    
      <category term="deadlock" scheme="https://rainmakerho.github.io/tags/deadlock/"/>
    
      <category term="交換事件" scheme="https://rainmakerho.github.io/tags/%E4%BA%A4%E6%8F%9B%E4%BA%8B%E4%BB%B6/"/>
    
      <category term="exchangeEvent" scheme="https://rainmakerho.github.io/tags/exchangeEvent/"/>
    
  </entry>
  
  <entry>
    <title>Aspose.Words DocumentBuilder 加入 htmlTable 轉成 PDF 檔問題</title>
    <link href="https://rainmakerho.github.io/2017/11/09/2017011/"/>
    <id>https://rainmakerho.github.io/2017/11/09/2017011/</id>
    <published>2017-11-09T05:31:28.000Z</published>
    <updated>2017-12-11T09:57:52.242Z</updated>
    
    <content type="html"><![CDATA[<h3 id="最近同事透過-Aspose-Words-DocumentBuilder-的-InsertHtml-Method-加入-Html-的-Table-含-css-，另存成-PDF-檔後，居然發現本來在-Word-檔中看起來好好的，PDF-檔中的-Table-卻會超過頁面，如下，"><a href="#最近同事透過-Aspose-Words-DocumentBuilder-的-InsertHtml-Method-加入-Html-的-Table-含-css-，另存成-PDF-檔後，居然發現本來在-Word-檔中看起來好好的，PDF-檔中的-Table-卻會超過頁面，如下，" class="headerlink" title="最近同事透過 Aspose.Words DocumentBuilder 的 InsertHtml Method 加入 Html 的 Table (含 css )，另存成 PDF 檔後，居然發現本來在 Word 檔中看起來好好的，PDF 檔中的 Table 卻會超過頁面，如下，"></a>最近同事透過 Aspose.Words DocumentBuilder 的 InsertHtml Method 加入 Html 的 Table (含 css )，另存成 PDF 檔後，居然發現本來在 Word 檔中看起來好好的，PDF 檔中的 Table 卻會超過頁面，如下，</h3><img src="/2017/11/09/2017011/exceedPage.png" alt="slug" title="slug"><h3 id="測試程式如下，"><a href="#測試程式如下，" class="headerlink" title="測試程式如下，"></a>測試程式如下，</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> htmlTable = <span class="string">@"&lt;style&gt;</span></div><div class="line"><span class="string">.table &#123;</span></div><div class="line"><span class="string">width: auto;</span></div><div class="line"><span class="string">table-layout:fixed;</span></div><div class="line"><span class="string">&#125;</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">.table, .table tr &#123;</span></div><div class="line"><span class="string">height: 40px;</span></div><div class="line"><span class="string">&#125;</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">.table, .table td &#123;</span></div><div class="line"><span class="string">border-collapse: collapse;</span></div><div class="line"><span class="string">border: 1px solid #000000;</span></div><div class="line"><span class="string">padding:2px 5px 2px 5px;</span></div><div class="line"><span class="string">&#125;</span></div><div class="line"><span class="string">&lt;/style&gt;</span></div><div class="line"><span class="string">&lt;table class='table' style='width: 100%;'&gt;</span></div><div class="line"><span class="string">&lt;colgroup&gt;</span></div><div class="line"><span class="string">&lt;col style='width: 15%;'&gt;</span></div><div class="line"><span class="string">&lt;col style='width: 35%;'&gt;</span></div><div class="line"><span class="string">&lt;col style='width: 15%;'&gt;</span></div><div class="line"><span class="string">&lt;col style='width: 35%;'&gt;</span></div><div class="line"><span class="string">&lt;/colgroup&gt;</span></div><div class="line"><span class="string">&lt;tbody&gt;</span></div><div class="line"><span class="string">&lt;tr&gt;</span></div><div class="line"><span class="string">&lt;td&gt;TITLE1：&lt;/td&gt;</span></div><div class="line"><span class="string">&lt;td&gt;&lt;/td&gt;</span></div><div class="line"><span class="string">&lt;td&gt;TITLE2：&lt;/td&gt;</span></div><div class="line"><span class="string">&lt;td&gt;106/10/14 22:26&lt;/td&gt;</span></div><div class="line"><span class="string">&lt;/tr&gt;</span></div><div class="line"><span class="string">&lt;tr&gt;</span></div><div class="line"><span class="string">&lt;td&gt;TITLE3：&lt;/td&gt;</span></div><div class="line"><span class="string">&lt;td colspan='3'&gt;測試測試測試測試測試測試測試測試測試測試測試測試測試測試測試測試測試測試測試測試測試測試測試測試測試測試測試測試測試測試測試測試測試測試測試測試測試測試測試測試測試測試測試測試測試測試測試測試&lt;/td&gt;</span></div><div class="line"><span class="string">&lt;/tr&gt;</span></div><div class="line"><span class="string">&lt;/tbody&gt;</span></div><div class="line"><span class="string">&lt;/table&gt;"</span>;</div><div class="line"><span class="keyword">var</span> doc = <span class="keyword">new</span> Document();</div><div class="line">doc.Styles.DefaultParagraphFormat.Style.Font.NameFarEast = <span class="string">"標楷體"</span>;</div><div class="line">doc.Styles.DefaultParagraphFormat.Style.Font.NameAscii = <span class="string">"Times New Roman"</span>;</div><div class="line">doc.Styles.DefaultParagraphFormat.Style.Font.Size = <span class="number">16</span>D;</div><div class="line"><span class="keyword">var</span> builder = <span class="keyword">new</span> DocumentBuilder(doc);</div><div class="line">builder.InsertHtml(htmlTable, <span class="literal">true</span>);</div><div class="line">doc.Save(<span class="string">"TEST.doc"</span>, SaveFormat.Doc);</div><div class="line">doc.Save(<span class="string">"TEST.pdf"</span>, SaveFormat.Pdf);</div></pre></td></tr></table></figure><h3 id="原廠的回覆設定-CompatibilityOptions-GrowAutofit-選項為-false-就可以了，如下，"><a href="#原廠的回覆設定-CompatibilityOptions-GrowAutofit-選項為-false-就可以了，如下，" class="headerlink" title="原廠的回覆設定 CompatibilityOptions.GrowAutofit 選項為 false 就可以了，如下，"></a>原廠的回覆設定 CompatibilityOptions.GrowAutofit 選項為 false 就可以了，如下，</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> doc = <span class="keyword">new</span> Document();</div><div class="line">doc.Styles.DefaultParagraphFormat.Style.Font.NameFarEast = <span class="string">"標楷體"</span>;</div><div class="line">doc.Styles.DefaultParagraphFormat.Style.Font.NameAscii = <span class="string">"Times New Roman"</span>;</div><div class="line">doc.Styles.DefaultParagraphFormat.Style.Font.Size = <span class="number">16</span>D;</div><div class="line"><span class="keyword">var</span> builder = <span class="keyword">new</span> DocumentBuilder(doc);</div><div class="line">builder.InsertHtml(htmlTable, <span class="literal">true</span>);</div><div class="line">doc.Save(<span class="string">"TEST.doc"</span>, SaveFormat.Doc);</div><div class="line">doc.CompatibilityOptions.GrowAutofit = <span class="literal">false</span>;</div><div class="line">doc.Save(<span class="string">"TEST.pdf"</span>, SaveFormat.Pdf);</div></pre></td></tr></table></figure><h3 id="果然設定-Document-的-CompatibilityOptions-GrowAutofit-為-false-，-PDF-中的-table-就不會超過頁面了，詳細可以參考DocumentBuilder-InsertHtml-Save-as-pdf-will-exceed-page。"><a href="#果然設定-Document-的-CompatibilityOptions-GrowAutofit-為-false-，-PDF-中的-table-就不會超過頁面了，詳細可以參考DocumentBuilder-InsertHtml-Save-as-pdf-will-exceed-page。" class="headerlink" title="果然設定 Document 的 CompatibilityOptions.GrowAutofit 為 false ， PDF 中的 table 就不會超過頁面了，詳細可以參考DocumentBuilder InsertHtml Save as pdf will exceed page。"></a>果然設定 Document 的 CompatibilityOptions.GrowAutofit 為 false ， PDF 中的 table 就不會超過頁面了，詳細可以參考<a href="https://forum.aspose.com/t/documentbuilder-inserthtml-save-as-pdf-will-exceed-page/165825" target="_blank" rel="external">DocumentBuilder InsertHtml Save as pdf will exceed page</a>。</h3><h3 id="後來同事用巢狀的-html-table-去試，這次變成不同-TD-的內容會疉在一起，如下，"><a href="#後來同事用巢狀的-html-table-去試，這次變成不同-TD-的內容會疉在一起，如下，" class="headerlink" title="後來同事用巢狀的 html table 去試，這次變成不同 TD 的內容會疉在一起，如下，"></a>後來同事用巢狀的 html table 去試，這次變成不同 TD 的內容會疉在一起，如下，</h3><img src="/2017/11/09/2017011/002.png" alt="slug" title="slug"><h3 id="測試的-html-table-如下，"><a href="#測試的-html-table-如下，" class="headerlink" title="測試的 html table 如下，"></a>測試的 html table 如下，</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> htmlTable2 = <span class="string">@"&lt;style&gt;</span></div><div class="line"><span class="string">div[data-speed-id=seal-box] &#123;</span></div><div class="line"><span class="string">margin-top: 20px;</span></div><div class="line"><span class="string">margin-left: 0px;</span></div><div class="line"><span class="string">margin-right: 0px;</span></div><div class="line"><span class="string">margin-bottom: 0px;</span></div><div class="line"><span class="string">height: 20px;</span></div><div class="line"><span class="string">&#125;</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">td[data-speed-sealouid] &#123;</span></div><div class="line"><span class="string">width: 60px;</span></div><div class="line"><span class="string">&#125;</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">table[data-speed-id='seal-table'] &#123;</span></div><div class="line"><span class="string">border: 1px solid red !important;</span></div><div class="line"><span class="string">color: red !important;</span></div><div class="line"><span class="string">border-collapse: initial;</span></div><div class="line"><span class="string">&#125;</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">table[data-speed-id=seal-table] td &#123;</span></div><div class="line"><span class="string">padding: 0px !important;</span></div><div class="line"><span class="string">margin: 0px !important;</span></div><div class="line"><span class="string">border: 0px;</span></div><div class="line"><span class="string">border-collapse: collapse;</span></div><div class="line"><span class="string">border-spacing: 0px !important;</span></div><div class="line"><span class="string">vertical-align: middle !important;</span></div><div class="line"><span class="string">&#125;</span></div><div class="line"><span class="string">&lt;/style&gt;</span></div><div class="line"><span class="string">&lt;div style='color: blue;'&gt;下面是原本職章結構直接輸出，&lt;/div&gt;</span></div><div class="line"><span class="string">&lt;table&gt;</span></div><div class="line"><span class="string">&lt;colgroup&gt;</span></div><div class="line"><span class="string">&lt;col style='width:35%;'&gt;</span></div><div class="line"><span class="string">&lt;col style='width:65%;'&gt;</span></div><div class="line"><span class="string">&lt;/colgroup&gt;</span></div><div class="line"><span class="string">&lt;tbody&gt;</span></div><div class="line"><span class="string">&lt;tr&gt;</span></div><div class="line"><span class="string">&lt;td&gt;</span></div><div class="line"><span class="string">&lt;div style='margin-top: 10px;' data-speed-id='seal-box'&gt;</span></div><div class="line"><span class="string">&lt;table&gt;</span></div><div class="line"><span class="string">&lt;tbody&gt;</span></div><div class="line"><span class="string">&lt;tr&gt;</span></div><div class="line"><span class="string">&lt;td&gt;</span></div><div class="line"><span class="string">&lt;table data-speed-id='seal-table'&gt;</span></div><div class="line"><span class="string">&lt;tbody&gt;</span></div><div class="line"><span class="string">&lt;tr&gt;</span></div><div class="line"><span class="string">&lt;td style='font-size: 10px;' data-speed-sealouid='10110'&gt;文化資源司&lt;/td&gt;</span></div><div class="line"><span class="string">&lt;td style='font-size: 16px;' rowspan='2'&gt;亂馬客&lt;/td&gt;</span></div><div class="line"><span class="string">&lt;/tr&gt;</span></div><div class="line"><span class="string">&lt;tr&gt;</span></div><div class="line"><span class="string">&lt;td style='font-size: 10px;'&gt;科員&lt;/td&gt;</span></div><div class="line"><span class="string">&lt;/tr&gt;</span></div><div class="line"><span class="string">&lt;/tbody&gt;</span></div><div class="line"><span class="string">&lt;/table&gt;</span></div><div class="line"><span class="string">&lt;/td&gt;</span></div><div class="line"><span class="string">&lt;/tr&gt;</span></div><div class="line"><span class="string">&lt;tr&gt;</span></div><div class="line"><span class="string">&lt;td style='text-align: center; font-size: 12px;'&gt;106/10/18 10:36&lt;/td&gt;</span></div><div class="line"><span class="string">&lt;/tr&gt;</span></div><div class="line"><span class="string">&lt;/tbody&gt;</span></div><div class="line"><span class="string">&lt;/table&gt;</span></div><div class="line"><span class="string">&lt;/div&gt;</span></div><div class="line"><span class="string">&lt;/td&gt;</span></div><div class="line"><span class="string">&lt;td style='padding-left: 70px;'&gt;</span></div><div class="line"><span class="string">案係亂馬客測試文化局將於本(105)年10月29日召開「106亂馬客測試社區營造平台工作小組第九十次會議」，本部為列席單位，擬視業務狀況再行派員，當否?請核示。文陳閱後存查。</span></div><div class="line"><span class="string">&lt;/td&gt;</span></div><div class="line"><span class="string">&lt;/tr&gt;</span></div><div class="line"><span class="string">&lt;/tbody&gt;</span></div><div class="line"><span class="string">&lt;/table&gt;"</span>;</div></pre></td></tr></table></figure><h3 id="原廠建議可以改-TD-的-LeftPadding-來解這問題，詳細可以參考DocumentBuilder-InsertHtml-nested-table-Save-as-pdf-some-TD-will-disapper，不要使用-UpdateTableLayout-哦"><a href="#原廠建議可以改-TD-的-LeftPadding-來解這問題，詳細可以參考DocumentBuilder-InsertHtml-nested-table-Save-as-pdf-some-TD-will-disapper，不要使用-UpdateTableLayout-哦" class="headerlink" title="原廠建議可以改 TD 的 LeftPadding 來解這問題，詳細可以參考DocumentBuilder InsertHtml (nested table) Save as pdf , some TD will disapper，不要使用 UpdateTableLayout 哦!"></a>原廠建議可以改 TD 的 LeftPadding 來解這問題，詳細可以參考<a href="https://forum.aspose.com/t/documentbuilder-inserthtml-nested-table-save-as-pdf-some-td-will-disapper/166107" target="_blank" rel="external">DocumentBuilder InsertHtml (nested table) Save as pdf , some TD will disapper</a>，不要使用 UpdateTableLayout 哦!</h3><h3 id="所以我在-TD-中加入-style-’padding-left-70px-’-來看，右邊的-TD-內容果然往右移了，但左邊的那個職章-Table-卻還是小小的，如下，"><a href="#所以我在-TD-中加入-style-’padding-left-70px-’-來看，右邊的-TD-內容果然往右移了，但左邊的那個職章-Table-卻還是小小的，如下，" class="headerlink" title="所以我在 TD 中加入 style=’padding-left: 70px;’ 來看，右邊的 TD 內容果然往右移了，但左邊的那個職章 Table 卻還是小小的，如下，"></a>所以我在 TD 中加入 style=’padding-left: 70px;’ 來看，右邊的 TD 內容果然往右移了，但左邊的那個職章 Table 卻還是小小的，如下，</h3><img src="/2017/11/09/2017011/003.png" alt="slug" title="slug"><h3 id="測試的-Html-如下，"><a href="#測試的-Html-如下，" class="headerlink" title="測試的 Html 如下，"></a>測試的 Html 如下，</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> htmlTable3 = <span class="string">@"&lt;style&gt;</span></div><div class="line"><span class="string">div[data-speed-id=seal-box] &#123;</span></div><div class="line"><span class="string">margin-top: 20px;</span></div><div class="line"><span class="string">margin-left: 0px;</span></div><div class="line"><span class="string">margin-right: 0px;</span></div><div class="line"><span class="string">margin-bottom: 0px;</span></div><div class="line"><span class="string">height: 20px;</span></div><div class="line"><span class="string">&#125;</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">td[data-speed-sealouid] &#123;</span></div><div class="line"><span class="string">width: 60px;</span></div><div class="line"><span class="string">&#125;</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">table[data-speed-id='seal-table'] &#123;</span></div><div class="line"><span class="string">border: 1px solid red !important;</span></div><div class="line"><span class="string">color: red !important;</span></div><div class="line"><span class="string">border-collapse: initial;</span></div><div class="line"><span class="string">&#125;</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">table[data-speed-id=seal-table] td &#123;</span></div><div class="line"><span class="string">padding: 0px !important;</span></div><div class="line"><span class="string">margin: 0px !important;</span></div><div class="line"><span class="string">border: 0px;</span></div><div class="line"><span class="string">border-collapse: collapse;</span></div><div class="line"><span class="string">border-spacing: 0px !important;</span></div><div class="line"><span class="string">vertical-align: middle !important;</span></div><div class="line"><span class="string">&#125;</span></div><div class="line"><span class="string">&lt;/style&gt;</span></div><div class="line"><span class="string">&lt;div style='color: blue;'&gt;下面是原本職章結構直接輸出，&lt;/div&gt;</span></div><div class="line"><span class="string">&lt;table&gt;</span></div><div class="line"><span class="string">&lt;colgroup&gt;</span></div><div class="line"><span class="string">&lt;col style='width:35%;'&gt;</span></div><div class="line"><span class="string">&lt;col style='width:65%;'&gt;</span></div><div class="line"><span class="string">&lt;/colgroup&gt;</span></div><div class="line"><span class="string">&lt;tbody&gt;</span></div><div class="line"><span class="string">&lt;tr&gt;</span></div><div class="line"><span class="string">&lt;td&gt;</span></div><div class="line"><span class="string">&lt;div style='margin-top: 10px;' data-speed-id='seal-box'&gt;</span></div><div class="line"><span class="string">&lt;table&gt;</span></div><div class="line"><span class="string">&lt;tbody&gt;</span></div><div class="line"><span class="string">&lt;tr&gt;</span></div><div class="line"><span class="string">&lt;td&gt;</span></div><div class="line"><span class="string">&lt;table data-speed-id='seal-table'&gt;</span></div><div class="line"><span class="string">&lt;tbody&gt;</span></div><div class="line"><span class="string">&lt;tr&gt;</span></div><div class="line"><span class="string">&lt;td style='font-size: 10px;' data-speed-sealouid='10110'&gt;文化資源司&lt;/td&gt;</span></div><div class="line"><span class="string">&lt;td style='font-size: 16px;' rowspan='2'&gt;亂馬客&lt;/td&gt;</span></div><div class="line"><span class="string">&lt;/tr&gt;</span></div><div class="line"><span class="string">&lt;tr&gt;</span></div><div class="line"><span class="string">&lt;td style='font-size: 10px;'&gt;科員&lt;/td&gt;</span></div><div class="line"><span class="string">&lt;/tr&gt;</span></div><div class="line"><span class="string">&lt;/tbody&gt;</span></div><div class="line"><span class="string">&lt;/table&gt;</span></div><div class="line"><span class="string">&lt;/td&gt;</span></div><div class="line"><span class="string">&lt;/tr&gt;</span></div><div class="line"><span class="string">&lt;tr&gt;</span></div><div class="line"><span class="string">&lt;td style='text-align: center; font-size: 12px;'&gt;106/10/18 10:36&lt;/td&gt;</span></div><div class="line"><span class="string">&lt;/tr&gt;</span></div><div class="line"><span class="string">&lt;/tbody&gt;</span></div><div class="line"><span class="string">&lt;/table&gt;</span></div><div class="line"><span class="string">&lt;/div&gt;</span></div><div class="line"><span class="string">&lt;/td&gt;</span></div><div class="line"><span class="string">&lt;td style='padding-left: 70px;'&gt;</span></div><div class="line"><span class="string">案係亂馬客測試文化局將於本(105)年10月29日召開「106亂馬客測試社區營造平台工作小組第九十次會議」，本部為列席單位，擬視業務狀況再行派員，當否?請核示。文陳閱後存查。</span></div><div class="line"><span class="string">&lt;/td&gt;</span></div><div class="line"><span class="string">&lt;/tr&gt;</span></div><div class="line"><span class="string">&lt;/tbody&gt;</span></div><div class="line"><span class="string">&lt;/table&gt;"</span>;</div></pre></td></tr></table></figure><h3 id="那只好在職章的那個-Table-中設定固定的寬度，最後-PDF-的結果如下，"><a href="#那只好在職章的那個-Table-中設定固定的寬度，最後-PDF-的結果如下，" class="headerlink" title="那只好在職章的那個 Table 中設定固定的寬度，最後 PDF 的結果如下，"></a>那只好在職章的那個 Table 中設定固定的寬度，最後 PDF 的結果如下，</h3><img src="/2017/11/09/2017011/004.png" alt="slug" title="slug"><h3 id="最後的測試程式如下，"><a href="#最後的測試程式如下，" class="headerlink" title="最後的測試程式如下，"></a>最後的測試程式如下，</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> htmlTable4 = <span class="string">@"&lt;style&gt;</span></div><div class="line"><span class="string">div[data-speed-id=seal-box] &#123;</span></div><div class="line"><span class="string">margin-top: 20px;</span></div><div class="line"><span class="string">margin-left: 0px;</span></div><div class="line"><span class="string">margin-right: 0px;</span></div><div class="line"><span class="string">margin-bottom: 0px;</span></div><div class="line"><span class="string">height: 20px;</span></div><div class="line"><span class="string">&#125;</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">td[data-speed-sealouid] &#123;</span></div><div class="line"><span class="string">width: 60px;</span></div><div class="line"><span class="string">&#125;</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">table[data-speed-id='seal-table'] &#123;</span></div><div class="line"><span class="string">border: 1px solid red !important;</span></div><div class="line"><span class="string">color: red !important;</span></div><div class="line"><span class="string">border-collapse: initial;</span></div><div class="line"><span class="string">&#125;</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">table[data-speed-id=seal-table] td &#123;</span></div><div class="line"><span class="string">padding: 0px !important;</span></div><div class="line"><span class="string">margin: 0px !important;</span></div><div class="line"><span class="string">border: 0px;</span></div><div class="line"><span class="string">border-collapse: collapse;</span></div><div class="line"><span class="string">border-spacing: 0px !important;</span></div><div class="line"><span class="string">vertical-align: middle !important;</span></div><div class="line"><span class="string">&#125;</span></div><div class="line"><span class="string">&lt;/style&gt;</span></div><div class="line"><span class="string">&lt;div style='color: blue;'&gt;下面是原本職章結構直接輸出，&lt;/div&gt;</span></div><div class="line"><span class="string">&lt;table&gt;</span></div><div class="line"><span class="string">&lt;colgroup&gt;</span></div><div class="line"><span class="string">&lt;col style='width:35%;'&gt;</span></div><div class="line"><span class="string">&lt;col style='width:65%;'&gt;</span></div><div class="line"><span class="string">&lt;/colgroup&gt;</span></div><div class="line"><span class="string">&lt;tbody&gt;</span></div><div class="line"><span class="string">&lt;tr&gt;</span></div><div class="line"><span class="string">&lt;td&gt;</span></div><div class="line"><span class="string">&lt;div style='margin-top: 10px;' data-speed-id='seal-box'&gt;</span></div><div class="line"><span class="string">&lt;table width='120px'&gt;</span></div><div class="line"><span class="string">&lt;tbody&gt;</span></div><div class="line"><span class="string">&lt;tr&gt;</span></div><div class="line"><span class="string">&lt;td&gt;</span></div><div class="line"><span class="string">&lt;table data-speed-id='seal-table' &gt;</span></div><div class="line"><span class="string">&lt;tbody&gt;</span></div><div class="line"><span class="string">&lt;tr&gt;</span></div><div class="line"><span class="string">&lt;td style='font-size: 10px;' data-speed-sealouid='10110'&gt;文化資源司&lt;/td&gt;</span></div><div class="line"><span class="string">&lt;td style='font-size: 16px;' rowspan='2'&gt;亂馬客&lt;/td&gt;</span></div><div class="line"><span class="string">&lt;/tr&gt;</span></div><div class="line"><span class="string">&lt;tr&gt;</span></div><div class="line"><span class="string">&lt;td style='font-size: 10px;'&gt;科員&lt;/td&gt;</span></div><div class="line"><span class="string">&lt;/tr&gt;</span></div><div class="line"><span class="string">&lt;/tbody&gt;</span></div><div class="line"><span class="string">&lt;/table&gt;</span></div><div class="line"><span class="string">&lt;/td&gt;</span></div><div class="line"><span class="string">&lt;/tr&gt;</span></div><div class="line"><span class="string">&lt;tr&gt;</span></div><div class="line"><span class="string">&lt;td style='text-align: center; font-size: 12px;'&gt;106/10/18 10:36&lt;/td&gt;</span></div><div class="line"><span class="string">&lt;/tr&gt;</span></div><div class="line"><span class="string">&lt;/tbody&gt;</span></div><div class="line"><span class="string">&lt;/table&gt;</span></div><div class="line"><span class="string">&lt;/div&gt;</span></div><div class="line"><span class="string">&lt;/td&gt;</span></div><div class="line"><span class="string">&lt;td style='padding-left: 90px;'&gt;</span></div><div class="line"><span class="string">案係亂馬客測試文化局將於本(105)年10月29日召開「106亂馬客測試社區營造平台工作小組第九十次會議」，本部為列席單位，擬視業務狀況再行派員，當否?請核示。文陳閱後存查。</span></div><div class="line"><span class="string">&lt;/td&gt;</span></div><div class="line"><span class="string">&lt;/tr&gt;</span></div><div class="line"><span class="string">&lt;/tbody&gt;</span></div><div class="line"><span class="string">&lt;/table&gt;"</span>;</div><div class="line"><span class="keyword">var</span> doc = <span class="keyword">new</span> Document();</div><div class="line">doc.Styles.DefaultParagraphFormat.Style.Font.NameFarEast = <span class="string">"標楷體"</span>;</div><div class="line">doc.Styles.DefaultParagraphFormat.Style.Font.NameAscii = <span class="string">"Times New Roman"</span>;</div><div class="line">doc.Styles.DefaultParagraphFormat.Style.Font.Size = <span class="number">16</span>D;</div><div class="line"><span class="keyword">var</span> builder = <span class="keyword">new</span> DocumentBuilder(doc);</div><div class="line">builder.InsertHtml(htmlTable4, <span class="literal">true</span>);</div><div class="line">doc.CompatibilityOptions.GrowAutofit = <span class="literal">false</span>;</div><div class="line">doc.Save(<span class="string">"TEST.pdf"</span>, SaveFormat.Pdf);</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;最近同事透過-Aspose-Words-DocumentBuilder-的-InsertHtml-Method-加入-Html-的-Table-含-css-，另存成-PDF-檔後，居然發現本來在-Word-檔中看起來好好的，PDF-檔中的-Table-卻會超過頁面
      
    
    </summary>
    
    
      <category term="Aspose.Words" scheme="https://rainmakerho.github.io/tags/Aspose-Words/"/>
    
      <category term="PDF" scheme="https://rainmakerho.github.io/tags/PDF/"/>
    
      <category term="CompatibilityOptions" scheme="https://rainmakerho.github.io/tags/CompatibilityOptions/"/>
    
      <category term="GrowAutofit" scheme="https://rainmakerho.github.io/tags/GrowAutofit/"/>
    
      <category term="DocumentBuilder" scheme="https://rainmakerho.github.io/tags/DocumentBuilder/"/>
    
      <category term="InsertHtml" scheme="https://rainmakerho.github.io/tags/InsertHtml/"/>
    
  </entry>
  
  <entry>
    <title>log4net 檔名使用「大寫」字母造成檔案被覆寫問題</title>
    <link href="https://rainmakerho.github.io/2017/10/27/2017010/"/>
    <id>https://rainmakerho.github.io/2017/10/27/2017010/</id>
    <published>2017-10-27T05:28:10.000Z</published>
    <updated>2017-12-11T09:58:55.969Z</updated>
    
    <content type="html"><![CDATA[<h3 id="事情是這樣子的…我們有個專案裡面有使用-log4net-v-1-2-11-0-，在案子裡面是使用-RollingFileAppender-，-rollingStyle-是-Composite-，依日期時間及檔案大小來切檔，設定檔如下，"><a href="#事情是這樣子的…我們有個專案裡面有使用-log4net-v-1-2-11-0-，在案子裡面是使用-RollingFileAppender-，-rollingStyle-是-Composite-，依日期時間及檔案大小來切檔，設定檔如下，" class="headerlink" title="事情是這樣子的…我們有個專案裡面有使用 log4net v 1.2.11.0 ，在案子裡面是使用 RollingFileAppender ， rollingStyle 是 Composite ，依日期時間及檔案大小來切檔，設定檔如下，"></a>事情是這樣子的…我們有個專案裡面有使用 log4net v 1.2.11.0 ，在案子裡面是使用 RollingFileAppender ， rollingStyle 是 Composite ，依日期時間及檔案大小來切檔，設定檔如下，</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div></pre></td><td class="code"><pre><div class="line">&lt;log4net debug=&quot;true&quot;&gt;</div><div class="line">&lt;appender name=&quot;DBRollingFileAppender&quot; type=&quot;log4net.Appender.RollingFileAppender&quot;&gt;</div><div class="line">  &lt;file type=&quot;log4net.Util.PatternString&quot; value=&quot;[你的路徑]\temp\%date&#123;yyyy&#125;\%date&#123;MM&#125;\%date&#123;dd&#125;\&quot; /&gt;</div><div class="line">  &lt;staticLogFileName value=&quot;false&quot;/&gt;</div><div class="line">  &lt;appendToFile value=&quot;true&quot;/&gt;</div><div class="line">  &lt;!--設定檔案分割依據Date和Size--&gt;</div><div class="line">  &lt;rollingStyle value=&quot;Composite&quot;/&gt;</div><div class="line">  &lt;!--設定每個檔案的大小--&gt;</div><div class="line">  &lt;MaximumFileSize value=&quot;250KB&quot; /&gt;</div><div class="line">  &lt;!--設定分割檔案的最大數量--&gt;</div><div class="line">  &lt;maxSizeRollBackups value=&quot;2000&quot; /&gt;</div><div class="line">  &lt;CountDirection value=&quot;1&quot; /&gt;</div><div class="line">  &lt;!--log檔案的命名--&gt;</div><div class="line">  &lt;datePattern value=&quot;yyyy-MM-dd-HH-DB2.lo\g&quot;/&gt;</div><div class="line">  &lt;layout type=&quot;log4net.Layout.PatternLayout&quot;&gt;</div><div class="line">&lt;conversionPattern value=&quot;[%date] [%-5level] From %logger%newline  %file:%line [%property&#123;NDC&#125;]%newline  %message%newline%newline&quot; /&gt;</div><div class="line">  &lt;/layout&gt;</div><div class="line">  &lt;filter type=&quot;log4net.Filter.LevelRangeFilter&quot;&gt;</div><div class="line">&lt;param name=&quot;LevelMin&quot; value=&quot;INFO&quot;/&gt;</div><div class="line">&lt;param name=&quot;LevelMax&quot; value=&quot;INFO&quot;/&gt;</div><div class="line">  &lt;/filter&gt;</div><div class="line">&lt;/appender&gt;</div><div class="line">&lt;appender name=&quot;SystemRollingFileAppender&quot; type=&quot;log4net.Appender.RollingFileAppender&quot;&gt;</div><div class="line">  &lt;!--存放log檔案的路徑(%property&#123;LogPath&#125;屬性請勿任意修改)--&gt;</div><div class="line">  &lt;file type=&quot;log4net.Util.PatternString&quot; value=&quot;[你的路徑]\temp\%date&#123;yyyy&#125;\%date&#123;MM&#125;\%date&#123;dd&#125;\&quot; /&gt;</div><div class="line">  &lt;staticLogFileName value=&quot;false&quot;/&gt;</div><div class="line">  &lt;appendToFile value=&quot;true&quot;/&gt;</div><div class="line">  &lt;!--設定檔案分割依據Date和Size--&gt;</div><div class="line">  &lt;rollingStyle value=&quot;Composite&quot;/&gt;</div><div class="line">  &lt;!--設定每個檔案的大小--&gt;</div><div class="line">  &lt;MaximumFileSize value=&quot;20KB&quot; /&gt;</div><div class="line">  &lt;!--設定分割檔案的最大數量--&gt;</div><div class="line">  &lt;maxSizeRollBackups value=&quot;2000&quot; /&gt;</div><div class="line">  &lt;lockingModel type=&quot;log4net.Appender.FileAppender+MinimalLock&quot; /&gt;</div><div class="line">  &lt;CountDirection value=&quot;1&quot; /&gt;</div><div class="line">  &lt;!--log檔案的命名--&gt;</div><div class="line">  &lt;datePattern value=&quot;yyyy-MM-dd-HH-DB.lo\g&quot;/&gt;</div><div class="line">  &lt;layout type=&quot;log4net.Layout.PatternLayout&quot;&gt;</div><div class="line">&lt;conversionPattern value=&quot;%d&#123;yyyy-MM-dd HH:mm&#125; %level %logger %ndc - %message%newline&quot; /&gt;</div><div class="line">  &lt;/layout&gt;</div><div class="line">  &lt;filter type=&quot;log4net.Filter.LevelRangeFilter&quot;&gt;</div><div class="line">&lt;param name=&quot;LevelMin&quot; value=&quot;DEBUG&quot;/&gt;</div><div class="line">&lt;param name=&quot;LevelMax&quot; value=&quot;DEBUG&quot;/&gt;</div><div class="line">  &lt;/filter&gt;</div><div class="line">&lt;/appender&gt;</div><div class="line">&lt;!--紀錄錯誤訊息--&gt;</div><div class="line">&lt;appender name=&quot;ErrorRollingFileAppender&quot; type=&quot;log4net.Appender.RollingFileAppender&quot;&gt;</div><div class="line">  &lt;!--存放log檔案的路徑--&gt;</div><div class="line">  &lt;file type=&quot;log4net.Util.PatternString&quot; value=&quot;[你的路徑]\temp\%date&#123;yyyy&#125;\%date&#123;MM&#125;\%date&#123;dd&#125;\&quot; /&gt;</div><div class="line">  &lt;staticLogFileName value=&quot;false&quot;/&gt;</div><div class="line">  &lt;appendToFile value=&quot;true&quot;/&gt;</div><div class="line">  &lt;!--設定檔案分割依據Date和Size--&gt;</div><div class="line">  &lt;rollingStyle value=&quot;Composite&quot;/&gt;</div><div class="line">  &lt;!--設定每個檔案的大小--&gt;</div><div class="line">  &lt;MaximumFileSize value=&quot;250KB&quot; /&gt;</div><div class="line">  &lt;!--設定分割檔案的最大數量--&gt;</div><div class="line">  &lt;maxSizeRollBackups value=&quot;2000&quot; /&gt;</div><div class="line">  &lt;!--log檔案的命名--&gt;</div><div class="line">  &lt;datePattern value=&quot;yyyy-MM-dd-HH-DB3.lo\g&quot;/&gt;</div><div class="line">  &lt;layout type=&quot;log4net.Layout.PatternLayout&quot;&gt;</div><div class="line">&lt;conversionPattern value=&quot;[%date] [%-5level] From %logger%newline  %file:%line [%property&#123;NDC&#125;]%newline  %message%newline%newline&quot; /&gt;</div><div class="line">  &lt;/layout&gt;</div><div class="line">  &lt;filter type=&quot;log4net.Filter.LevelRangeFilter&quot;&gt;</div><div class="line">&lt;param name=&quot;LevelMin&quot; value=&quot;WARN&quot;/&gt;</div><div class="line">  &lt;/filter&gt;</div><div class="line">&lt;/appender&gt;</div><div class="line">&lt;root&gt;</div><div class="line">  &lt;level value=&quot;ALL&quot;/&gt;</div><div class="line">  &lt;appender-ref ref=&quot;DBRollingFileAppender&quot;/&gt;</div><div class="line">  &lt;appender-ref ref=&quot;SystemRollingFileAppender&quot;/&gt;</div><div class="line">  &lt;appender-ref ref=&quot;ErrorRollingFileAppender&quot;/&gt;</div><div class="line">&lt;/root&gt;</div><div class="line">&lt;/log4net&gt;</div></pre></td></tr></table></figure><h3 id="這樣子的設定-log4net-會在-temp-目錄再依-年、月、日-建立目錄，然後產生-0-1-…的檔案如下圖，"><a href="#這樣子的設定-log4net-會在-temp-目錄再依-年、月、日-建立目錄，然後產生-0-1-…的檔案如下圖，" class="headerlink" title="這樣子的設定 log4net 會在 temp 目錄再依 年、月、日 建立目錄，然後產生 .0, .1 …的檔案如下圖，"></a>這樣子的設定 log4net 會在 temp 目錄再依 年、月、日 建立目錄，然後產生 .0, .1 …的檔案如下圖，</h3><img src="/2017/10/27/2017010/001.png" alt="slug" title="slug"><h3 id="這樣子的-log-在測試機都正常運作，唯獨在正式機卻會發生第-1-個檔案-0-的-log-檔有正常產生，但-1-的檔案卻一直被重覆的寫，導致要看-log-都常常看不到-SystemRollingFileAppender-。雖然-maxSizeRollBackups-設定了-2000-，但使終都只有-2-個檔案。-在我的-Local-測試也都沒什麼問題，用測試程式看它的-m-curSizeRollBackups-屬性也都正常，如下，"><a href="#這樣子的-log-在測試機都正常運作，唯獨在正式機卻會發生第-1-個檔案-0-的-log-檔有正常產生，但-1-的檔案卻一直被重覆的寫，導致要看-log-都常常看不到-SystemRollingFileAppender-。雖然-maxSizeRollBackups-設定了-2000-，但使終都只有-2-個檔案。-在我的-Local-測試也都沒什麼問題，用測試程式看它的-m-curSizeRollBackups-屬性也都正常，如下，" class="headerlink" title="這樣子的 log 在測試機都正常運作，唯獨在正式機卻會發生第 1 個檔案 .0 的 log 檔有正常產生，但 .1 的檔案卻一直被重覆的寫，導致要看 log 都常常看不到 (SystemRollingFileAppender)。雖然 maxSizeRollBackups 設定了 2000 ，但使終都只有 2 個檔案。 在我的 Local 測試也都沒什麼問題，用測試程式看它的 m_curSizeRollBackups 屬性也都正常，如下，"></a>這樣子的 log 在測試機都正常運作，唯獨在正式機卻會發生第 1 個檔案 .0 的 log 檔有正常產生，但 .1 的檔案卻一直被重覆的寫，導致要看 log 都常常看不到 (SystemRollingFileAppender)。雖然 maxSizeRollBackups 設定了 2000 ，但使終都只有 2 個檔案。 在我的 Local 測試也都沒什麼問題，用測試程式看它的 m_curSizeRollBackups 屬性也都正常，如下，</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 如果不是透過 class access ，記得要在 Application_Start 呼叫 log4net.Config.XmlConfigurator.Configure(); 哦!</span></div><div class="line"><span class="keyword">var</span> logType = System.Reflection.MethodBase.GetCurrentMethod().DeclaringType;</div><div class="line"><span class="comment">//Assembly assem = logType.Assembly;</span></div><div class="line"><span class="keyword">var</span> logger = LogManager.GetLogger(logType);</div><div class="line"><span class="keyword">var</span> appenders = logger.Logger.Repository.GetAppenders();</div><div class="line"><span class="keyword">var</span> rollingAppenders = appenders.OfType&lt;RollingFileAppender&gt;();</div><div class="line"><span class="keyword">foreach</span> (<span class="keyword">var</span> appender <span class="keyword">in</span> rollingAppenders)</div><div class="line">&#123;</div><div class="line">Response.Write(<span class="string">$"&lt;h3&gt;*** Name:<span class="subst">&#123;appender.Name&#125;</span> *** &lt;/h3&gt;"</span>);</div><div class="line">Response.Write(<span class="string">$"File : <span class="subst">&#123;appender.File&#125;</span>&lt;br/&gt;"</span>);</div><div class="line">Response.Write(<span class="string">$"CountDirection : <span class="subst">&#123;appender.CountDirection&#125;</span>&lt;br/&gt;"</span>);</div><div class="line">Response.Write(<span class="string">$"MaxSizeRollBackups : <span class="subst">&#123;appender.MaxSizeRollBackups&#125;</span>&lt;br/&gt;"</span>);</div><div class="line">Response.Write(<span class="string">$"MaxFileSize : <span class="subst">&#123;appender.MaxFileSize&#125;</span>&lt;br/&gt;"</span>);</div><div class="line">Response.Write(<span class="string">$"StaticLogFileName : <span class="subst">&#123;appender.StaticLogFileName&#125;</span>&lt;br/&gt;"</span>);</div><div class="line"><span class="keyword">var</span> propInfo = appender.GetType().BaseType.BaseType</div><div class="line">.GetProperty(<span class="string">"QuietWriter"</span>, BindingFlags.NonPublic | BindingFlags.Instance);</div><div class="line"></div><div class="line"><span class="keyword">var</span> quiteWriter = propInfo?.GetValue(appender) <span class="keyword">as</span> CountingQuietTextWriter;</div><div class="line">Response.Write(<span class="string">$"FileSize : <span class="subst">&#123;quiteWriter?.Count&#125;</span>&lt;br/&gt;"</span>);</div><div class="line"></div><div class="line"><span class="keyword">var</span> scheduleFieldInfo = appender.GetType().GetField(<span class="string">"m_scheduledFilename"</span>, BindingFlags.NonPublic | BindingFlags.Instance);</div><div class="line"><span class="keyword">var</span> scheduleField = scheduleFieldInfo.GetValue(appender) ;</div><div class="line">Response.Write(<span class="string">$"m_scheduledFilename : <span class="subst">&#123;scheduleField&#125;</span>&lt;br/&gt;"</span>);</div><div class="line"></div><div class="line"><span class="keyword">var</span> m_curSizeRollBackupsFieldInfo = appender.GetType().GetField(<span class="string">"m_curSizeRollBackups"</span>, BindingFlags.NonPublic | BindingFlags.Instance);</div><div class="line"><span class="keyword">var</span> m_curSizeRollBackupsField = m_curSizeRollBackupsFieldInfo.GetValue(appender);</div><div class="line">Response.Write(<span class="string">$"m_curSizeRollBackups : <span class="subst">&#123;m_curSizeRollBackupsField&#125;</span>&lt;br/&gt;"</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="如下，-log4net-寫到了-2017-10-27-14-DB-log-6-這個檔案，"><a href="#如下，-log4net-寫到了-2017-10-27-14-DB-log-6-這個檔案，" class="headerlink" title="如下， log4net 寫到了 2017-10-27-14-DB.log.6 這個檔案，"></a>如下， log4net 寫到了 2017-10-27-14-DB.log.6 這個檔案，</h3><img src="/2017/10/27/2017010/002.png" alt="slug" title="slug"><h3 id="後來我將-IIS-Express-的站台關掉再重新執行，結果-m-curSizeRollBackups-的值居然變成了-0-。如下，"><a href="#後來我將-IIS-Express-的站台關掉再重新執行，結果-m-curSizeRollBackups-的值居然變成了-0-。如下，" class="headerlink" title="後來我將 IIS Express 的站台關掉再重新執行，結果 m_curSizeRollBackups 的值居然變成了 0 。如下，"></a>後來我將 IIS Express 的站台關掉再重新執行，結果 m_curSizeRollBackups 的值居然變成了 0 。如下，</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">*** Name:SystemRollingFileAppender ***</div><div class="line"></div><div class="line">File : C:\Users\rainm\Documents\Visual Studio 2017\Projects\log4netTest\log4netTest\temp\2017\10\27\2017-10-27-14-DB.log.0</div><div class="line">CountDirection : 1</div><div class="line">MaxSizeRollBackups : 2000</div><div class="line">MaxFileSize : 20480</div><div class="line">StaticLogFileName : False</div><div class="line">FileSize : 20540</div><div class="line">m_scheduledFilename : C:\Users\rainm\Documents\Visual Studio 2017\Projects\log4netTest\log4netTest\temp\2017\10\27\2017-10-27-14-DB.log.0</div><div class="line">m_curSizeRollBackups : 0</div></pre></td></tr></table></figure><h3 id="天呀-我重現了問題了，當-系統重啟後，-log4net-的-m-curSizeRollBackups-就會被重置成-0-。maybe-是-log4net-的-bug-，從-github-下載最新的-log4net-v-2-0-9-來試，居然也是一樣的狀況-。"><a href="#天呀-我重現了問題了，當-系統重啟後，-log4net-的-m-curSizeRollBackups-就會被重置成-0-。maybe-是-log4net-的-bug-，從-github-下載最新的-log4net-v-2-0-9-來試，居然也是一樣的狀況-。" class="headerlink" title="天呀! 我重現了問題了，當 系統重啟後， log4net 的 m_curSizeRollBackups 就會被重置成 0 。maybe 是 log4net 的 bug ，從 github 下載最新的 log4net v 2.0.9 來試，居然也是一樣的狀況 。"></a>天呀! 我重現了問題了，當 系統重啟後， log4net 的 m_curSizeRollBackups 就會被重置成 0 。maybe 是 log4net 的 bug ，從 github 下載最新的 log4net v 2.0.9 來試，居然也是一樣的狀況 。</h3><h3 id="查看github-logging-log4net的-source-，開啟-RollingFileAppender-cs-來看，從-DetermineCurSizeRollBackups-這個-Method"><a href="#查看github-logging-log4net的-source-，開啟-RollingFileAppender-cs-來看，從-DetermineCurSizeRollBackups-這個-Method" class="headerlink" title="查看github logging-log4net的 source ，開啟 RollingFileAppender.cs 來看，從 DetermineCurSizeRollBackups 這個 Method"></a>查看<a href="https://github.com/apache/logging-log4net" target="_blank" rel="external">github logging-log4net</a>的 source ，開啟 RollingFileAppender.cs 來看，從 DetermineCurSizeRollBackups 這個 Method</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">DetermineCurSizeRollBackups</span>(<span class="params"></span>)</span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">m_curSizeRollBackups = <span class="number">0</span>;</div><div class="line"></div><div class="line"><span class="keyword">string</span> fullPath = <span class="literal">null</span>;</div><div class="line"><span class="keyword">string</span> fileName = <span class="literal">null</span>;</div><div class="line"></div><div class="line"><span class="keyword">using</span>(SecurityContext.Impersonate(<span class="keyword">this</span>))</div><div class="line">&#123;</div><div class="line">fullPath = System.IO.Path.GetFullPath(m_baseFileName);</div><div class="line">fileName = System.IO.Path.GetFileName(fullPath);</div><div class="line">&#125;</div><div class="line"></div><div class="line">ArrayList arrayFiles = GetExistingFiles(fullPath);</div><div class="line">InitializeRollBackups(fileName, arrayFiles);</div><div class="line"></div><div class="line">LogLog.Debug(declaringType, <span class="string">"curSizeRollBackups starts at ["</span>+m_curSizeRollBackups+<span class="string">"]"</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="它會把-Log-目錄中的檔案傳給-InitializeRollBackups-這個-Method，如下，"><a href="#它會把-Log-目錄中的檔案傳給-InitializeRollBackups-這個-Method，如下，" class="headerlink" title="它會把 Log 目錄中的檔案傳給 InitializeRollBackups 這個 Method，如下，"></a>它會把 Log 目錄中的檔案傳給 InitializeRollBackups 這個 Method，如下，</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">InitializeRollBackups</span>(<span class="params"><span class="keyword">string</span> baseFile, ArrayList arrayFiles</span>)</span></div><div class="line"><span class="function"></span>&#123;</div><div class="line"><span class="keyword">if</span> (<span class="literal">null</span> != arrayFiles)</div><div class="line">&#123;</div><div class="line"><span class="keyword">string</span> baseFileLower = baseFile.ToLower(System.Globalization.CultureInfo.InvariantCulture);</div><div class="line"></div><div class="line"><span class="keyword">foreach</span>(<span class="keyword">string</span> curFileName <span class="keyword">in</span> arrayFiles)</div><div class="line">&#123;</div><div class="line">InitializeFromOneFile(baseFileLower, curFileName.ToLower(System.Globalization.CultureInfo.InvariantCulture));</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="而-InitializeRollBackups-中會將-baseFile-轉成小寫-再傳入-InitializeFromOneFile-這個-Method-去比較，而在-InitializeFromOneFile-有一行是比較-baseFile-與-prefix-及-suffix-比較-if-curFileName-StartsWith-prefix-curFileName-EndsWith-suffix-。"><a href="#而-InitializeRollBackups-中會將-baseFile-轉成小寫-再傳入-InitializeFromOneFile-這個-Method-去比較，而在-InitializeFromOneFile-有一行是比較-baseFile-與-prefix-及-suffix-比較-if-curFileName-StartsWith-prefix-curFileName-EndsWith-suffix-。" class="headerlink" title="而 InitializeRollBackups 中會將 baseFile 轉成小寫 再傳入 InitializeFromOneFile 這個 Method 去比較，而在 InitializeFromOneFile 有一行是比較 baseFile 與 prefix 及 suffix 比較(if (!curFileName.StartsWith(prefix) || !curFileName.EndsWith(suffix)))。"></a>而 InitializeRollBackups 中會將 baseFile <em>轉成小寫</em> 再傳入 InitializeFromOneFile 這個 Method 去比較，而在 InitializeFromOneFile 有一行是比較 baseFile 與 prefix 及 suffix 比較(<em>if (!curFileName.StartsWith(prefix) || !curFileName.EndsWith(suffix))</em>)。</h3><h3 id="prefix-就是-config-中-datePattern-的設定值-yyyy-MM-dd-HH-DB3-lo-g-，眼尖的朋友有發現了嗎-我們的檔名裡面的-DB-是大寫，但程式中-log4net-已將目前的-log-檔轉成了小寫，當然比不到。所以在系統重啟時，-m-curSizeRollBackups-的值就會是-0-。"><a href="#prefix-就是-config-中-datePattern-的設定值-yyyy-MM-dd-HH-DB3-lo-g-，眼尖的朋友有發現了嗎-我們的檔名裡面的-DB-是大寫，但程式中-log4net-已將目前的-log-檔轉成了小寫，當然比不到。所以在系統重啟時，-m-curSizeRollBackups-的值就會是-0-。" class="headerlink" title="prefix 就是 config 中 datePattern 的設定值 (yyyy-MM-dd-HH-DB3.lo\g)，眼尖的朋友有發現了嗎? 我們的檔名裡面的 DB 是大寫，但程式中 log4net 已將目前的 log 檔轉成了小寫，當然比不到。所以在系統重啟時， m_curSizeRollBackups 的值就會是 0 。"></a>prefix 就是 config 中 datePattern 的設定值 (<em>yyyy-MM-dd-HH-DB3.lo\g</em>)，眼尖的朋友有發現了嗎? 我們的檔名裡面的 DB 是大寫，但程式中 log4net 已將目前的 log 檔轉成了小寫，當然比不到。所以在系統重啟時， m_curSizeRollBackups 的值就會是 0 。</h3><h3 id="應該要將-if-curFileName-StartsWith-prefix-curFileName-EndsWith-suffix-改成不分大小寫的比較才對，if-curFileName-StartsWith-prefix-StringComparison-CurrentCultureIgnoreCase-curFileName-EndsWith-suffix-StringComparison-CurrentCultureIgnoreCase-。"><a href="#應該要將-if-curFileName-StartsWith-prefix-curFileName-EndsWith-suffix-改成不分大小寫的比較才對，if-curFileName-StartsWith-prefix-StringComparison-CurrentCultureIgnoreCase-curFileName-EndsWith-suffix-StringComparison-CurrentCultureIgnoreCase-。" class="headerlink" title="應該要將 if (!curFileName.StartsWith(prefix) || !curFileName.EndsWith(suffix)) 改成不分大小寫的比較才對，if (!curFileName.StartsWith(prefix, StringComparison.CurrentCultureIgnoreCase) || !curFileName.EndsWith(suffix, StringComparison.CurrentCultureIgnoreCase))。"></a>應該要將 <em>if (!curFileName.StartsWith(prefix) || !curFileName.EndsWith(suffix))</em> 改成不分大小寫的比較才對，<em>if (!curFileName.StartsWith(prefix, StringComparison.CurrentCultureIgnoreCase) || !curFileName.EndsWith(suffix, StringComparison.CurrentCultureIgnoreCase))</em>。</h3><ul><li><h2 id="請注意哦-目前-github-上的版本還沒有修正哦"><a href="#請注意哦-目前-github-上的版本還沒有修正哦" class="headerlink" title="請注意哦~~ 目前 github 上的版本還沒有修正哦 !!!"></a>請注意哦~~ 目前 github 上的版本還沒有修正哦 !!!</h2></li></ul><h3 id="所以目前有以下-2-項解法，"><a href="#所以目前有以下-2-項解法，" class="headerlink" title="所以目前有以下 2 項解法，"></a>所以目前有以下 2 項解法，</h3><ul><li><h3 id="改程式然後更新-log4net"><a href="#改程式然後更新-log4net" class="headerlink" title="改程式然後更新 log4net"></a>改程式然後更新 log4net</h3></li><li><h3 id="將檔名-datePattern-從大寫改成小寫，例如-yyyy-MM-dd-HH-db-lo-g-d-前面要有-哦"><a href="#將檔名-datePattern-從大寫改成小寫，例如-yyyy-MM-dd-HH-db-lo-g-d-前面要有-哦" class="headerlink" title="將檔名 datePattern 從大寫改成小寫，例如 yyyy-MM-dd-HH-\db.lo\g (d 前面要有 \ 哦!)"></a>將檔名 datePattern 從大寫改成小寫，例如 yyyy-MM-dd-HH-\db.lo\g (d 前面要有 \ 哦!)</h3></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;事情是這樣子的…我們有個專案裡面有使用-log4net-v-1-2-11-0-，在案子裡面是使用-RollingFileAppender-，-rollingStyle-是-Composite-，依日期時間及檔案大小來切檔，設定檔如下，&quot;&gt;&lt;a href=&quot;#事情是
      
    
    </summary>
    
    
      <category term="log4net" scheme="https://rainmakerho.github.io/tags/log4net/"/>
    
      <category term="Composite" scheme="https://rainmakerho.github.io/tags/Composite/"/>
    
      <category term="RollingFileAppender" scheme="https://rainmakerho.github.io/tags/RollingFileAppender/"/>
    
      <category term="DetermineCurSizeRollBackups" scheme="https://rainmakerho.github.io/tags/DetermineCurSizeRollBackups/"/>
    
      <category term="InitializeRollBackups" scheme="https://rainmakerho.github.io/tags/InitializeRollBackups/"/>
    
      <category term="InitializeFromOneFile" scheme="https://rainmakerho.github.io/tags/InitializeFromOneFile/"/>
    
  </entry>
  
  <entry>
    <title>透過 SmtpClient 寄送 Mail 時，主旨在 Zimbra 會有 ? 的狀況</title>
    <link href="https://rainmakerho.github.io/2017/10/27/20171027/"/>
    <id>https://rainmakerho.github.io/2017/10/27/20171027/</id>
    <published>2017-10-27T03:21:44.000Z</published>
    <updated>2017-12-11T09:59:46.881Z</updated>
    
    <content type="html"><![CDATA[<h3 id="最近同事詢問透過-SmtpClient-去寄送-Mail-時，在-Zimbra-的-Web-界面看會有-的狀況，如下圖，"><a href="#最近同事詢問透過-SmtpClient-去寄送-Mail-時，在-Zimbra-的-Web-界面看會有-的狀況，如下圖，" class="headerlink" title="最近同事詢問透過 SmtpClient 去寄送 Mail 時，在 Zimbra 的 Web 界面看會有 ? 的狀況，如下圖，"></a>最近同事詢問透過 <a href="https://msdn.microsoft.com/zh-tw/library/system.net.mail.smtpclient" target="_blank" rel="external">SmtpClient</a> 去寄送 Mail 時，在 Zimbra 的 Web 界面看會有 ? 的狀況，如下圖，</h3><img src="/2017/10/27/20171027/001.png" alt="slug" title="slug"><h3 id="觀察發現，當主旨太長時才會有這個問題。在-Zimbra-中檢查-Mail-的內容，發現主旨被切分成多段，如下圖，"><a href="#觀察發現，當主旨太長時才會有這個問題。在-Zimbra-中檢查-Mail-的內容，發現主旨被切分成多段，如下圖，" class="headerlink" title="觀察發現，當主旨太長時才會有這個問題。在 Zimbra 中檢查 Mail 的內容，發現主旨被切分成多段，如下圖，"></a>觀察發現，當主旨太長時才會有這個問題。在 Zimbra 中檢查 Mail 的內容，發現主旨被切分成多段，如下圖，</h3><img src="/2017/10/27/20171027/002.png" alt="slug" title="slug"><h3 id="而那些再透過-Base64-轉回來，的確會有-的狀況，看起來應該是-MailMessage-在切分時剛好切到一半所造成的，如下圖，"><a href="#而那些再透過-Base64-轉回來，的確會有-的狀況，看起來應該是-MailMessage-在切分時剛好切到一半所造成的，如下圖，" class="headerlink" title="而那些再透過 Base64 轉回來，的確會有 ? 的狀況，看起來應該是 MailMessage 在切分時剛好切到一半所造成的，如下圖，"></a>而那些再透過 Base64 轉回來，的確會有 ? 的狀況，看起來應該是 MailMessage 在切分時剛好切到一半所造成的，如下圖，</h3><img src="/2017/10/27/20171027/004.png" alt="slug" title="slug"><h3 id="但是這樣子的狀況，在-outlook-來看卻是沒問的哦-如下圖，"><a href="#但是這樣子的狀況，在-outlook-來看卻是沒問的哦-如下圖，" class="headerlink" title="但是這樣子的狀況，在 outlook 來看卻是沒問的哦~~~ 如下圖，"></a>但是這樣子的狀況，在 outlook 來看卻是沒問的哦~~~ 如下圖，</h3><img src="/2017/10/27/20171027/003.png" alt="slug" title="slug"><h3 id="在網路上查到-4-0-SMTPClient-Send-Attachments-mit-Umlauten-im-Dateinamen-，它指出-Base64-會每-30-個字切成一段去串，QuotedPrintable-則是每-76-個字去切。-而我們的狀況似乎是因為它是將字串轉成-Base64-去切，所以會有切到一半的狀況。"><a href="#在網路上查到-4-0-SMTPClient-Send-Attachments-mit-Umlauten-im-Dateinamen-，它指出-Base64-會每-30-個字切成一段去串，QuotedPrintable-則是每-76-個字去切。-而我們的狀況似乎是因為它是將字串轉成-Base64-去切，所以會有切到一半的狀況。" class="headerlink" title="在網路上查到 4.0 SMTPClient.Send Attachments mit Umlauten im Dateinamen ，它指出 Base64 會每 30 個字切成一段去串，QuotedPrintable 則是每 76 個字去切。 而我們的狀況似乎是因為它是將字串轉成 Base64 去切，所以會有切到一半的狀況。"></a>在網路上查到 <a href="https://social.msdn.microsoft.com/Forums/en-US/b6c764f7-4697-4394-b45f-128a24306d55/40-smtpclientsend-attachments-mit-umlauten-im-dateinamen?forum=dotnetframeworkde" target="_blank" rel="external">4.0 SMTPClient.Send Attachments mit Umlauten im Dateinamen</a> ，它指出 Base64 會每 30 個字切成一段去串，QuotedPrintable 則是每 76 個字去切。 而我們的狀況似乎是因為它是將字串轉成 Base64 去切，所以會有切到一半的狀況。</h3><h3 id="所以我們可以調整他的做法，將原始的字串依-7-個字串先切開再串接即可，如下，"><a href="#所以我們可以調整他的做法，將原始的字串依-7-個字串先切開再串接即可，如下，" class="headerlink" title="所以我們可以調整他的做法，將原始的字串依 7 個字串先切開再串接即可，如下，"></a>所以我們可以調整他的做法，將原始的字串依 7 個字串先切開再串接即可，如下，</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">EmailHeaderHelper</span></div><div class="line">&#123;</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">string</span> <span class="title">ToBase64</span>(<span class="params"><span class="keyword">string</span> displayName</span>)</span></div><div class="line"><span class="function"></span>&#123;</div><div class="line"><span class="keyword">string</span> tranferEncodingMarker = String.Empty;</div><div class="line"><span class="keyword">string</span> encodingMarker = String.Empty;</div><div class="line"><span class="keyword">int</span> maxChunkLength = <span class="number">0</span>;</div><div class="line"></div><div class="line">tranferEncodingMarker = <span class="string">"B"</span>;</div><div class="line">encodingMarker = <span class="string">"UTF-8"</span>;</div><div class="line">maxChunkLength = <span class="number">30</span> / <span class="number">4</span>;</div><div class="line"></div><div class="line"><span class="keyword">string</span> encodingtoken = String.Format(<span class="string">"=?&#123;0&#125;?&#123;1&#125;?"</span>, encodingMarker, tranferEncodingMarker);</div><div class="line"><span class="keyword">string</span> softbreak = <span class="string">"?="</span>;</div><div class="line"><span class="keyword">var</span> encodeDisplayName = <span class="keyword">new</span> StringBuilder();</div><div class="line"></div><div class="line"><span class="keyword">foreach</span> (<span class="function"><span class="keyword">var</span> splitItem <span class="keyword">in</span> <span class="title">SplitByLength</span>(<span class="params">displayName, maxChunkLength</span>))</span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">encodeDisplayName.Append(encodingtoken);</div><div class="line">encodeDisplayName.Append(Convert.ToBase64String(Encoding.UTF8.GetBytes(splitItem)));</div><div class="line">encodeDisplayName.Append(softbreak);</div><div class="line">&#125;</div><div class="line"><span class="keyword">return</span> encodeDisplayName.ToString();</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> IEnumerable&lt;<span class="keyword">string</span>&gt; <span class="title">SplitByLength</span>(<span class="params"><span class="keyword">string</span> stringToSplit, <span class="keyword">int</span> length</span>)</span></div><div class="line"><span class="function"></span>&#123;</div><div class="line"><span class="keyword">while</span> (stringToSplit.Length &gt; length)</div><div class="line">&#123;</div><div class="line"><span class="keyword">yield</span> <span class="keyword">return</span> stringToSplit.Substring(<span class="number">0</span>, length);</div><div class="line">stringToSplit = stringToSplit.Substring(length);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">if</span> (stringToSplit.Length &gt; <span class="number">0</span>) <span class="keyword">yield</span> <span class="keyword">return</span> stringToSplit;</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="所以使用如下，"><a href="#所以使用如下，" class="headerlink" title="所以使用如下，"></a>所以使用如下，</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">string</span> subject = <span class="string">"華華華(華華華華華華華華華華華華華華華華華華華華華華華華華華華華華華華華華華華華華華華"</span>;</div><div class="line">message.Subject = EmailHeaderHelper.ToBase64(subject);</div></pre></td></tr></table></figure><h3 id="不過筆者發現，如果您有-2-個-utf-8-B-的話，-NET-的-Mail-元件似乎也不會自動去幫你切斷，所以另個寫法是自已串-Base64-的字串後，再串一個空的-utf-8-B-，如下，"><a href="#不過筆者發現，如果您有-2-個-utf-8-B-的話，-NET-的-Mail-元件似乎也不會自動去幫你切斷，所以另個寫法是自已串-Base64-的字串後，再串一個空的-utf-8-B-，如下，" class="headerlink" title="不過筆者發現，如果您有 2 個 =?utf-8?B? 的話， .NET 的 Mail 元件似乎也不會自動去幫你切斷，所以另個寫法是自已串 Base64 的字串後，再串一個空的 =?utf-8?B? ，如下，"></a>不過筆者發現，如果您有 2 個 <em>=?utf-8?B?</em> 的話， .NET 的 Mail 元件似乎也不會自動去幫你切斷，所以另個寫法是自已串 Base64 的字串後，再串一個空的 <em>=?utf-8?B?</em> ，如下，</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">string</span> subject = <span class="string">"華華華(華華華華華華華華華華華華華華華華華華華華華華華華華華華華華華華華華華華華華華華"</span>;</div><div class="line"><span class="keyword">byte</span>[] subjectBytes = Encoding.GetEncoding(<span class="string">"utf-8"</span>).GetBytes(subject);</div><div class="line"><span class="keyword">string</span> subjectBase64 = <span class="string">"=?utf-8?B?"</span> + Convert.ToBase64String(subjectBytes) + <span class="string">"?="</span>;</div><div class="line"><span class="comment">//多加一個空的 =?utf-8?B??= ，就不會再被切開了</span></div><div class="line">subjectBase64 += <span class="string">"=?utf-8?B??="</span>;</div><div class="line">message.Subject = subjectBase64;</div></pre></td></tr></table></figure><img src="/2017/10/27/20171027/005.png" alt="slug" title="slug"><h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><ul><li><a href="https://social.msdn.microsoft.com/Forums/en-US/b6c764f7-4697-4394-b45f-128a24306d55/40-smtpclientsend-attachments-mit-umlauten-im-dateinamen?forum=dotnetframeworkde" target="_blank" rel="external">4.0 SMTPClient.Send Attachments mit Umlauten im Dateinamen</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;最近同事詢問透過-SmtpClient-去寄送-Mail-時，在-Zimbra-的-Web-界面看會有-的狀況，如下圖，&quot;&gt;&lt;a href=&quot;#最近同事詢問透過-SmtpClient-去寄送-Mail-時，在-Zimbra-的-Web-界面看會有-的狀況，如下圖，
      
    
    </summary>
    
    
      <category term="SMTPClient" scheme="https://rainmakerho.github.io/tags/SMTPClient/"/>
    
      <category term="MailMessage" scheme="https://rainmakerho.github.io/tags/MailMessage/"/>
    
      <category term="Subject" scheme="https://rainmakerho.github.io/tags/Subject/"/>
    
      <category term="?號" scheme="https://rainmakerho.github.io/tags/%E8%99%9F/"/>
    
      <category term="Multiple" scheme="https://rainmakerho.github.io/tags/Multiple/"/>
    
      <category term="=?utf-8?B?" scheme="https://rainmakerho.github.io/tags/utf-8-B/"/>
    
      <category term="Attachments" scheme="https://rainmakerho.github.io/tags/Attachments/"/>
    
  </entry>
  
  <entry>
    <title>Compiling IB documents for earlier than iOS 7 is no longer supported.</title>
    <link href="https://rainmakerho.github.io/2017/10/17/20171017-2/"/>
    <id>https://rainmakerho.github.io/2017/10/17/20171017-2/</id>
    <published>2017-10-17T05:34:17.000Z</published>
    <updated>2017-12-11T10:00:56.566Z</updated>
    
    <content type="html"><![CDATA[<h3 id="最近透過-Xcode-9-建置舊的-Cordova-專案，在建置時就發生-Compiling-IB-documents-for-earlier-than-iOS-7-is-no-longer-supported-的錯誤，依Illegal-Configuration-Compiling-IB-documents-for-earlier-than-iOS-7-is-no-longer-supported的說明，只要將-Interface-Builder-Document-的-Builds-for-改成-iOS-7-0-後版本就可以了，如下圖所示，"><a href="#最近透過-Xcode-9-建置舊的-Cordova-專案，在建置時就發生-Compiling-IB-documents-for-earlier-than-iOS-7-is-no-longer-supported-的錯誤，依Illegal-Configuration-Compiling-IB-documents-for-earlier-than-iOS-7-is-no-longer-supported的說明，只要將-Interface-Builder-Document-的-Builds-for-改成-iOS-7-0-後版本就可以了，如下圖所示，" class="headerlink" title="最近透過 Xcode 9 建置舊的 Cordova 專案，在建置時就發生 Compiling IB documents for earlier than iOS 7 is no longer supported. 的錯誤，依Illegal Configuration: Compiling IB documents for earlier than iOS 7 is no longer supported的說明，只要將 Interface Builder Document 的 Builds for 改成 iOS 7.0 後版本就可以了，如下圖所示，"></a>最近透過 Xcode 9 建置舊的 Cordova 專案，在建置時就發生 <em>Compiling IB documents for earlier than iOS 7 is no longer supported.</em> 的錯誤，依<a href="https://stackoverflow.com/questions/44429415/illegal-configuration-compiling-ib-documents-for-earlier-than-ios-7-is-no-longe" target="_blank" rel="external">Illegal Configuration: Compiling IB documents for earlier than iOS 7 is no longer supported</a>的說明，只要將 Interface Builder Document 的 <em>Builds for</em> 改成 iOS 7.0 後版本就可以了，如下圖所示，</h3><img src="/2017/10/17/20171017-2/IBVersion.png" alt="slug" title="slug">]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;最近透過-Xcode-9-建置舊的-Cordova-專案，在建置時就發生-Compiling-IB-documents-for-earlier-than-iOS-7-is-no-longer-supported-的錯誤，依Illegal-Configuration
      
    
    </summary>
    
    
      <category term="ios" scheme="https://rainmakerho.github.io/tags/ios/"/>
    
      <category term="xCode 9" scheme="https://rainmakerho.github.io/tags/xCode-9/"/>
    
  </entry>
  
  <entry>
    <title>Add a profile to the provisioningProfiles dictionary in your Export Options property list.</title>
    <link href="https://rainmakerho.github.io/2017/10/17/20171017/"/>
    <id>https://rainmakerho.github.io/2017/10/17/20171017/</id>
    <published>2017-10-17T05:10:42.000Z</published>
    <updated>2017-12-11T10:00:49.186Z</updated>
    
    <content type="html"><![CDATA[<h3 id="最近透過-xcodebuild-來產生-ipa-檔時，以下的錯誤，"><a href="#最近透過-xcodebuild-來產生-ipa-檔時，以下的錯誤，" class="headerlink" title="最近透過 xcodebuild 來產生 ipa 檔時，以下的錯誤，"></a>最近透過 xcodebuild 來產生 ipa 檔時，以下的錯誤，</h3><p><em>error: exportArchive: …app requires a provisioning profile.</em><br><em>Error Domain=IDEProvisioningErrorDomain Code=9 …requires a provisioning profile. …NSLocalizedRecoverySuggestion=Add a profile to the “provisioningProfiles” dictionary in your Export Options property list.}</em></p><img src="/2017/10/17/20171017/exportArchiveFail.png" alt="slug" title="slug"><h3 id="原來是因為-xCode-9-的-export-Options-plist-檔中需要再指定-provisioningProfiles-相關資料，內容如下圖，"><a href="#原來是因為-xCode-9-的-export-Options-plist-檔中需要再指定-provisioningProfiles-相關資料，內容如下圖，" class="headerlink" title="原來是因為 xCode 9 的 export Options plist 檔中需要再指定 provisioningProfiles 相關資料，內容如下圖，"></a>原來是因為 xCode 9 的 export Options plist 檔中需要再指定 <em>provisioningProfiles</em> 相關資料，內容如下圖，</h3><img src="/2017/10/17/20171017/exportOptionsPlist.png" alt="slug" title="slug"><h3 id="最簡單的方式可以參考-New-export-options-Plist-in-Xcode-9-的方式，先透過-Xcode-產生-ipa-後，在-ipa-的目錄中會有-ExportOptions-plist-檔案，直接將它拿來用就可以了哦"><a href="#最簡單的方式可以參考-New-export-options-Plist-in-Xcode-9-的方式，先透過-Xcode-產生-ipa-後，在-ipa-的目錄中會有-ExportOptions-plist-檔案，直接將它拿來用就可以了哦" class="headerlink" title="最簡單的方式可以參考 New export options Plist in Xcode 9 的方式，先透過 Xcode 產生 ipa 後，在 ipa 的目錄中會有 ExportOptions.plist 檔案，直接將它拿來用就可以了哦!"></a>最簡單的方式可以參考 <a href="https://blog.bitrise.io/new-export-options-plist-in-xcode-9" target="_blank" rel="external">New export options Plist in Xcode 9</a> 的方式，先透過 Xcode 產生 ipa 後，在 ipa 的目錄中會有 <em>ExportOptions.plist</em> 檔案，直接將它拿來用就可以了哦!</h3><h2 id="參考資訊"><a href="#參考資訊" class="headerlink" title="參考資訊"></a>參考資訊</h2><ul><li><p><a href="http://www.matrixprojects.net/p/xcodebuild-export-options-plist/" target="_blank" rel="external">xcodebuild’s new exportOptionsPlist flag</a></p></li><li><p><a href="https://blog.bitrise.io/new-export-options-plist-in-xcode-9" target="_blank" rel="external">New export options Plist in Xcode 9</a></p></li><li><p><a href="https://stackoverflow.com/questions/39674237/xcrun-command-to-export-ipa-file-xcode8-for-iphoneos10-0" target="_blank" rel="external">xcrun command to export ipa file xcode8 for iphoneos10.0</a></p></li><li><p><a href="https://medium.com/xcblog/xcodebuild-deploy-ios-app-from-command-line-c6defff0d8b8" target="_blank" rel="external">xcodebuild: Deploy iOS app from Command Line</a></p></li><li><p><a href="http://www.jianshu.com/p/88d9f2e57004" target="_blank" rel="external">xcodebuild 命令简单使用</a></p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;最近透過-xcodebuild-來產生-ipa-檔時，以下的錯誤，&quot;&gt;&lt;a href=&quot;#最近透過-xcodebuild-來產生-ipa-檔時，以下的錯誤，&quot; class=&quot;headerlink&quot; title=&quot;最近透過 xcodebuild 來產生 ipa 檔時
      
    
    </summary>
    
    
      <category term="ios" scheme="https://rainmakerho.github.io/tags/ios/"/>
    
      <category term="xcodebuild" scheme="https://rainmakerho.github.io/tags/xcodebuild/"/>
    
      <category term="exportArchive" scheme="https://rainmakerho.github.io/tags/exportArchive/"/>
    
      <category term="exportOptionsPlist" scheme="https://rainmakerho.github.io/tags/exportOptionsPlist/"/>
    
      <category term="Export Options property list" scheme="https://rainmakerho.github.io/tags/Export-Options-property-list/"/>
    
      <category term="provisioningProfiles" scheme="https://rainmakerho.github.io/tags/provisioningProfiles/"/>
    
      <category term="Xcode 9" scheme="https://rainmakerho.github.io/tags/Xcode-9/"/>
    
  </entry>
  
  <entry>
    <title>從外部資料庫驅動程式產生的非預期的錯誤 (1) @ OleDbConnection.Open</title>
    <link href="https://rainmakerho.github.io/2017/10/13/20171013/"/>
    <id>https://rainmakerho.github.io/2017/10/13/20171013/</id>
    <published>2017-10-13T14:02:06.000Z</published>
    <updated>2017-12-11T10:01:15.795Z</updated>
    
    <content type="html"><![CDATA[<h3 id="今天同事詢問有沒有看過以下的錯誤訊息，"><a href="#今天同事詢問有沒有看過以下的錯誤訊息，" class="headerlink" title="今天同事詢問有沒有看過以下的錯誤訊息，"></a>今天同事詢問有沒有看過以下的錯誤訊息，</h3><p><em><system.data.oledb.oledbexception> 從外部資料庫驅動程式產生的非預期的錯誤 (1)。 [ OleDbException.ErrorCode : -2147467259 ]</system.data.oledb.oledbexception></em></p><p><em>Unexpected error from external database driver (1). (Microsoft JET Database Engine)</em></p><h3 id="程式只是透過-Provider-Microsoft-Jet-OLEDB-4-0-去開啟一個-excel-檔而已，而且同事詢問這個問題後，另一位同事也在詢問相同的問題。"><a href="#程式只是透過-Provider-Microsoft-Jet-OLEDB-4-0-去開啟一個-excel-檔而已，而且同事詢問這個問題後，另一位同事也在詢問相同的問題。" class="headerlink" title="程式只是透過 Provider=Microsoft.Jet.OLEDB.4.0; 去開啟一個 excel 檔而已，而且同事詢問這個問題後，另一位同事也在詢問相同的問題。"></a>程式只是透過 <em>Provider=Microsoft.Jet.OLEDB.4.0;</em> 去開啟一個 excel 檔而已，而且同事詢問這個問題後，另一位同事也在詢問相同的問題。</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> conn = <span class="keyword">new</span> System.Data.OleDb.OleDbConnection(<span class="string">"Provider=Microsoft.Jet.OLEDB.4.0;Data Source=C:\\Users\\kt\\Documents\\VS Code\\TEST_EXCEL\\aa.xls;Extended Properties=\"Excel 8.0;HDR=Yes;IMEX=1;\""</span>);</div><div class="line">conn.Open();</div></pre></td></tr></table></figure><h3 id="但這支程式前陣子用的好好的呀-為什麼今天卻發生了這樣子的錯誤呢"><a href="#但這支程式前陣子用的好好的呀-為什麼今天卻發生了這樣子的錯誤呢" class="headerlink" title="但這支程式前陣子用的好好的呀! 為什麼今天卻發生了這樣子的錯誤呢?"></a>但這支程式前陣子用的好好的呀! 為什麼今天卻發生了這樣子的錯誤呢?</h3><h3 id="於是往-Windows-更新來看，發現有-2-個更新，如下，"><a href="#於是往-Windows-更新來看，發現有-2-個更新，如下，" class="headerlink" title="於是往 Windows 更新來看，發現有 2 個更新，如下，"></a>於是往 Windows 更新來看，發現有 2 個更新，如下，</h3><img src="/2017/10/13/20171013/windowsUpdate.png" alt="slug" title="slug"><h3 id="查看一下-kb4041681-裡面有更動到-Microsoft-JET-Database-Engine-而我們是有用到它呢-於是將它反安裝後重新開機後，再執行程式就沒問題了。"><a href="#查看一下-kb4041681-裡面有更動到-Microsoft-JET-Database-Engine-而我們是有用到它呢-於是將它反安裝後重新開機後，再執行程式就沒問題了。" class="headerlink" title="查看一下 kb4041681 , 裡面有更動到 Microsoft JET Database Engine 而我們是有用到它呢!!! 於是將它反安裝後重新開機後，再執行程式就沒問題了。"></a>查看一下 <a href="https://support.microsoft.com/en-us/help/4041681/windows-7-update-kb4041681" target="_blank" rel="external">kb4041681</a> , 裡面有更動到 <em>Microsoft JET Database Engine</em> 而我們是有用到它呢!!! 於是將它反安裝後重新開機後，再執行程式就沒問題了。</h3><h3 id="這個更新似乎將-msexcl40-dll-從-V4-00-9801-0-to-v4-00-9801-1-，-X64-在-C-Windows-SysWOW64-目錄。"><a href="#這個更新似乎將-msexcl40-dll-從-V4-00-9801-0-to-v4-00-9801-1-，-X64-在-C-Windows-SysWOW64-目錄。" class="headerlink" title="這個更新似乎將 msexcl40.dll 從 V4.00.9801.0 to v4.00.9801.1 ， X64 在 C:\Windows\SysWOW64 目錄。"></a>這個更新似乎將 msexcl40.dll 從 V4.00.9801.0 to v4.00.9801.1 ， X64 在 C:\Windows\SysWOW64 目錄。</h3><h2 id="依-“Unexpected-error-from-external-database-driver-1-Microsoft-JET-Database-Engine-”-after-applying-October-security-updates-的說明，解法有以下-3-個，"><a href="#依-“Unexpected-error-from-external-database-driver-1-Microsoft-JET-Database-Engine-”-after-applying-October-security-updates-的說明，解法有以下-3-個，" class="headerlink" title="依 “Unexpected error from external database driver (1). (Microsoft JET Database Engine)” after applying October security updates. 的說明，解法有以下 3 個，"></a>依 <a href="https://blogs.msdn.microsoft.com/dataaccesstechnologies/2017/10/18/unexpected-error-from-external-database-driver-1-microsoft-jet-database-engine-after-applying-october-security-updates/" target="_blank" rel="external">“Unexpected error from external database driver (1). (Microsoft JET Database Engine)” after applying October security updates.</a> 的說明，解法有以下 3 個，</h2><h3 id="1-安裝更新後，調整程式，方式如下，"><a href="#1-安裝更新後，調整程式，方式如下，" class="headerlink" title="1.安裝更新後，調整程式，方式如下，"></a>1.安裝更新後，調整程式，方式如下，</h3><ul><li>安裝 <a href="https://www.microsoft.com/zh-tw/download/details.aspx?id=13255" target="_blank" rel="external">Microsoft Access Database Engine 2010 可轉散發套件</a> 有分 x86/x64 版本哦!</li><li>將連線字串從 Provider=Microsoft.Jet.OLEDB.4.0 改成 Provider=Microsoft.ACE.OLEDB.12.0</li></ul><h3 id="2-移除相關的-KB"><a href="#2-移除相關的-KB" class="headerlink" title="2.移除相關的 KB"></a>2.移除相關的 KB</h3><h3 id="3-使用舊的-msexcl40-dll-v4-00-9801-1-以前的版本"><a href="#3-使用舊的-msexcl40-dll-v4-00-9801-1-以前的版本" class="headerlink" title="3.使用舊的 msexcl40.dll (v4.00.9801.1 以前的版本)"></a>3.使用舊的 msexcl40.dll (v4.00.9801.1 以前的版本)</h3><ul><li>先到可以運作的電腦中 Copy msexcel40.dll 存到某個目錄之中，例如 c:\excel32 。</li><li>修改註冊機碼 [HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\Microsoft\Jet\4.0\Engines\Excel\Win32] 從原本的 C:\Windows\SysWOW64\msexcel40.dll 改成 c:\excel32\msexcel40.dll 。<img src="/2017/10/13/20171013/002.png" alt="slug" title="slug"></li></ul><h3 id="Windows-Update-其中的內容如下，"><a href="#Windows-Update-其中的內容如下，" class="headerlink" title="Windows Update 其中的內容如下，"></a>Windows Update 其中的內容如下，</h3><p><em>Security updates to Microsoft Windows Search Component, Windows kernel-mode drivers, Microsoft Graphics Component, Internet Explorer, Windows kernel, Windows Wireless Networking, Microsoft JET Database Engine, and the Windows SMB Server.</em></p><h3 id="目前發現有以下幾個-kb-會影響到，"><a href="#目前發現有以下幾個-kb-會影響到，" class="headerlink" title="目前發現有以下幾個 kb 會影響到，"></a>目前發現有以下幾個 kb 會影響到，</h3><ul><li><p><a href="https://support.microsoft.com/en-us/help/4041678/windows-7-update-kb4041678" target="_blank" rel="external">kb4041678</a> Win 7 / Win 2008</p></li><li><p><a href="https://support.microsoft.com/en-us/help/4041681/windows-7-update-kb4041681" target="_blank" rel="external">kb4041681</a> Win 7 / Win 2008</p></li><li><p><a href="https://support.microsoft.com/zh-hk/help/4042007/description-of-the-security-update-for-the-microsoft-jet-database-engi" target="_blank" rel="external">Kb4042007</a> Win 2008</p></li><li><p><a href="https://support.microsoft.com/en-us/help/4041691/windows-10-update-kb4041691" target="_blank" rel="external">kb4041691</a> Win 10 / Win 2016</p></li><li><p><a href="https://support.microsoft.com/en-us/help/4041676/windows-10-update-kb4041676" target="_blank" rel="external">kb4041676</a> Win 10</p></li><li><p>如果有一樣的錯誤訊息，應該是因為 windows update ，請檢查最近的 windows update 哦! 可以的話也讓小弟知道一下下 ^_^</p></li></ul><h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><p><a href="http://www.cnblogs.com/net-god/p/7661313.html" target="_blank" rel="external">Excel Microsoft.Jet.OLEDB.4.0 外部数据库驱动程序中(1)的意外错误</a></p><p><a href="https://support.microsoft.com/zh-hk/help/4042007/description-of-the-security-update-for-the-microsoft-jet-database-engi" target="_blank" rel="external">Kb4042007 Microsoft Jet 资料库引擎遠端執行程式碼弱點的安全性更新：2017 年 10 月 10 日</a></p><p><a href="https://blogs.msdn.microsoft.com/dataaccesstechnologies/2017/10/18/unexpected-error-from-external-database-driver-1-microsoft-jet-database-engine-after-applying-october-security-updates/" target="_blank" rel="external">“Unexpected error from external database driver (1). (Microsoft JET Database Engine)” after applying October security updates.</a></p><h3 id="註-在-“Unexpected-error-from-external-database-driver-1-Microsoft-JET-Database-Engine-”-after-applying-October-security-updates-有貼出-Microsoft-修正的-Update-了哦-請參考"><a href="#註-在-“Unexpected-error-from-external-database-driver-1-Microsoft-JET-Database-Engine-”-after-applying-October-security-updates-有貼出-Microsoft-修正的-Update-了哦-請參考" class="headerlink" title="註:在 “Unexpected error from external database driver (1). (Microsoft JET Database Engine)” after applying October security updates. 有貼出 Microsoft 修正的 Update 了哦! 請參考"></a>註:在 <a href="https://blogs.msdn.microsoft.com/dataaccesstechnologies/2017/10/18/unexpected-error-from-external-database-driver-1-microsoft-jet-database-engine-after-applying-october-security-updates/" target="_blank" rel="external">“Unexpected error from external database driver (1). (Microsoft JET Database Engine)” after applying October security updates.</a> 有貼出 Microsoft 修正的 Update 了哦! 請參考</h3><p>Windows 7/2008 R2</p><p>-Monthly Roll-up - <a href="https://support.microsoft.com/en-us/help/4048957/windows-7-update-kb4048957" target="_blank" rel="external">https://support.microsoft.com/en-us/help/4048957/windows-7-update-kb4048957</a></p><p>-Security-only update - <a href="https://support.microsoft.com/en-us/help/4048960/windows-7-update-kb4048960" target="_blank" rel="external">https://support.microsoft.com/en-us/help/4048960/windows-7-update-kb4048960</a></p><p>Windows 2012</p><p>-Monthly Roll-up - <a href="https://support.microsoft.com/en-us/help/4048959/windows-server-2012-update-kb4048959" target="_blank" rel="external">https://support.microsoft.com/en-us/help/4048959/windows-server-2012-update-kb4048959</a></p><p>-Security-only update - <a href="https://support.microsoft.com/en-us/help/4048962/windows-server-2012-update-kb4048962" target="_blank" rel="external">https://support.microsoft.com/en-us/help/4048962/windows-server-2012-update-kb4048962</a></p><p>Windows 8.1 and 2012 R2</p><p>-Monthly Roll-up - <a href="https://support.microsoft.com/en-us/help/4048958/windows-81-update-kb4048958" target="_blank" rel="external">https://support.microsoft.com/en-us/help/4048958/windows-81-update-kb4048958</a></p><p>-Security-only update - <a href="https://support.microsoft.com/en-us/help/4048961/windows-81-update-kb4048961" target="_blank" rel="external">https://support.microsoft.com/en-us/help/4048961/windows-81-update-kb4048961</a></p><p>Windows 10 Fall (“November”) Update, version 1511</p><p>-<a href="https://support.microsoft.com/en-us/help/4048952" target="_blank" rel="external">https://support.microsoft.com/en-us/help/4048952</a></p><p>Windows 10 Anniversary Update, version 1607, and Server 2016</p><p>-<a href="https://support.microsoft.com/en-us/help/4048953" target="_blank" rel="external">https://support.microsoft.com/en-us/help/4048953</a></p><p>Windows 10 , version 1703</p><p>-<a href="https://support.microsoft.com/en-us/help/4048954/windows-10-update-kb4048954" target="_blank" rel="external">https://support.microsoft.com/en-us/help/4048954/windows-10-update-kb4048954</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;今天同事詢問有沒有看過以下的錯誤訊息，&quot;&gt;&lt;a href=&quot;#今天同事詢問有沒有看過以下的錯誤訊息，&quot; class=&quot;headerlink&quot; title=&quot;今天同事詢問有沒有看過以下的錯誤訊息，&quot;&gt;&lt;/a&gt;今天同事詢問有沒有看過以下的錯誤訊息，&lt;/h3&gt;&lt;p&gt;&lt;e
      
    
    </summary>
    
    
      <category term="從外部資料庫驅動程式產生的非預期的錯誤 (1)" scheme="https://rainmakerho.github.io/tags/%E5%BE%9E%E5%A4%96%E9%83%A8%E8%B3%87%E6%96%99%E5%BA%AB%E9%A9%85%E5%8B%95%E7%A8%8B%E5%BC%8F%E7%94%A2%E7%94%9F%E7%9A%84%E9%9D%9E%E9%A0%90%E6%9C%9F%E7%9A%84%E9%8C%AF%E8%AA%A4-1/"/>
    
      <category term="Microsoft.Jet.OLEDB.4.0" scheme="https://rainmakerho.github.io/tags/Microsoft-Jet-OLEDB-4-0/"/>
    
      <category term="kb4041691" scheme="https://rainmakerho.github.io/tags/kb4041691/"/>
    
      <category term="kb4041681" scheme="https://rainmakerho.github.io/tags/kb4041681/"/>
    
      <category term="kb4041676" scheme="https://rainmakerho.github.io/tags/kb4041676/"/>
    
      <category term="kb4041678" scheme="https://rainmakerho.github.io/tags/kb4041678/"/>
    
      <category term="外部数据库驱动程序中(1)的意外错误" scheme="https://rainmakerho.github.io/tags/%E5%A4%96%E9%83%A8%E6%95%B0%E6%8D%AE%E5%BA%93%E9%A9%B1%E5%8A%A8%E7%A8%8B%E5%BA%8F%E4%B8%AD-1-%E7%9A%84%E6%84%8F%E5%A4%96%E9%94%99%E8%AF%AF/"/>
    
      <category term="Unexpected error from external database driver (1)" scheme="https://rainmakerho.github.io/tags/Unexpected-error-from-external-database-driver-1/"/>
    
      <category term="Unexpected error from external database driver (1). (Microsoft JET Database Engine)" scheme="https://rainmakerho.github.io/tags/Unexpected-error-from-external-database-driver-1-Microsoft-JET-Database-Engine/"/>
    
  </entry>
  
  <entry>
    <title>Cordova iOS No target specifed for emulator. Deploying to undefined simulator</title>
    <link href="https://rainmakerho.github.io/2017/10/05/20171005/"/>
    <id>https://rainmakerho.github.io/2017/10/05/20171005/</id>
    <published>2017-10-05T02:03:07.000Z</published>
    <updated>2017-12-11T10:01:35.757Z</updated>
    
    <content type="html"><![CDATA[<h3 id="最近建立一個簡單-Cordova-專案在-Mac-macOS-10-12-6-Xcode-9-上測試時，居然發「No-target-specified-for-emulator-」的錯誤，-iOS-emulator-就不會自動的跑起來。如下圖，"><a href="#最近建立一個簡單-Cordova-專案在-Mac-macOS-10-12-6-Xcode-9-上測試時，居然發「No-target-specified-for-emulator-」的錯誤，-iOS-emulator-就不會自動的跑起來。如下圖，" class="headerlink" title="最近建立一個簡單 Cordova 專案在 Mac (macOS 10.12.6, Xcode 9) 上測試時，居然發「No target specified for emulator.」的錯誤， iOS emulator 就不會自動的跑起來。如下圖，"></a>最近建立一個簡單 Cordova 專案在 Mac (macOS 10.12.6, Xcode 9) 上測試時，居然發「No target specified for emulator.」的錯誤， iOS emulator 就不會自動的跑起來。如下圖，</h3><img src="/2017/10/05/20171005/errSimDeviceTypeUndefined.png" alt="slug" title="slug"><h3 id="輸入-「cordova-run-ios-–list」，-virtual-devices-都沒有顯示任何的資料，如下圖，"><a href="#輸入-「cordova-run-ios-–list」，-virtual-devices-都沒有顯示任何的資料，如下圖，" class="headerlink" title="輸入 「cordova run ios –list」， virtual devices 都沒有顯示任何的資料，如下圖，"></a>輸入 「cordova run ios –list」， virtual devices 都沒有顯示任何的資料，如下圖，</h3><img src="/2017/10/05/20171005/runioslist.png" alt="slug" title="slug"><h3 id="查看No-target-specified-for-emulator-Deploying-to-iPhone-SE-10-3-simulator說明，更新-cordova-ios-到-4-5-0-就可以了，所以就先將原本的-cordova-ios-移除，再加入-4-5-0-版本的，如下，"><a href="#查看No-target-specified-for-emulator-Deploying-to-iPhone-SE-10-3-simulator說明，更新-cordova-ios-到-4-5-0-就可以了，所以就先將原本的-cordova-ios-移除，再加入-4-5-0-版本的，如下，" class="headerlink" title="查看No target specified for emulator. Deploying to iPhone-SE, 10.3 simulator說明，更新 cordova-ios 到 4.5.0 就可以了，所以就先將原本的 cordova-ios 移除，再加入 4.5.0 版本的，如下，"></a>查看<a href="https://github.com/ionic-team/ionic-cli/issues/2487" target="_blank" rel="external">No target specified for emulator. Deploying to iPhone-SE, 10.3 simulator</a>說明，更新 cordova-ios 到 4.5.0 就可以了，所以就先將原本的 cordova-ios 移除，再加入 4.5.0 版本的，如下，</h3><img src="/2017/10/05/20171005/platformAddiOS45.png" alt="slug" title="slug"><h3 id="註"><a href="#註" class="headerlink" title="註:"></a>註:</h3><h3 id="如果沒特別設定版本的話，目前-cordova-ios-的版本是-4-4-哦-如下圖，"><a href="#如果沒特別設定版本的話，目前-cordova-ios-的版本是-4-4-哦-如下圖，" class="headerlink" title="如果沒特別設定版本的話，目前 cordova-ios 的版本是 4.4 哦! 如下圖，"></a>如果沒特別設定版本的話，目前 cordova-ios 的版本是 4.4 哦! 如下圖，</h3><img src="/2017/10/05/20171005/platformAddiOS.png" alt="slug" title="slug"><h3 id="再輸入-「cordova-run-ios-–list」，-virtual-devices-就出現了一堆的資料了，如下圖，"><a href="#再輸入-「cordova-run-ios-–list」，-virtual-devices-就出現了一堆的資料了，如下圖，" class="headerlink" title="再輸入 「cordova run ios –list」， virtual devices 就出現了一堆的資料了，如下圖，"></a>再輸入 「cordova run ios –list」， virtual devices 就出現了一堆的資料了，如下圖，</h3><img src="/2017/10/05/20171005/runioslistGot.png" alt="slug" title="slug"><h3 id="輸入「cordova-run-ios」，emulator-就順利起動了，如下，"><a href="#輸入「cordova-run-ios」，emulator-就順利起動了，如下，" class="headerlink" title="輸入「cordova run ios」，emulator 就順利起動了，如下，"></a>輸入「cordova run ios」，emulator 就順利起動了，如下，</h3><img src="/2017/10/05/20171005/RunEmulator.png" alt="slug" title="slug"><h3 id="另外，如果您在-Build-ipa-發生-「error-70-requires-provisioning-profile」，可以參考「After-upgrading-to-xcode-9-cordova-app-won’t-build-error-70-requires-provisioning-profile」的做法，在加入-ios-時，改取-github-上-master-這個版本，例如，"><a href="#另外，如果您在-Build-ipa-發生-「error-70-requires-provisioning-profile」，可以參考「After-upgrading-to-xcode-9-cordova-app-won’t-build-error-70-requires-provisioning-profile」的做法，在加入-ios-時，改取-github-上-master-這個版本，例如，" class="headerlink" title="另外，如果您在 Build ipa 發生 「error 70, requires provisioning profile」，可以參考「After upgrading to xcode 9, cordova app won’t build, error 70, requires provisioning profile」的做法，在加入 ios 時，改取 github 上 master 這個版本，例如，"></a>另外，如果您在 Build ipa 發生 「error 70, requires provisioning profile」，可以參考「<a href="https://stackoverflow.com/questions/46344443/after-upgrading-to-xcode-9-cordova-app-wont-build-error-70-requires-provisio" target="_blank" rel="external">After upgrading to xcode 9, cordova app won’t build, error 70, requires provisioning profile</a>」的做法，在加入 ios 時，改取 github 上 master 這個版本，例如，</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cordova platform add https://github.com/apache/cordova-ios.git</div></pre></td></tr></table></figure><h3 id="記得要新增-build-json-，然後設定相關的屬性哦"><a href="#記得要新增-build-json-，然後設定相關的屬性哦" class="headerlink" title="記得要新增 build.json ，然後設定相關的屬性哦!"></a>記得要新增 build.json ，然後設定相關的屬性哦!</h3><h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><h3 id="No-target-specified-for-emulator-Deploying-to-iPhone-SE-10-3-simulator"><a href="#No-target-specified-for-emulator-Deploying-to-iPhone-SE-10-3-simulator" class="headerlink" title="No target specified for emulator. Deploying to iPhone-SE, 10.3 simulator"></a><a href="https://github.com/ionic-team/ionic-cli/issues/2487" target="_blank" rel="external">No target specified for emulator. Deploying to iPhone-SE, 10.3 simulator</a></h3><h3 id="After-upgrading-to-xcode-9-cordova-app-won’t-build-error-70-requires-provisioning-profile"><a href="#After-upgrading-to-xcode-9-cordova-app-won’t-build-error-70-requires-provisioning-profile" class="headerlink" title="After upgrading to xcode 9, cordova app won’t build, error 70, requires provisioning profile"></a><a href="https://stackoverflow.com/questions/46344443/after-upgrading-to-xcode-9-cordova-app-wont-build-error-70-requires-provisio" target="_blank" rel="external">After upgrading to xcode 9, cordova app won’t build, error 70, requires provisioning profile</a></h3><h3 id="Cordova-Error-Your-ios-platform-does-not-have-Api-js"><a href="#Cordova-Error-Your-ios-platform-does-not-have-Api-js" class="headerlink" title="Cordova Error: Your ios platform does not have Api.js"></a><a href="https://stackoverflow.com/questions/44042641/cordova-error-your-ios-platform-does-not-have-api-js" target="_blank" rel="external">Cordova Error: Your ios platform does not have Api.js</a></h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;最近建立一個簡單-Cordova-專案在-Mac-macOS-10-12-6-Xcode-9-上測試時，居然發「No-target-specified-for-emulator-」的錯誤，-iOS-emulator-就不會自動的跑起來。如下圖，&quot;&gt;&lt;a href=
      
    
    </summary>
    
    
      <category term="cordova" scheme="https://rainmakerho.github.io/tags/cordova/"/>
    
      <category term="ios 11" scheme="https://rainmakerho.github.io/tags/ios-11/"/>
    
      <category term="com.apple.CoreSimulator.SimDeviceType.undefined" scheme="https://rainmakerho.github.io/tags/com-apple-CoreSimulator-SimDeviceType-undefined/"/>
    
  </entry>
  
</feed>
