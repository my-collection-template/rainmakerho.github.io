<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>亂馬客 - back to basics</title>
  <icon>https://www.gravatar.com/avatar/cd3aed042ccd7a5a5d9956b0bc07dc81</icon>
  <subtitle>back to basics</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://rainmakerho.github.io/"/>
  <updated>2018-07-03T09:34:36.843Z</updated>
  <id>https://rainmakerho.github.io/</id>
  
  <author>
    <name>亂馬客</name>
    <email>rainmaker_ho@gss.com.tw</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>透過 Aspose 將 datatable 的資料轉出成有浮水印的 PDF 檔</title>
    <link href="https://rainmakerho.github.io/2018/07/03/2018022/"/>
    <id>https://rainmakerho.github.io/2018/07/03/2018022/</id>
    <published>2018-07-03T07:55:15.000Z</published>
    <updated>2018-07-03T09:34:36.843Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>最近同事想要將 datatable 轉出 excel, 但又需要不能讓使用者修改，上面還要有浮水印.<br>本來想要直接 Render 出 Html 的 Table 並加入 page-break-after 去讓 Browser 分頁, 但 CSS 控制上不是很順利.</p><h3 id="實作"><a href="#實作" class="headerlink" title="實作"></a>實作</h3><p>Aspose.Cells 可以將各種資料源轉成 Excel (可參考<a href="https://apireference.aspose.com/net/cells/aspose.cells/cells/methods/index" target="_blank" rel="external">cells methods</a>的 Import 相關 Methods).<br>所以我們想要的做法如下，</p><p><strong>DataTable =&gt; 換 ColumnName =&gt; Excel =&gt; Pdf =&gt; 浮水印</strong></p><p>所以就可以抽一個共用的 Method 出來如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div></pre></td><td class="code"><pre><div class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></div><div class="line"><span class="comment"><span class="doctag">///</span> 輸入 DataTable 轉成 有浮水印 的 PDF</span></div><div class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></div><div class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="dt"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></div><div class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="columnNameMappings"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></div><div class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="folderName"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></div><div class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="watermark"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></div><div class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="pot"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></div><div class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span>產生的 pdf 檔名 (fullpath) <span class="doctag">&lt;/returns&gt;</span></span></div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">string</span> <span class="title">GenPDF</span>(<span class="params">DataTable dt, Dictionary&lt;<span class="keyword">string</span>, <span class="keyword">string</span>&gt; columnNameMappings</span></span></div><div class="line"><span class="function"><span class="params">, <span class="keyword">string</span> folderName, <span class="keyword">string</span> watermark, PageOrientationType pot</span>)</span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">ChangeColumnDisplayName(dt, columnNameMappings);</div><div class="line"></div><div class="line"><span class="comment">//output file name</span></div><div class="line"><span class="keyword">var</span> fileNameWithoutExt = <span class="string">$"<span class="subst">&#123;Guid.NewGuid().ToString(<span class="string">"N"</span>)&#125;</span>"</span>;</div><div class="line"><span class="keyword">var</span> outputExcel = Path.Combine(folderName, <span class="string">$"<span class="subst">&#123;fileNameWithoutExt&#125;</span>_tmp.xlsx"</span>);</div><div class="line"><span class="keyword">var</span> tempPdf = Path.Combine(folderName, <span class="string">$"<span class="subst">&#123;fileNameWithoutExt&#125;</span>_tmp.pdf"</span>);</div><div class="line"><span class="keyword">var</span> outputPdf = Path.Combine(folderName, <span class="string">$"<span class="subst">&#123;fileNameWithoutExt&#125;</span>.pdf"</span>);</div><div class="line"></div><div class="line"><span class="comment">//proc excel</span></div><div class="line"><span class="comment">// Instantiating a Workbook object</span></div><div class="line"><span class="keyword">var</span> workbook = <span class="keyword">new</span> Workbook();</div><div class="line"><span class="keyword">var</span> worksheet = workbook.Worksheets[<span class="number">0</span>];</div><div class="line">worksheet.Cells.ImportDataTable(dt, <span class="literal">true</span>, <span class="string">"A1"</span>);</div><div class="line">worksheet.AutoFitColumns();</div><div class="line">worksheet.AutoFitRows();</div><div class="line"></div><div class="line"><span class="keyword">var</span> range = worksheet.Cells.MaxDisplayRange;</div><div class="line"><span class="keyword">var</span> pageSetup = workbook.Worksheets[<span class="number">0</span>].PageSetup;</div><div class="line"><span class="comment">//var titleEndColumnName = CellsHelper.ColumnIndexToName(range.ColumnCount-1);</span></div><div class="line"><span class="comment">//pageSetup.PrintTitleColumns = $"$A:$&#123;titleEndColumnName&#125;";</span></div><div class="line">pageSetup.PrintTitleRows = <span class="string">"$1:$1"</span>;</div><div class="line">pageSetup.IsPercentScale = <span class="literal">true</span>;</div><div class="line">pageSetup.Orientation = pot;</div><div class="line"></div><div class="line"><span class="comment">//border</span></div><div class="line"><span class="comment">//Setting border for each cell in the range</span></div><div class="line"><span class="keyword">var</span> style = workbook.CreateStyle();</div><div class="line"><span class="keyword">var</span> colorBlack = System.Drawing.Color.Black;</div><div class="line">style.SetBorder(BorderType.BottomBorder, CellBorderType.Medium, colorBlack);</div><div class="line">style.SetBorder(BorderType.LeftBorder, CellBorderType.Medium, colorBlack);</div><div class="line">style.SetBorder(BorderType.RightBorder, CellBorderType.Medium, colorBlack);</div><div class="line">style.SetBorder(BorderType.TopBorder, CellBorderType.Medium, colorBlack);</div><div class="line">range.SetStyle(style);</div><div class="line"></div><div class="line"><span class="comment">// Saving the Excel file</span></div><div class="line"><span class="comment">//workbook.Save(outputExcel);</span></div><div class="line"><span class="comment">//workbook.Save(tempPdf);</span></div><div class="line"><span class="comment">//save to stream</span></div><div class="line"><span class="keyword">var</span> pdfStream = <span class="keyword">new</span> MemoryStream();</div><div class="line">workbook.Save(pdfStream, Aspose.Cells.SaveFormat.Pdf);</div><div class="line"></div><div class="line"><span class="keyword">var</span> pdfDocument = <span class="keyword">new</span> Aspose.Pdf.Document(pdfStream);</div><div class="line"><span class="keyword">if</span> (!<span class="keyword">string</span>.IsNullOrWhiteSpace(watermark))</div><div class="line">&#123;</div><div class="line"><span class="comment">//針對 PDF 加入 Watermark</span></div><div class="line">Aspose.Pdf.Facades.Stamp aStamp = <span class="keyword">new</span> Aspose.Pdf.Facades.Stamp();</div><div class="line">aStamp.Rotation = <span class="number">45</span>;</div><div class="line"><span class="keyword">var</span> textStamp = <span class="keyword">new</span> TextStamp(watermark);</div><div class="line"><span class="comment">//set properties of the stamp</span></div><div class="line"><span class="comment">// textStamp.Background = true;</span></div><div class="line">textStamp.Opacity = <span class="number">0.2</span>;</div><div class="line">textStamp.TextState.FontSize = <span class="number">60.0</span>F;</div><div class="line">textStamp.HorizontalAlignment = HorizontalAlignment.Center;</div><div class="line">textStamp.VerticalAlignment = VerticalAlignment.Center;</div><div class="line">textStamp.RotateAngle = aStamp.Rotation;</div><div class="line">textStamp.TextState.Font = FontRepository.FindFont(<span class="string">"Arial"</span>);</div><div class="line">textStamp.TextState.ForegroundColor = Aspose.Pdf.Color.Gray;</div><div class="line"><span class="keyword">foreach</span> (<span class="keyword">var</span> page <span class="keyword">in</span> pdfDocument.Pages)</div><div class="line">&#123;</div><div class="line">page.AddStamp(textStamp);</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">pdfDocument.Save(outputPdf);</div><div class="line"><span class="keyword">return</span> outputPdf;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></div><div class="line"><span class="comment"><span class="doctag">///</span> 將目前DataTable的資料依 Dictionary 來改它的 ColumnName</span></div><div class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></div><div class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="dt"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></div><div class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="columnNameMappings"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">ChangeColumnDisplayName</span>(<span class="params">DataTable dt, Dictionary&lt;<span class="keyword">string</span>, <span class="keyword">string</span>&gt; columnNameMappings</span>)</span></div><div class="line"><span class="function"></span>&#123;</div><div class="line"><span class="comment">//change columnName</span></div><div class="line"><span class="keyword">if</span> (columnNameMappings != <span class="literal">null</span>)</div><div class="line">&#123;</div><div class="line"><span class="keyword">foreach</span> (KeyValuePair&lt;<span class="keyword">string</span>, <span class="keyword">string</span>&gt; columnMapping <span class="keyword">in</span> columnNameMappings)</div><div class="line">&#123;</div><div class="line">dt.Columns[columnMapping.Key].ColumnName = columnMapping.Value;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>所以可以用測試的 DataTable 資料來測試看看，如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> DataTable <span class="title">GetDataSource</span>(<span class="params"></span>)</span></div><div class="line"><span class="function"></span>&#123;</div><div class="line"><span class="comment">// Instantiating a "Products" DataTable object</span></div><div class="line"><span class="keyword">var</span> dataTable = <span class="keyword">new</span> DataTable(<span class="string">"Products"</span>);</div><div class="line"><span class="comment">// Adding columns to the DataTable object</span></div><div class="line">dataTable.Columns.Add(<span class="string">"ProductID"</span>, <span class="keyword">typeof</span>(Int32));</div><div class="line">dataTable.Columns.Add(<span class="string">"ProductName"</span>, <span class="keyword">typeof</span>(<span class="keyword">string</span>));</div><div class="line">dataTable.Columns.Add(<span class="string">"ProductDesc"</span>, <span class="keyword">typeof</span>(<span class="keyword">string</span>));</div><div class="line">dataTable.Columns.Add(<span class="string">"Units"</span>, <span class="keyword">typeof</span>(Double));</div><div class="line"><span class="keyword">var</span> rand = <span class="keyword">new</span> Random();</div><div class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">90</span>; i++)</div><div class="line">&#123;</div><div class="line">dataTable.Rows.Add(i, <span class="string">$"產品名稱-<span class="subst">&#123;i&#125;</span>"</span>, <span class="string">$"產品描述 -<span class="subst">&#123;i&#125;</span>"</span>, rand.NextDouble());</div><div class="line">&#125;</div><div class="line"><span class="keyword">return</span> dataTable;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">btnGenPDF_Click</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>)</span></div><div class="line"><span class="function"></span>&#123;</div><div class="line"><span class="keyword">var</span> ds = GetDataSource();</div><div class="line"><span class="keyword">var</span> columnMapping = <span class="keyword">new</span> Dictionary&lt;<span class="keyword">string</span>, <span class="keyword">string</span>&gt;</div><div class="line">&#123;</div><div class="line">&#123;<span class="string">"ProductID"</span>, <span class="string">"產品代號"</span> &#125;,</div><div class="line">&#123;<span class="string">"ProductName"</span>, <span class="string">"產品名稱"</span> &#125;,</div><div class="line">&#123;<span class="string">"ProductDesc"</span>, <span class="string">"產品 描述"</span> &#125;,</div><div class="line"> &#123;<span class="string">"Units"</span>, <span class="string">"產品 庫存"</span> &#125;</div><div class="line">&#125;;</div><div class="line"><span class="keyword">var</span> outFileName = GenPDF(ds, columnMapping,</div><div class="line">Server.MapPath(<span class="string">"./data"</span>), <span class="string">"你好，我是亂馬客!!!"</span></div><div class="line">, PageOrientationType.Landscape);</div><div class="line">Response.Write(<span class="string">$"&lt;hr&gt;Export to Pdf-1:<span class="subst">&#123;outFileName&#125;</span>"</span>);</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">var</span> ds2 = GetDataSource();</div><div class="line"><span class="comment">//沒有 mapping 就用原生的 Column Name</span></div><div class="line"><span class="keyword">var</span> outFileName2 = GenPDF(ds2, <span class="literal">null</span>,</div><div class="line">Server.MapPath(<span class="string">"./data"</span>), <span class="string">""</span></div><div class="line">, PageOrientationType.Portrait);</div><div class="line">Response.Write(<span class="string">$"&lt;hr&gt;Export to Pdf-2:<span class="subst">&#123;outFileName2&#125;</span>"</span>);</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure><p>所以產生的結果如下，<br><img src="/2018/07/03/2018022/dt2pdf.png" alt="[DataTable產生pdf]" title="[DataTable產生pdf]"><br>註:因為使用 Aspose.Cells 及 Aspose.Pdf ，所以請記得從 Nuget 去下載哦~</p><p>Demo 專案:<a href="https://github.com/rainmakerho/asposeExcel2PDF" target="_blank" rel="external">rainmakerho/asposeExcel2PDF</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;最近同事想要將 datatable 轉出 excel, 但又需要不能讓使用者修改，上面還要有浮水印.&lt;br&gt;本來想要直接 Render 出 
      
    
    </summary>
    
    
      <category term="Aspose" scheme="https://rainmakerho.github.io/tags/Aspose/"/>
    
      <category term="Aspose.Cells" scheme="https://rainmakerho.github.io/tags/Aspose-Cells/"/>
    
      <category term="datatable" scheme="https://rainmakerho.github.io/tags/datatable/"/>
    
      <category term="Aspose.Pdf" scheme="https://rainmakerho.github.io/tags/Aspose-Pdf/"/>
    
      <category term="pdf" scheme="https://rainmakerho.github.io/tags/pdf/"/>
    
      <category term="watermark" scheme="https://rainmakerho.github.io/tags/watermark/"/>
    
      <category term="浮水印" scheme="https://rainmakerho.github.io/tags/%E6%B5%AE%E6%B0%B4%E5%8D%B0/"/>
    
      <category term="asp.net" scheme="https://rainmakerho.github.io/tags/asp-net/"/>
    
      <category term="Aspose.Pdf.Facades.Stamp" scheme="https://rainmakerho.github.io/tags/Aspose-Pdf-Facades-Stamp/"/>
    
  </entry>
  
  <entry>
    <title>Open Html Excel File from Aspose.Cells 透過 Aspose.Cells 開啟 Html 格式的 Excel 檔案</title>
    <link href="https://rainmakerho.github.io/2018/07/02/2018021/"/>
    <id>https://rainmakerho.github.io/2018/07/02/2018021/</id>
    <published>2018-07-02T02:41:25.000Z</published>
    <updated>2018-07-02T02:59:48.200Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>我們之前透過程式產生 Excel 檔時，是先將一份 Excel 另存成 Html 格式的檔案，然後在裡面設定一些 Tag 。<br>程式就透過去 Replace 這些 Tag 後，再將程式另存，並將檔名改成 xls 。<br>這樣使用者就可以透過 Excel 去開啟它了。<br>只是最近的 Excel 開啟這樣的檔案，都會先 alert 使用者 (可以透過調整 機碼 讓它不要 alert)。<br>那有辦法讓它變成真正的 Excel 檔，或是轉成 PDF 嗎?</p><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>我們可以透過 Aspose 的元件來處理哦! 它有提供一個 HTMLLoadOptions 可以讓我們達到這樣子的目的哦! 程式如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> filePath = <span class="string">"hr840401.xls"</span>;</div><div class="line"><span class="keyword">var</span> opts = <span class="keyword">new</span> HTMLLoadOptions(LoadFormat.Html);</div><div class="line"><span class="keyword">var</span> workbook = <span class="keyword">new</span> Workbook(filePath, opts);</div><div class="line">workbook.Save(<span class="string">"hr840401_out.xls"</span>);</div></pre></td></tr></table></figure><p>它還可以載其他的格式哦，詳細可以參考<a href="https://apireference.aspose.com/net/pdf/aspose.pdf/loadformat" target="_blank" rel="external">Aspose LoadFormat Enumeration</a></p><h3 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h3><p><a href="https://forum.aspose.com/t/open-excel-html-file/44690/3" target="_blank" rel="external">Open Excel/html file</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;我們之前透過程式產生 Excel 檔時，是先將一份 Excel 另存成 Html 格式的檔案，然後在裡面設定一些 Tag 。&lt;br&gt;程式就透
      
    
    </summary>
    
    
      <category term="aspose" scheme="https://rainmakerho.github.io/tags/aspose/"/>
    
      <category term="aspose.cells" scheme="https://rainmakerho.github.io/tags/aspose-cells/"/>
    
      <category term="Html" scheme="https://rainmakerho.github.io/tags/Html/"/>
    
      <category term="Excell" scheme="https://rainmakerho.github.io/tags/Excell/"/>
    
  </entry>
  
  <entry>
    <title>IBotDataStore.FlushAsync Exception: The data is changed</title>
    <link href="https://rainmakerho.github.io/2018/07/01/2018020/"/>
    <id>https://rainmakerho.github.io/2018/07/01/2018020/</id>
    <published>2018-07-01T03:29:38.000Z</published>
    <updated>2018-07-01T04:06:36.657Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>最新有個需求就是要判斷目前 User 是不是在進行某項作業, 如果不是就推送包含 Button 的訊息給 User, 不然就推文字通知訊息等目前的作業完成後，再顯示待辦的 Button 訊息給 User .</p><h3 id="研究"><a href="#研究" class="headerlink" title="研究"></a>研究</h3><p>最簡單的就是將這個 flag 寫在 BotState 之中，所以我們可以在使用者加入時，將它的 Conversation 記錄下來，如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (message.Type == ActivityTypes.ConversationUpdate)</div><div class="line">&#123;</div><div class="line">Func&lt;ChannelAccount, <span class="keyword">bool</span>&gt; isChatbot =</div><div class="line">channelAcct =&gt; channelAcct.Id == message.Recipient.Id;</div><div class="line"><span class="keyword">if</span> (message.MembersAdded.Any(isChatbot))</div><div class="line">&#123;</div><div class="line"><span class="keyword">var</span> memberAdded = message.MembersAdded.FirstOrDefault();</div><div class="line"><span class="comment">//這裡請自行處理將該 user 的 Conversation 儲存起來，為了方便，這裡將它存在一個變數之中</span></div><div class="line">WebApiApplication._ConversationReference = message.ToConversationReference();</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>然後在申請作業記錄這個 Flag ，當然，結束時請記得將這個 Flag 清除哦!</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">using</span> (<span class="keyword">var</span> scope = DialogModule.BeginLifetimeScope(Conversation.Container, context.Activity.AsMessageActivity()))</div><div class="line">&#123;</div><div class="line"><span class="keyword">var</span> botDataStore = scope.Resolve&lt;IBotDataStore&lt;BotData&gt;&gt;();</div><div class="line"><span class="keyword">var</span> key = Address.FromActivity(context.Activity);</div><div class="line"><span class="keyword">var</span> botUserData = <span class="keyword">await</span> botDataStore.LoadAsync(key, BotStoreType.BotUserData, <span class="keyword">default</span>(CancellationToken));</div><div class="line">botUserData.SetProperty&lt;<span class="keyword">string</span>&gt;(<span class="string">"dialog"</span>, <span class="string">"RootDialog:MessageReceivedAsync"</span>);</div><div class="line"><span class="keyword">await</span> botDataStore.SaveAsync(key, BotStoreType.BotUserData, botUserData, <span class="keyword">default</span>(CancellationToken));</div><div class="line"><span class="keyword">await</span> botDataStore.FlushAsync(key, <span class="keyword">default</span>(CancellationToken));</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>可是執行時，卻發生了「Exception: The data is changed」的錯誤，如下圖，<br><img src="/2018/07/01/2018020/eDataChanged.png" alt="[Exception: The data is changed]" title="[Exception: The data is changed]"></p><p>因為 botframework 會自動去幫我們將 State 存檔，所以當它存檔時，發現狀態被改掉了，所以就出現「Exception: The data is changed」的錯誤 .</p><p>嗯, 那怎麼辦呢? 那就調整程式, 不要去呼叫 FlushAsync, 讓 botframework 去存就可以了, 所以程式調整如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">using</span> (<span class="keyword">var</span> scope = DialogModule.BeginLifetimeScope(Conversation.Container, context.Activity.AsMessageActivity()))</div><div class="line">&#123;</div><div class="line"><span class="keyword">var</span> botDataStore = scope.Resolve&lt;IBotDataStore&lt;BotData&gt;&gt;();</div><div class="line"><span class="keyword">var</span> key = Address.FromActivity(context.Activity);</div><div class="line"><span class="keyword">var</span> botUserData = <span class="keyword">await</span> botDataStore.LoadAsync(key, BotStoreType.BotUserData, <span class="keyword">default</span>(CancellationToken));</div><div class="line">botUserData.SetProperty&lt;<span class="keyword">string</span>&gt;(<span class="string">"dialog"</span>, <span class="string">"RootDialog:MessageReceivedAsync"</span>);</div><div class="line"><span class="keyword">await</span> botDataStore.SaveAsync(key, BotStoreType.BotUserData, botUserData, <span class="keyword">default</span>(CancellationToken));</div><div class="line">    <span class="comment">//await botDataStore.FlushAsync(key, default(CancellationToken));</span></div><div class="line">&#125;</div></pre></td></tr></table></figure><p>所以我們的通知程式就可以透過 ConversationReference 轉回 Activity, 取回 BotState, 例如，我新增一個 api method 來顯示 BotState , 如下,</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">[<span class="meta">Route(<span class="meta-string">"api/Messages/GetDialogData"</span>)</span>]</div><div class="line">[<span class="meta">HttpGet</span>]</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task&lt;HttpResponseMessage&gt; <span class="title">GetDialogData</span>(<span class="params"></span>)</span></div><div class="line"><span class="function"></span>&#123;</div><div class="line"><span class="keyword">var</span> resp = <span class="keyword">new</span> HttpResponseMessage(HttpStatusCode.OK);</div><div class="line"><span class="keyword">if</span> (WebApiApplication._ConversationReference != <span class="literal">null</span>)</div><div class="line">&#123;</div><div class="line"><span class="keyword">var</span> message = WebApiApplication._ConversationReference.GetPostToBotMessage();</div><div class="line"><span class="keyword">using</span> (<span class="keyword">var</span> scope = DialogModule.BeginLifetimeScope(Conversation.Container, message.AsMessageActivity()))</div><div class="line">&#123;</div><div class="line"><span class="keyword">var</span> botDataStore = scope.Resolve&lt;IBotDataStore&lt;BotData&gt;&gt;();</div><div class="line"><span class="keyword">var</span> key = Address.FromActivity(message);</div><div class="line"><span class="keyword">var</span> botUserData = <span class="keyword">await</span> botDataStore.LoadAsync(key, BotStoreType.BotUserData, <span class="keyword">default</span>(CancellationToken));</div><div class="line"><span class="keyword">var</span> dialogData = botUserData.GetProperty&lt;<span class="keyword">string</span>&gt;(<span class="string">"dialog"</span>);</div><div class="line">resp.Content = <span class="keyword">new</span> StringContent(<span class="string">$"&lt;html&gt;&lt;body&gt;Dialogs:<span class="subst">&#123;dialogData&#125;</span>&lt;/body&gt;&lt;/html&gt;"</span>, System.Text.Encoding.UTF8, <span class="string">@"text/html"</span>);</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"><span class="keyword">return</span> resp;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>所以在 Dialog 中儲存 State 時 , 可以注意一下這種狀況哦 ^_^</p><p>Demo 專案可以參考 <a href="https://github.com/rainmakerho/Exception_DataChanged" target="_blank" rel="external">rainmakerho/Exception_DataChanged</a></p><h3 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h3><p><a href="https://stackoverflow.com/questions/42860020/microsoft-bot-framework-exception-the-data-is-changed" target="_blank" rel="external">Microsoft Bot Framework: Exception: The data is changed</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;最新有個需求就是要判斷目前 User 是不是在進行某項作業, 如果不是就推送包含 Button 的訊息給 User, 不然就推文字通知訊息等
      
    
    </summary>
    
    
      <category term="botframework" scheme="https://rainmakerho.github.io/tags/botframework/"/>
    
      <category term="IBotDataStore" scheme="https://rainmakerho.github.io/tags/IBotDataStore/"/>
    
      <category term="FlushAsync" scheme="https://rainmakerho.github.io/tags/FlushAsync/"/>
    
      <category term="The data is changed" scheme="https://rainmakerho.github.io/tags/The-data-is-changed/"/>
    
  </entry>
  
  <entry>
    <title>Implement global message handlers and resets the dialog stack</title>
    <link href="https://rainmakerho.github.io/2018/06/05/2018019/"/>
    <id>https://rainmakerho.github.io/2018/06/05/2018019/</id>
    <published>2018-06-05T01:45:23.000Z</published>
    <updated>2018-06-05T06:42:55.874Z</updated>
    
    <content type="html"><![CDATA[<p>在 <a href="https://docs.microsoft.com/en-us/azure/bot-service/dotnet/bot-builder-dotnet-global-handlers?view=azure-bot-service-3.0" target="_blank" rel="external">Implement global message handlers</a> 有說明如何透過 global message handlers 來處理一些 help, cancel 等等的全域處理。例如在一個對話當中，使用者輸入了取得待批示的指令，這時需要將處理待批示清單的 Dialog 叫出來，並且將目前處理中的對話堆疉清除(this.task.Reset())。</p><p>這裡要注意的是 this.task.Reset() 一定要放在最後面，不然會噴錯哦! 例如，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">async</span> Task <span class="title">PostAsync</span>(<span class="params">IActivity item, <span class="keyword">string</span> state, CancellationToken token</span>)</span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">    <span class="keyword">var</span> message = item <span class="keyword">as</span> IMessageActivity;</div><div class="line">    <span class="keyword">if</span> (message != <span class="literal">null</span>)</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">var</span> settingsDialog = <span class="keyword">new</span> SettingsDialog();</div><div class="line">        <span class="keyword">var</span> interruption = settingsDialog.Void&lt;<span class="keyword">object</span>, IMessageActivity&gt;();</div><div class="line">        <span class="keyword">this</span>.task.Call(interruption, <span class="literal">null</span>);</div><div class="line">        <span class="keyword">await</span> <span class="keyword">this</span>.task.PollAsync(token);</div><div class="line">        <span class="comment">// 要清除 DialogStack 的話，請加上 this.task.Reset()</span></div><div class="line">        <span class="keyword">this</span>.task.Reset();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>另外，如果無法在繼承 ScorableBase 的 Class 中去 Reset DialogStack 的話。<br>在 Dialog 中則可以透過 context.EndConversation 去清 DialogStack (非常感謝同事 Marty 的分享)，如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">context.EndConversation(EndOfConversationCodes.CompletedSuccessfully);</div><div class="line">context.Done&lt;<span class="keyword">string</span>&gt;(<span class="literal">null</span>);</div></pre></td></tr></table></figure><p>也可以參考 <a href="https://stackoverflow.com/questions/39113403/terminate-all-dialogs-and-exit-conversation-in-ms-bot-framework-when-the-user-ty/39160430" target="_blank" rel="external">Terminate all dialogs and exit conversation in MS Bot Framework when the user types “exit”, “quit” etc</a> 的方式，如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">using</span> (<span class="keyword">var</span> scope = DialogModule.BeginLifetimeScope(Conversation.Container, (IMessageActivity)context.Activity))</div><div class="line">&#123;</div><div class="line"><span class="keyword">var</span> botData = scope.Resolve&lt;IBotData&gt;();</div><div class="line"><span class="keyword">await</span> botData.LoadAsync(<span class="keyword">default</span>(CancellationToken));</div><div class="line"><span class="keyword">var</span> stack = scope.Resolve&lt;IDialogStack&gt;();</div><div class="line">stack.Reset();</div><div class="line"><span class="keyword">await</span> botData.FlushAsync(<span class="keyword">default</span>(CancellationToken));</div><div class="line">&#125;</div><div class="line">context.Done&lt;<span class="keyword">string</span>&gt;(<span class="literal">null</span>);</div></pre></td></tr></table></figure><p>如果在 Dialog 中直接 call context.Reset(); 可是會噴錯的哦!</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在 &lt;a href=&quot;https://docs.microsoft.com/en-us/azure/bot-service/dotnet/bot-builder-dotnet-global-handlers?view=azure-bot-service-3.0&quot; targe
      
    
    </summary>
    
    
      <category term="botframework" scheme="https://rainmakerho.github.io/tags/botframework/"/>
    
      <category term="IDialogTask" scheme="https://rainmakerho.github.io/tags/IDialogTask/"/>
    
      <category term="ScorableBase" scheme="https://rainmakerho.github.io/tags/ScorableBase/"/>
    
  </entry>
  
  <entry>
    <title>Access BotState when use custom BotDataStore</title>
    <link href="https://rainmakerho.github.io/2018/06/04/2018018/"/>
    <id>https://rainmakerho.github.io/2018/06/04/2018018/</id>
    <published>2018-06-04T08:06:11.000Z</published>
    <updated>2018-06-04T08:31:12.303Z</updated>
    
    <content type="html"><![CDATA[<p>botframework 預設會將 State 存到 state.botframework.com 上去(使用 emulator 則會存在 emulator 上面)。<br><img src="/2018/06/04/2018018/defaultBotStore.png" alt="[defaultBotStore.png]" title="[defaultBotStore.png]"></p><p>目前的 .NET Samples 也都改成使用 InMemoryDataStore 的方式，使用方式如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">Application_Start</span>(<span class="params"></span>)</span></div><div class="line"><span class="function"></span>&#123;</div><div class="line"><span class="comment">//加以下這一段Codes</span></div><div class="line">Conversation.UpdateContainer(</div><div class="line">   builder =&gt;</div><div class="line">   &#123;</div><div class="line">   <span class="comment">//in Memory store</span></div><div class="line">   <span class="keyword">var</span> store = <span class="keyword">new</span> InMemoryDataStore();</div><div class="line">   builder.Register(c =&gt; <span class="keyword">new</span> CachingBotDataStore(store,</div><div class="line">  CachingBotDataStoreConsistencyPolicy.LastWriteWins))</div><div class="line">  .As&lt;IBotDataStore&lt;BotData&gt;&gt;()</div><div class="line">  .AsSelf()</div><div class="line">  .SingleInstance();</div><div class="line">   &#125;);</div><div class="line"><span class="comment">//加以上這一段Codes</span></div><div class="line"></div><div class="line">GlobalConfiguration.Configure(WebApiConfig.Register);</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure><p>您也可以將 State 存到 SQL 之中，可以參考 <a href="https://blog.botframework.com/2017/07/26/saving-state-sql-dotnet/" target="_blank" rel="external">Saving State data in SQL with .NET</a>.<br>所以從 Emulator 來看就會看不到 getUserData 及 setUserData 的 event，如下圖，<br><img src="/2018/06/04/2018018/inMemoryBotStore.png" alt="[BotDataStore 讀自 inMemoryBotStore]" title="[BotDataStore 讀自 inMemoryBotStore]"></p><p>當您使用客製的 DataStore 後，Access BotDataStore 就不能直接用 var stateClient = activity.GetStateClient() 。而是要透過 DialogModule.BeginLifetimeScope 來取得，如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">using</span> (<span class="keyword">var</span> scope = DialogModule.BeginLifetimeScope(Conversation.Container, activity))</div><div class="line">&#123;</div><div class="line"><span class="keyword">var</span> botDataStore = scope.Resolve&lt;IBotDataStore&lt;BotData&gt;&gt;();</div><div class="line"><span class="keyword">var</span> key = Address.FromActivity(activity);</div><div class="line"><span class="keyword">var</span> chatbotData = <span class="keyword">await</span> botDataStore.LoadAsync(key, BotStoreType.BotUserData, CancellationToken.None);</div><div class="line"><span class="keyword">int</span> ties = chatbotData.GetProperty&lt;<span class="keyword">int</span>&gt;(<span class="string">"ties"</span>);</div><div class="line"><span class="comment">//...</span></div><div class="line">&#125;</div></pre></td></tr></table></figure><p>刪除資料就透過 RemoveProperty 來刪除，如下，</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">using</span> (<span class="keyword">var</span> scope = DialogModule.BeginLifetimeScope(Conversation.Container, activity))</div><div class="line">&#123;</div><div class="line"><span class="keyword">var</span> botDataStore = scope.Resolve&lt;IBotDataStore&lt;BotData&gt;&gt;();</div><div class="line"><span class="keyword">var</span> key = Address.FromActivity(activity);</div><div class="line"><span class="keyword">var</span> chatbotData = <span class="keyword">await</span> botDataStore.LoadAsync(key, BotStoreType.BotUserData , CancellationToken.None);</div><div class="line">chatbotData.RemoveProperty(<span class="string">"ties"</span>);</div><div class="line"><span class="keyword">await</span> botDataStore.SaveAsync(key, BotStoreType.BotUserData, chatbotData, CancellationToken.None);</div><div class="line"><span class="keyword">await</span> botDataStore.FlushAsync(key, CancellationToken.None);</div><div class="line"><span class="comment">// ...</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;botframework 預設會將 State 存到 state.botframework.com 上去(使用 emulator 則會存在 emulator 上面)。&lt;br&gt;&lt;img src=&quot;/2018/06/04/2018018/defaultBotStore.png&quot;
      
    
    </summary>
    
    
      <category term="botframework" scheme="https://rainmakerho.github.io/tags/botframework/"/>
    
      <category term="BotDataStore" scheme="https://rainmakerho.github.io/tags/BotDataStore/"/>
    
      <category term="autofac" scheme="https://rainmakerho.github.io/tags/autofac/"/>
    
      <category term="DialogModule.BeginLifetimeScope" scheme="https://rainmakerho.github.io/tags/DialogModule-BeginLifetimeScope/"/>
    
  </entry>
  
  <entry>
    <title>談談 MSDTC 的問題</title>
    <link href="https://rainmakerho.github.io/2018/05/16/2018017/"/>
    <id>https://rainmakerho.github.io/2018/05/16/2018017/</id>
    <published>2018-05-16T03:01:04.000Z</published>
    <updated>2018-05-16T03:27:03.392Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>MSDTC 不通，無法啟用 MSDTC，協力電腦異動管理員已經停用了對遠端/網路異動的支援，現在看見 MSDTC 真是頭大呀 ~~~</p><h3 id="解決"><a href="#解決" class="headerlink" title="解決"></a>解決</h3><p>昨天客戶的系統有一個請假功能忽然就無法沒有作用，但其他功能是好的。詢問客戶之前有做了些什麼嗎? 客戶說只有一台 switch 壞掉，換新的 siwtch 而已。當下真覺那會不會是網路動了什麼，所以一到客戶那就試看看到底是什麼問題。最後從 log 中發現「MSDTC」的問題。立馬試了 ap &lt;-&gt; db ，用 name 是否可以 ping 得到，結果是可以的。詢問客戶網管，ap &lt;-&gt; db 是否有什麼 rule 擋了那些 port 呢?<br>記得 MSDTC 需要 port 135, ping icmp, 如果有 firewall 的話，要設定某 Port Range 給它，例如 port 5001-6000(可以參考<a href="https://blogs.technet.microsoft.com/askcore/2014/04/29/how-to-configure-msdtc-to-use-a-specific-port-in-windows-server-20122012r2/" target="_blank" rel="external">How to Configure MSDTC to Use a Specific Port in Windows Server 2012/2012R2</a> )。可是網管說沒有擋那些 Port 呀!!!<br>正當一籌莫展之時，客戶的 DBA 詢問說，那 ap 跟 db 本身的 firewall 有沒有開呀!?<br>疑 !!! 檢查了一下，真是有開呢? 先將它關閉試看看，MSDTC 果然就通了。真的非常感謝客戶 IT 的幫忙。</p><p>回到這問題，下次 MSDTC 問題呢? 還是要先從 ap，db 的環境來看 firewall，都沒問題後，再往外去查。附上我們公司整理 MSDTC 排除的相關文件，希望對大家在排除 MSDTC 上有所益助。</p><a href="/2018/05/16/2018017/故障排除指南.doc" title="[MSSQLDTC 故障排除指南.doc]">[MSSQLDTC 故障排除指南.doc]</a><a href="/2018/05/16/2018017/MSDTC.doc" title="[MSDTC.doc]">[MSDTC.doc]</a><a href="/2018/05/16/2018017/CRDSUPPORT3406.txt" title="[協力電腦異動管理員已經停用了對遠端/網路異動的支援.txt]">[協力電腦異動管理員已經停用了對遠端/網路異動的支援.txt]</a>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;MSDTC 不通，無法啟用 MSDTC，協力電腦異動管理員已經停用了對遠端/網路異動的支援，現在看見 MSDTC 真是頭大呀 ~~~&lt;/p&gt;
      
    
    </summary>
    
    
      <category term="MSDTC" scheme="https://rainmakerho.github.io/tags/MSDTC/"/>
    
      <category term="firewall" scheme="https://rainmakerho.github.io/tags/firewall/"/>
    
      <category term="協力電腦異動管理員已經停用了對遠端/網路異動的支援" scheme="https://rainmakerho.github.io/tags/%E5%8D%94%E5%8A%9B%E9%9B%BB%E8%85%A6%E7%95%B0%E5%8B%95%E7%AE%A1%E7%90%86%E5%93%A1%E5%B7%B2%E7%B6%93%E5%81%9C%E7%94%A8%E4%BA%86%E5%B0%8D%E9%81%A0%E7%AB%AF-%E7%B6%B2%E8%B7%AF%E7%95%B0%E5%8B%95%E7%9A%84%E6%94%AF%E6%8F%B4/"/>
    
  </entry>
  
  <entry>
    <title>透過 Microsoft BotFramework-WebChat 的 botchat.js 連接 Botframework 做的 Chatbot ，輕鬆整合到 Web Application 之中</title>
    <link href="https://rainmakerho.github.io/2018/05/10/2018016/"/>
    <id>https://rainmakerho.github.io/2018/05/10/2018016/</id>
    <published>2018-05-10T07:12:02.000Z</published>
    <updated>2018-05-10T09:12:55.987Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>  我們透過 Microsoft BotFramework 來製作 Chatbot 程式後，除了可以接各透的 IM Channel 外，最快速的就是將它整合到現有的 Web Application 之中。<a href="https://github.com/Microsoft/BotFramework-WebChat" target="_blank" rel="external">Microsoft BotFramework-WebChat</a> 已有提供範例讓我們去整合。<br>  但是一般的網站並不需要一下子就顯示 WebChat ，而是在下方需要一個機器人的小圖示，按下去之後再顯示出 WebChat 。</p><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>  依上面的需求，我們需要 2 個 div, 一個放網頁下方的小圖示(WebChatButton), 另一個是放 WebChat (WebChatDialog)。<br>  所以預設的 html 如下，<br>  <figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ID</span>=<span class="string">"WebChatButtonD"</span> <span class="attr">onclick</span>=<span class="string">"開啟WebChat的function"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"WebChatDialog"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure></p><p>  透過 botchat.js 來建立 WebChat 需要一些設定值，所以就先定訂這些設定值的 interface ，如下，<br>  <figure class="highlight typescript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">interface</span> IBotChatUIConfig &#123;</div><div class="line">  botId: <span class="built_in">string</span>, </div><div class="line">  botName: <span class="built_in">string</span>,</div><div class="line">  userId: <span class="built_in">string</span>,</div><div class="line">  userName: <span class="built_in">string</span>,</div><div class="line">  botChatIconUrl: <span class="built_in">string</span>, <span class="comment">//下方機器人的圖示</span></div><div class="line">  chatTitle: <span class="built_in">string</span>, <span class="comment">// WebChat Header 的文字</span></div><div class="line">  directLineOptions: <span class="built_in">any</span>, <span class="comment">//DirectLine 的設定</span></div><div class="line">  locale: <span class="built_in">string</span>,  <span class="comment">//語系</span></div><div class="line">  showWebChatButton: <span class="built_in">boolean</span> <span class="comment">// 是否顯示下方的機器人圖示 </span></div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>  再來可以透過 BotChatUI 來封裝要一開始顯示出網頁下方的機器人圖示，按下後，要開啟 WebChat ，而按下 WebChat 的 Header 後，要將 WebChat Hide 起來，並顯示出機器人的圖示。<br>  <img src="https://github.com/rainmakerho/WebChatCustomization/raw/master/init.png" alt="開始的畫面"><br>  另外，我們也可以透過調整 css 來讓 WebChat 長的不一樣，例如我們可以在 WebChat 中也顯示機器人的圖示。<br>  <img src="https://github.com/rainmakerho/WebChatCustomization/raw/master/chating.png" alt="開啟 WebChat 畫面"></p><p>  所以在即有的 Web Application 之中只要加入 <a href="https://github.com/rainmakerho/WebChatCustomization" target="_blank" rel="external">WebChatCustomization</a> 的 Botchat 目錄中的檔案，然後在要加入 WebChat 的網頁中加入以下的 Script 及設定您要的值，您就會有美美的 WebChat 了哦!<br>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">&lt;!-- chatbot --&gt;</div><div class="line">&lt;link href=<span class="string">"Botchat/CSS/botchat.css"</span> rel=<span class="string">"stylesheet"</span> /&gt;</div><div class="line">&lt;link href=<span class="string">"Botchat/CSS/botchat-fullwindow.css"</span> rel=<span class="string">"stylesheet"</span> /&gt;</div><div class="line">&lt;link href=<span class="string">"Botchat/CSS/botchatCustom.css"</span> rel=<span class="string">"stylesheet"</span> /&gt;</div><div class="line">&lt;script src=<span class="string">"Botchat/Scripts/botchat-es5.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></div><div class="line">&lt;script src=<span class="string">"Botchat/Scripts/BotChatUI.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></div><div class="line">&lt;script&gt;</div><div class="line"><span class="keyword">var</span> botChatUI = <span class="keyword">new</span> BotChatUI(&#123;</div><div class="line">botId: <span class="string">'RainmakerBot'</span>,</div><div class="line">botName: <span class="string">'小亂機器人'</span>,</div><div class="line">userId: <span class="string">'Rainmaker'</span>,</div><div class="line">userName: <span class="string">'亂馬客'</span>,</div><div class="line">chatTitle: <span class="string">'小亂機器人, 按我可縮小'</span>,</div><div class="line">locale: <span class="string">'zh-tw'</span>,</div><div class="line">directLineOptions: &#123;</div><div class="line">secret: <span class="string">''</span>,</div><div class="line">token: <span class="string">''</span>,</div><div class="line">domain: <span class="string">'http://localhost:3000/directline/gssbot'</span>,</div><div class="line">pollingInterval: <span class="number">1000</span>,</div><div class="line">webSocket: <span class="literal">false</span></div><div class="line">&#125;,</div><div class="line">botChatIconUrl: <span class="string">'https://avatars2.githubusercontent.com/u/11240907?s=400&amp;u=597a9c2ae536885dae848ed245dc2dfb591a8c28&amp;v=4'</span>,</div><div class="line">showWebChatButton: <span class="literal">true</span></div><div class="line">&#125;);</div><div class="line">&lt;<span class="regexp">/script&gt;</span></div><div class="line"><span class="regexp">&lt;!-- chatbot --&gt;</span></div></pre></td></tr></table></figure></p><p>  因為我想讓 IE 也可以 run ，所以我加入的是 botchat-es5.js。如果您不考慮 IE 的話，可以使用 botchat.js。<br>  在 BotChatUI.ts 中，有特別處理，開啟 WebChat 時才建立 DirectLine 及 WebChat，關閉 WebChat 時，會先儲存 DirectLine 的 ConversationId，並 close 連線。重新開啟 WebChat 時，才知道原本的 ConversationId 是什麼，重新將原本的內容 Load 回來。<br>  為什麼要這樣子呢? 因為我們是使用 <a href="https://github.com/rainmakerho/offline_dl" target="_blank" rel="external">offline Direct Line</a>，目前還不 Support WebSocket ，所以 WebChat 會一直 Polling。所以當關掉 WebChat 時，DirectLine close 後，它就不會再 polling。<br>  那要怎麼讓它重新再連線呢? 目前我們的做法是將原本的 WebChat 移掉再重新建立。詳細可以參考 <a href="https://github.com/rainmakerho/WebChatCustomization/blob/master/BotChatClient/Botchat/TypeScripts/BotChatUI.ts" target="_blank" rel="external">BotChatUI.ts</a> startConversation / endConversation functions。<br>  而重新連的方式，如果有更好的方式會更新上去，如果大家知道的話，也請跟大家分享。</p><h3 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h3><p><a href="https://github.com/rainmakerho/WebChatCustomization" target="_blank" rel="external">WebChatCustomization</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;  我們透過 Microsoft BotFramework 來製作 Chatbot 程式後，除了可以接各透的 IM Channel 外，最快
      
    
    </summary>
    
    
      <category term="BotFramework-WebChat" scheme="https://rainmakerho.github.io/tags/BotFramework-WebChat/"/>
    
      <category term="botchat.js" scheme="https://rainmakerho.github.io/tags/botchat-js/"/>
    
      <category term="Botframework" scheme="https://rainmakerho.github.io/tags/Botframework/"/>
    
      <category term="Web Application" scheme="https://rainmakerho.github.io/tags/Web-Application/"/>
    
      <category term="DirectLine" scheme="https://rainmakerho.github.io/tags/DirectLine/"/>
    
  </entry>
  
  <entry>
    <title>Replace JSON 字串中的屬性值 (Replace JSON Value String)</title>
    <link href="https://rainmakerho.github.io/2018/04/17/2018015/"/>
    <id>https://rainmakerho.github.io/2018/04/17/2018015/</id>
    <published>2018-04-17T13:12:50.000Z</published>
    <updated>2018-04-17T13:30:41.556Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>  同事需要將一個 JSON 字串，裡面屬性值需要透過 Replace 的方式，來置換新的內容。但那些內容之中包含一些 JSON 的保留字，例如 / // 等字串。所以字串 Replace 之後，透過 JObject.Parse 去處理就報錯了。<br>  <figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> tmpJsonStringBefore = <span class="string">@"&#123;s:""@s""&#125;"</span>;</div><div class="line"><span class="keyword">var</span> o = JObject.Parse(tmpJsonStringBefore);</div><div class="line"><span class="keyword">var</span> s = <span class="string">"A\" string !@#$%^&amp;*()&#123;&#125;:\"?/?/|\"':&gt;;&gt;&lt;&#123;\"d\":\"v\" value"</span>;</div><div class="line"><span class="keyword">var</span> tmpJsonAfter = tmpJsonStringBefore.Replace(<span class="string">"@s"</span>, s);</div><div class="line"><span class="keyword">var</span> tmpJson = JObject.Parse(tmpJsonAfter);</div><div class="line">Console.WriteLine(tmpJson.ToString());</div></pre></td></tr></table></figure></p><p>  以上的 Code 一執行就會出「<em>Newtonsoft.Json.JsonReaderException: ‘After parsing a value an unexpected character was encountered: s. Path ‘s’, line 1, position 7.’</em>」</p><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>  這時我們需要針對內容來做 Encode ，可以透過 HttpUtility.JavaScriptStringEncode (加入 System.Web 參考)，如下，<br>  <figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> tmpJsonStringBefore = <span class="string">@"&#123;s:""@s""&#125;"</span>;</div><div class="line"><span class="keyword">var</span> o = JObject.Parse(tmpJsonStringBefore);</div><div class="line"><span class="keyword">var</span> s = <span class="string">"A\" string !@#$%^&amp;*()&#123;&#125;:\"?/?/|\"':&gt;;&gt;&lt;&#123;\"d\":\"v\" value"</span>;</div><div class="line"><span class="keyword">var</span> encodeS = HttpUtility.JavaScriptStringEncode(s);</div><div class="line"><span class="keyword">var</span> tmpJsonAfter = tmpJsonStringBefore.Replace(<span class="string">"@s"</span>, encodeS);</div><div class="line"><span class="keyword">var</span> tmpJson = JObject.Parse(tmpJsonAfter);</div><div class="line">Console.WriteLine(tmpJson.ToString());</div></pre></td></tr></table></figure></p><p>  執行結果如下圖，<br>  <img src="/2018/04/17/2018015/2018015001.png" alt="HttpUtility.JavaScriptStringEncode" title="HttpUtility.JavaScriptStringEncode"> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;  同事需要將一個 JSON 字串，裡面屬性值需要透過 Replace 的方式，來置換新的內容。但那些內容之中包含一些 JSON 的保留字，
      
    
    </summary>
    
    
      <category term="JSON" scheme="https://rainmakerho.github.io/tags/JSON/"/>
    
      <category term="Replace" scheme="https://rainmakerho.github.io/tags/Replace/"/>
    
      <category term="special character" scheme="https://rainmakerho.github.io/tags/special-character/"/>
    
      <category term="JavaScriptStringEncode" scheme="https://rainmakerho.github.io/tags/JavaScriptStringEncode/"/>
    
  </entry>
  
  <entry>
    <title>OWASP ZAP 憑證安裝的方式(OWASP ZAP Certificate)</title>
    <link href="https://rainmakerho.github.io/2018/04/10/2018014/"/>
    <id>https://rainmakerho.github.io/2018/04/10/2018014/</id>
    <published>2018-04-10T01:36:19.000Z</published>
    <updated>2018-04-10T03:10:22.368Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>  透過 ZAP 去錄 https 時，如果沒有安裝憑證時，在 Browser 就會出現「 “Your connection is not private”, “你的連線並不安全”」的警告訊息，如下圖所示。<br>  <img src="/2018/04/10/2018014/2018014001.png" alt="Chrome的警告" title="Chrome的警告"> </p>  <img src="/2018/04/10/2018014/2018014002.png" alt="Firefox的警告" title="Firefox的警告"> <h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>  為什麼會出現那個警告訊息呢? 因為 Browser 用的那個憑證已經不是原本連接的那個 host 的憑證，而變成了 OWASP Zed Attack Proxy Root CA 了哦! 而這個憑證並沒有被電腦 Trust 所以就會有那個警告訊息哦!<br>  那要怎麼辦呢? 就是把憑證裝進去電腦的信任區。<br>  以下我們就一步步來說明，</p><h4 id="1-儲存-ZAP-憑證"><a href="#1-儲存-ZAP-憑證" class="headerlink" title="1.儲存 ZAP 憑證"></a>1.儲存 ZAP 憑證</h4><p>  開啟 OWASP ZAP ，Tools -&gt; Options -&gt; Dynamic SSL Certificates -&gt; Save<br>  <img src="/2018/04/10/2018014/2018014003.png" alt="儲存 ZAP 憑證" title="儲存 ZAP 憑證"> </p><h4 id="2-匯入-ZAP-憑證"><a href="#2-匯入-ZAP-憑證" class="headerlink" title="2.匯入 ZAP 憑證"></a>2.匯入 ZAP 憑證</h4><p>  DbClick剛才儲存的憑證檔，按下「Install Certificate…」，並將憑證存到「Trusted Root Certification Authorities」之中，如下，<br>  <img src="/2018/04/10/2018014/2018014004.png" alt="Certificate Import Wizard" title="Certificate Import Wizard"> </p><p>  記得要將憑證存到「Trusted Root Certification Authorities」之中<br>  <img src="/2018/04/10/2018014/2018014005.png" alt="存到「Trusted Root Certification Authorities」" title="存到「Trusted Root Certification Authorities」"> </p><p>  最後按下 Finish 就可以了哦!<br>  <img src="/2018/04/10/2018014/2018014006.png" alt="Import 完成" title="Import 完成"> </p><h4 id="Firefox-匯入-ZAP-憑證"><a href="#Firefox-匯入-ZAP-憑證" class="headerlink" title="Firefox 匯入 ZAP 憑證"></a>Firefox 匯入 ZAP 憑證</h4><p>  因為 firefox 憑證是自已管理的，所以 firefox 也要匯入 ZAP 憑證 ，如果會用 firefox 來錄的話，可以省略這步哦!<br>  firefox 選項 -&gt; 隱私權與安全性 (或在網址列輸入 about:preferences#privacy) -&gt; 檢視憑證<br>  <img src="/2018/04/10/2018014/2018014007.png" alt="隱私權與安全性" title="隱私權與安全性"> </p><p>  匯入 ZAP 憑證<br>  <img src="/2018/04/10/2018014/2018014008.png" alt="匯入 ZAP 憑證" title="匯入 ZAP 憑證"> </p><p>  勾選「信任此憑證機構以識別網站」<br>  <img src="/2018/04/10/2018014/2018014009.png" alt="勾選「信任此憑證機構以識別網站」" title="勾選「信任此憑證機構以識別網站」"> </p><p>  註:透過上述的方式，我們就可以錄 https 的網站，而不會一直出現警告訊息。 如果不會再錄的話，就請記得將 ZAP 的憑證移除哦!</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;  透過 ZAP 去錄 https 時，如果沒有安裝憑證時，在 Browser 就會出現「 “Your connection is not 
      
    
    </summary>
    
    
      <category term="ZAP" scheme="https://rainmakerho.github.io/tags/ZAP/"/>
    
      <category term="Certificate" scheme="https://rainmakerho.github.io/tags/Certificate/"/>
    
      <category term="Chrome" scheme="https://rainmakerho.github.io/tags/Chrome/"/>
    
      <category term="Firefox" scheme="https://rainmakerho.github.io/tags/Firefox/"/>
    
      <category term="Foxproxy" scheme="https://rainmakerho.github.io/tags/Foxproxy/"/>
    
      <category term="ERR_CERT_AUTHORITY_INVALID" scheme="https://rainmakerho.github.io/tags/ERR-CERT-AUTHORITY-INVALID/"/>
    
      <category term="Your connection is not private" scheme="https://rainmakerho.github.io/tags/Your-connection-is-not-private/"/>
    
      <category term="你的連線並不安全" scheme="https://rainmakerho.github.io/tags/%E4%BD%A0%E7%9A%84%E9%80%A3%E7%B7%9A%E4%B8%A6%E4%B8%8D%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>DataGrid 在 ASP.NET 4 的分頁導致第一個欄位會變很寬</title>
    <link href="https://rainmakerho.github.io/2018/04/03/2018013/"/>
    <id>https://rainmakerho.github.io/2018/04/03/2018013/</id>
    <published>2018-04-03T08:44:16.000Z</published>
    <updated>2018-04-03T10:02:08.644Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>最近同事將原本是 ASP.NET 1.1 的程式升級到 .NET 4，但是在 DataGrid 的分頁 postback 後，它的 colspan 就不見了。<br>會讓原本第一行的欄寬變的跟 footer 的分頁一樣寬，如下圖，<br><img src="/2018/04/03/2018013/2018013001.png" alt="DataGrid Paging colspan 問題" title="DataGrid Paging colspan 問題"> </p><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>想說會不會有人跟我們有一樣的狀況，公司中有很多人都不可置信，ASP.NET 1.1 可以升到 .NET 4.0 。<br>不過，還真的找到了「<a href="https://jwcooney.com/2012/01/11/asp-net-gridview-paging-problem-paging-increases-the-first-column-width/" target="_blank" rel="external">ASP.NET GridView Paging Problem – Paging Increases the First Column Width</a>」這篇。<br>它是在 .NET 2.0 遇到的問題，原來只要在 PreRender 時，設定 Footer 的 colspan 就好了，所以程式如下，</p><pre><code class="vb"><span class="comment">'請在 PreRender 加這一段，解決 DataGrid Footer 分頁在 .NET 4.x 中 ColSpan 問題 ...  </span><span class="keyword">If</span> <span class="keyword">Me</span>.AllowPaging <span class="keyword">AndAlso</span> <span class="keyword">Me</span>.Controls.Count &gt; <span class="number">0</span> <span class="keyword">Then</span>    <span class="keyword">Dim</span> tbl <span class="keyword">As</span> Table = <span class="built_in">CType</span>(<span class="keyword">Me</span>.Controls(<span class="number">0</span>), Table)    <span class="keyword">Dim</span> pagerRow <span class="keyword">As</span> TableRow = tbl.Rows(tbl.Rows.Count - <span class="number">1</span>)    <span class="keyword">Dim</span> colSpanCount <span class="keyword">as</span> <span class="built_in">String</span> = tbl.Rows(<span class="number">1</span>).Cells.Count.ToString()    pagerRow.Cells(<span class="number">0</span>).Attributes.Add(<span class="string">"colspan"</span>, colSpanCount)<span class="keyword">End</span> <span class="keyword">If</span></code></pre><p>希望對想要使用 DataGrid 在 asp.net 4.0 上使用的人有所幫助。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;最近同事將原本是 ASP.NET 1.1 的程式升級到 .NET 4，但是在 DataGrid 的分頁 postback 後，它的 cols
      
    
    </summary>
    
    
      <category term="DataGrid" scheme="https://rainmakerho.github.io/tags/DataGrid/"/>
    
      <category term=".net 4" scheme="https://rainmakerho.github.io/tags/net-4/"/>
    
      <category term="Paging" scheme="https://rainmakerho.github.io/tags/Paging/"/>
    
      <category term="colspan" scheme="https://rainmakerho.github.io/tags/colspan/"/>
    
      <category term="first column" scheme="https://rainmakerho.github.io/tags/first-column/"/>
    
  </entry>
  
  <entry>
    <title>SmtpConnection.GetConnection NullReferenceException</title>
    <link href="https://rainmakerho.github.io/2018/03/14/2018012/"/>
    <id>https://rainmakerho.github.io/2018/03/14/2018012/</id>
    <published>2018-03-14T02:07:16.000Z</published>
    <updated>2018-03-14T03:05:46.287Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>最近同事問一個透過 SmtpClient 寄信的問題，因為客戶移機，所以將原本在 Windows 2008 x64 上的程式移到，Windows 2016 上去。<br>我們的程式是 .NET 3.5 ，所以在移機上並不會有什麼問題。<br>測試上都 OK，就只有一支執行檔在寄發 Mail 時，會發生 NullReferenceException: Object reference not set to an instance of an object. ，如下，</p><blockquote><p>System.Net.Mail.SmtpConnection.GetConnection  &lt;System.NullReferenceException&gt; 並未將物件參考設定為物件的執行個體<br>  at System.Net.Mail.SmtpClient.Send  &lt;System.Net.Mail.SmtpException&gt; 傳送郵件失敗。<br>  於 System.Net.Mail.SmtpClient.Send(MailMessage message) </p></blockquote><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>於是寫了測試程式來測試，卻是 OK 的，如下<br><figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> smpt = <span class="keyword">new</span> System.Net.Mail.SmtpClient();</div><div class="line">smpt.Host = <span class="string">"mail.rm.com.tw"</span>;</div><div class="line"><span class="keyword">var</span> credentials = <span class="keyword">new</span> NetworkCredential(<span class="string">"rainmaker_ho"</span>, <span class="string">""</span>);</div><div class="line"><span class="keyword">var</span> msg = <span class="keyword">new</span> System.Net.Mail.MailMessage();</div><div class="line">smpt.Credentials = credentials;</div><div class="line">msg.From = <span class="keyword">new</span> MailAddress(<span class="string">"rainmaker_ho@mail.rm.com.tw"</span>);</div><div class="line">msg.Subject = <span class="string">"subject"</span>;</div><div class="line">msg.Body = <span class="string">"body"</span>;</div><div class="line">msg.To.Add(<span class="keyword">new</span> MailAddress(<span class="string">"rainmaker_ho@mail.rm.com.tw"</span>));</div><div class="line"><span class="keyword">try</span></div><div class="line">&#123;</div><div class="line">smpt.Send(msg);</div><div class="line">&#125;</div><div class="line"><span class="keyword">catch</span> (Exception e)</div><div class="line">&#123;</div><div class="line">Console.WriteLine(e.ToString());</div><div class="line"><span class="keyword">throw</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>大家可以發現，NetworkCredential 只 Assign 使用者代號，使用者密碼是給空字串。<br>有些 mail server 是允許發給內部使用者時，不需要驗證的(有點像是撥打內網不用付費)。<br>模擬執行檔去呼叫也沒問題。<br>而錯誤訊息(SmtpConnection.GetConnection NullReferenceException)也叫人不知如何是好 …<br>正當絕望之際，忽然想到，我的測試程式預設是使用 .NET 4.6 ，而我的執行檔是 .NET 3.5 的。<br>於是將測試程式切到 .NET 3.5 一試，一樣的錯誤出現了 …<br><img src="/2018/03/14/2018012/2018012001.png" alt="SmtpConnection.GetConnection NullReferenceException" title="SmtpConnection.GetConnection NullReferenceException"><br>於是再將 NetworkCredential 的使用者代號也給空字串，再測試就沒有問題了。<br>以這個問題的解法有2個，</p><ol><li>如果不需要驗證的話，NetworkCredential 的使用者及密碼都給空字串。</li><li>設定執行檔的 config ，讓它走 .NET 4.0 因為這樣子的狀況，在 .NET 4.0 是沒問題的。<blockquote><p>&lt;startup&gt;&lt;supportedRuntime version=”v4.0” sku=”.NETFramework,Version=v4.0”/&gt;&lt;/startup&gt;</p></blockquote></li></ol><p>嗯… 不過，為什麼舊的 Windows 2008 Server 卻不會有這種問題呢? 筆者在另一台 Windows 2008 R2 Server 上試也是 GG 。<br>以下是 Windows 2008 Server 上關於 .net 3.5 的更新，<br><img src="/2018/03/14/2018012/2018012002.png" alt="Windows 2008 Server .net 3.5 的更新" title="Windows 2008 Server .net 3.5 的更新"> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;最近同事問一個透過 SmtpClient 寄信的問題，因為客戶移機，所以將原本在 Windows 2008 x64 上的程式移到，Windo
      
    
    </summary>
    
    
      <category term="SmtpClient" scheme="https://rainmakerho.github.io/tags/SmtpClient/"/>
    
      <category term="SmtpConnection.GetConnection" scheme="https://rainmakerho.github.io/tags/SmtpConnection-GetConnection/"/>
    
      <category term="NullReferenceException" scheme="https://rainmakerho.github.io/tags/NullReferenceException/"/>
    
      <category term=".net" scheme="https://rainmakerho.github.io/tags/net/"/>
    
      <category term="NetworkCredential" scheme="https://rainmakerho.github.io/tags/NetworkCredential/"/>
    
      <category term="password" scheme="https://rainmakerho.github.io/tags/password/"/>
    
      <category term="empty" scheme="https://rainmakerho.github.io/tags/empty/"/>
    
  </entry>
  
  <entry>
    <title>System.NullReferenceException when Aspose.Pdf.License.SetLicense(String licenseName)</title>
    <link href="https://rainmakerho.github.io/2018/03/13/2018011/"/>
    <id>https://rainmakerho.github.io/2018/03/13/2018011/</id>
    <published>2018-03-13T06:54:05.000Z</published>
    <updated>2018-03-14T02:08:58.990Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>最近在 Web 使用 Aspose.Pdf 來產生文件時，有時候會忽然出現 <em>System.NullReferenceException</em> 的錯誤。<br>而錯誤的地方居然是在 License.SetLicense 的 Method，如下，<br>System.NullReferenceException: 並未將物件參考設定為物件的執行個體。<br>    於 .(Stream )<br>    於 .(String , Assembly )<br>    於 Aspose.Pdf.License.SetLicense(String licenseName)</p><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>直覺來看應該是 License 檔案壞了，所以請同事更新 License 檔，再執行就好了。<br>可是過沒多久，又發生一樣的問題。<br>我們操作 Aspose 元件的方式是，一開始先設定 License ，再建立要使用的元件，如下，<br><figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> lic = <span class="keyword">new</span> License();</div><div class="line">lic.SetLicense(<span class="string">"aspose.total.lic"</span>);</div><div class="line"><span class="keyword">var</span> pdfDoc = <span class="keyword">new</span> Document(<span class="string">@"c:\xx\node.pdf"</span>);</div></pre></td></tr></table></figure></p><p>在網路上似乎也有人談到這種問題。或許在 Web 環境中，又有多執行緒下所造成的。<br>所以在 Page_Load 中寫了以下的程式來測試，果然馬上出現 NullReferenceException 的錯誤，如下，<br><figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">Parallel.For(<span class="number">0</span>, <span class="number">10</span>, <span class="keyword">delegate</span> (<span class="keyword">int</span> i)</div><div class="line">&#123;</div><div class="line">    <span class="keyword">try</span></div><div class="line">    &#123;</div><div class="line">        <span class="keyword">var</span> lic = <span class="keyword">new</span> License();</div><div class="line">        lic.SetLicense(<span class="string">"aspose.total.lic"</span>);</div><div class="line">        <span class="keyword">var</span> pdfDoc = <span class="keyword">new</span> Document(<span class="string">@"c:\xx\node.pdf"</span>);</div><div class="line">        Debug.WriteLine(<span class="string">$"<span class="subst">&#123;i&#125;</span>:<span class="subst">&#123;pdfDoc.IsLinearized&#125;</span>"</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">catch</span> (Exception ex)</div><div class="line">    &#123;</div><div class="line">        ebug.WriteLine(<span class="string">$"<span class="subst">&#123;i&#125;</span>:<span class="subst">&#123;ex&#125;</span>"</span>);</div><div class="line">    &#125;</div><div class="line">&#125;);</div><div class="line"><span class="keyword">var</span> pdfDocx = <span class="keyword">new</span> Document(<span class="string">@"c:\xx\node.pdf"</span>);</div><div class="line">Response.Write(pdfDocx.IsLinearized);</div></pre></td></tr></table></figure></p><p>這個問題原廠已記錄在未來應該會修正這個問題。<br>而目前的話，如果設定 License 的話，就在 global.asax 中的 Application_Start Event 設定即可。<br>在其他地方就不需要再設定 License ，以免出現 NullReferenceException 。<br><figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">Application_Start</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>)</span></div><div class="line"><span class="function"></span>&#123;</div><div class="line"><span class="keyword">var</span> licPdf = <span class="keyword">new</span> License();</div><div class="line">licPdf.SetLicense(<span class="string">"aspose.total.lic"</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;最近在 Web 使用 Aspose.Pdf 來產生文件時，有時候會忽然出現 &lt;em&gt;System.NullReferenceExceptio
      
    
    </summary>
    
    
      <category term="NullReferenceException" scheme="https://rainmakerho.github.io/tags/NullReferenceException/"/>
    
      <category term="Aspose" scheme="https://rainmakerho.github.io/tags/Aspose/"/>
    
      <category term="SetLicense" scheme="https://rainmakerho.github.io/tags/SetLicense/"/>
    
  </entry>
  
  <entry>
    <title>透過 WinDbg 來找出 ASP.NET CPU 100% ASP.NET 程式的問題</title>
    <link href="https://rainmakerho.github.io/2018/03/05/2018010/"/>
    <id>https://rainmakerho.github.io/2018/03/05/2018010/</id>
    <published>2018-03-05T06:19:38.000Z</published>
    <updated>2018-03-31T01:09:32.803Z</updated>
    
    <content type="html"><![CDATA[<h3 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h3><p>我們有一個 ASP.NET 的系統部署到 IIS 上(Windows 2012, .NET 4.x)，有時候會導致 w3wp.exe 吃掉所有的 CPU 資源，一直要等到應用程式回收後，程式再重新啟動後就正常了。這種狀況不定期會發生。 </p><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>我們可以使用 WinDbg 來找出導致 IIS CPU 100% 的原因，方法如下， </p><ul><li><p>透過「工作管理員」來「建立傾印檔案」<br>當發生 IIS 導致 CPU 100% 時，開啟「工作管理員」，按右鍵選取「建立傾印檔案」。要依 Web 應用程式的平台(x86/x64)來開啟「工作管理員」(x86的工作管理員在 C:\Windows\SysWOW64\taskmgr.exe )。</p></li><li><p>安裝 WinDbg<br>請參考 <a href="https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/" target="_blank" rel="external">Debugging Tools for Windows (WinDbg, KD, CDB, NTSD)</a> 來安裝對應的版本。</p></li><li><p>設定 Symbol Path<br>先建立一個 C:\RTX64_SYMBOLS 目錄(依您自行定義)，然後開啟 Command 設定 _NT_SYMBOL_PATH 的環境變數，如下，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">set _NT_SYMBOL_PATH=srv*C:\RTX64_SYMBOLS*https://msdl.microsoft.com/download/symbols</div></pre></td></tr></table></figure><img src="/2018/03/05/2018010/201801001.png" alt="set _NT_SYMBOL_PATH" title="set _NT_SYMBOL_PATH"> <p>所以在 command 中，輸入 set 後，就可以看到 _NT_SYMBOL_PATH 的設定值哦，</p><img src="/2018/03/05/2018010/201801002.png" alt="_NT_SYMBOL_PATH" title="_NT_SYMBOL_PATH"> <p>當然，如果常常會用到的話，就直接設定到 環境變數之前，下次 debug 時，就不用再設定一次了哦! 詳細請參考<a href="https://www.hanselman.com/blog/SetUpYourSystemToUseMicrosoftsPublicSymbolServer.aspx" target="_blank" rel="external">Set up your system to use Microsoft’s public Symbol Server</a></p></li><li><p>在 WinDbg 中找問題</p><ul><li><p>載入 sos.dll</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">.load C:\Windows\Microsoft.NET\Framework64\v4.0.30319\sos.dll</div></pre></td></tr></table></figure><p>WinDbg 有 x86/x64 的版本，我是使用 x64 的版本，所以 sos.dll 的路徑是 C:\Windows\Microsoft.NET\Framework64\v4.0.30319\sos.dll，您輸入如果發生錯誤的話，請使用 C:\Windows\Microsoft.NET\Framework\v4.0.30319\sos.dll 。</p></li><li><p>設定 Symbol 檔目錄</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">!sym noisy</div><div class="line">.cordll -ve -u  -l</div></pre></td></tr></table></figure></li><li><p>透過 !runaway 顯示Threads所佔的時間<br>輸入 !runaway 後，會顯示各 Thread 所花費的時間，花最多的會在最上面，如下圖，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">!runaway</div></pre></td></tr></table></figure><img src="/2018/03/05/2018010/201801003.png" alt="!runaway" title="!runaway"></li><li><p>透過 ~[thread]s 切換到該 thread 的位置<br>由上圖所示，Thread 40 佔最多時間，所以我們切到它的位罝去，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">~40s</div></pre></td></tr></table></figure><img src="/2018/03/05/2018010/201801004.png" alt="~40s" title="~40s"></li><li><p>透過 !clrstack 來查看呼叫堆疉</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">!clrstack</div></pre></td></tr></table></figure><img src="/2018/03/05/2018010/201801005.png" alt="!clrstack" title="!clrstack"><p>從上圖可以發現，應該是有關 Dictionary 操作的問題，而它是由我們系統中 TemplateCfg.initial() 這個 Method 所引起的。</p></li></ul></li><li><p>檢視並調整程式碼<br>開啟 TemplateCfg 程式碼，在 initial 這個 Method 之中會建立 Dictionary 物件，Clear 它，並 Insert 資料，但這些 Dictionary 的變數卻又設定成 static 。</p><img src="/2018/03/05/2018010/201801006.png" alt="TemplateCfg.initial()" title="TemplateCfg.initial()"><p>即然這些 Dictionary 是 static 的，而且它們值又都是相同的，就沒有必要每次 request 時，就重新建立並 insert 這些資料。<br>所以將 initial 裡面的 Code 搬到  static constructor 。<br>調整完程式碼後，從去年觀察到目前，已經沒有再發生 CPU 100% 的狀況。</p></li></ul><h3 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h3><p><a href="http://improve.dk/debugging-in-production-part-1-analyzing-100-cpu-usage-using-windbg/" target="_blank" rel="external">Debugging in Production Part 1 - Analyzing 100% CPU Usage Using Windbg</a><br><a href="http://blog.darkthread.net/post-2017-02-20-windbg-to-find-aspnet-cpu-high.aspx" target="_blank" rel="external">WinDBG 應用實例：找出 ASP.NET CPU 100% 原因</a><br><a href="https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/" target="_blank" rel="external">Debugging Tools for Windows (WinDbg, KD, CDB, NTSD)</a><br><a href="https://www.hanselman.com/blog/SetUpYourSystemToUseMicrosoftsPublicSymbolServer.aspx" target="_blank" rel="external">Set up your system to use Microsoft’s public Symbol Server</a><br><a href="https://channel9.msdn.com/Series/-NET-Debugging-Stater-Kit-for-the-Production-Environment/High-CPU-Hangs-05" target="_blank" rel="external">High CPU Hangs - 05</a><br><a href="http://www.infoq.com/cn/articles/architecture-practice-13-windbg" target="_blank" rel="external">中小型研发团队架构实践：生产环境诊断利器WinDbg帮你快速分析异常情况Dump文件</a><br><a href="https://blogs.msdn.microsoft.com/kaevans/2011/04/11/intro-to-windbg-for-net-developers/" target="_blank" rel="external">Intro to WinDBG for .NET Developers</a><br><a href="https://blogs.msdn.microsoft.com/tess/2008/02/27/net-debugging-demos-lab-4-high-cpu-hang-review/" target="_blank" rel="external">.NET Debugging Demos Lab 4: High CPU Hang – Review</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h3&gt;&lt;p&gt;我們有一個 ASP.NET 的系統部署到 IIS 上(Windows 2012, .NET 4.x)，有時候會導致 w3wp.exe 吃掉所
      
    
    </summary>
    
    
      <category term="IIS" scheme="https://rainmakerho.github.io/tags/IIS/"/>
    
      <category term="CPU" scheme="https://rainmakerho.github.io/tags/CPU/"/>
    
      <category term="100%" scheme="https://rainmakerho.github.io/tags/100/"/>
    
      <category term="WinDbg" scheme="https://rainmakerho.github.io/tags/WinDbg/"/>
    
      <category term="ASP.NE" scheme="https://rainmakerho.github.io/tags/ASP-NE/"/>
    
      <category term="w3wp.exe" scheme="https://rainmakerho.github.io/tags/w3wp-exe/"/>
    
  </entry>
  
  <entry>
    <title>無法載入檔案或組件 &#39;log4net, Version=1.2.10.0, Culture=neutral, PublicKeyToken=692fbea5521e1304&#39; 或其相依性的其中之一。</title>
    <link href="https://rainmakerho.github.io/2018/02/14/2018009/"/>
    <id>https://rainmakerho.github.io/2018/02/14/2018009/</id>
    <published>2018-02-14T14:12:46.000Z</published>
    <updated>2018-03-14T03:08:54.691Z</updated>
    
    <content type="html"><![CDATA[<p>最近同事詢問他們使用 Crytal Report Viewer 時，會發生 log4net 版本衝突的問題。如下圖所示， </p><img src="/2018/02/14/2018009/2018009001.png" alt="CrystalReportViewer Runtime Error" title="CrystalReportViewer Runtime Error"> <p>如果是不同版本衝突的話，可以參考 <a href="https://dotblogs.com.tw/rainmaker/2015/11/25/153805" target="_blank" rel="external">如何讓不同 PublicKeyToken 的 DLL assemblyBinding 到可以用版本?</a> 透過 assemblyBinding 的方式就可以解決。 但剛好我們的 AP 自已用的 log4net 版本也是 1.2.10.0，所以是 <strong>相同版本，不同的 PublickToken</strong> 的衝突。 詳細訊息如下， </p><p><em>沒有辦法解決 “log4net, Version=1.2.10.0, Culture=neutral, PublicKeyToken=1b44e1d426115821” 和 “log4net, Version=1.2.10.0, Culture=neutral, PublicKeyToken=692fbea5521e1304” 之間的衝突。<br>任意選擇 “log4net, Version=1.2.10.0, Culture=neutral, PublicKeyToken=1b44e1d426115821”。</em>  </p><p>有查到 <a href="https://stackoverflow.com/questions/11673383/error-could-not-load-log4net-assembly" target="_blank" rel="external">Error: Could not load log4net assembly</a> 似乎是因為不同的平台(x86/x64) 所用的 log4net 會不同。<br>x86(32位元)用的 PublicToken 是 692fbea5521e1304，x64(64位元)或是 AnyCPU 用的 PublicToken 則是 1b44e1d426115821。<br>而我們 ap 平台是 x64 的，但 Crystal Report Viewer 卻使用了 x86(32位元) 的 log4net 。</p><p>… 我想應該是那裡設定出了錯吧 … </p><p>同事說只有在某台機器上才會出現那個錯誤，如果是透過 Browser 直接使用系統就正常，透過 VS.NET 啟動程式去 Debug 時，就會出現那個錯誤。<br>我想是因為如果透過 Browser 去使用系統的話，是連到 IIS ，而 IIS 設定的是 x64(64位元);如果透過 VS.NET 則是連到 IIS Express，預設它是使用 x86(32位元)。<br>於是筆者將 IIS 上的應用程式集區設定成 啟用 32 位元，再執行程式，則一樣會出現 log4net 的衝突狀況(ya. 重現問題了 …)。<br>所以就請同事在 VS.NET 中設定讓 IIS Express 使用 64 位元就沒問題了哦!<br>工具 -&gt; 選項 -&gt; (search textbox 中輸入 iis) , 並勾選 將 64 位元版本的 IIS Express 用於網站和專案(U) 選項勾起來就可以了哦! 如下，<br><img src="/2018/02/14/2018009/2018009002.png" alt="將 64 位元版本的 IIS Express 用於網站和專案(U)" title="將 64 位元版本的 IIS Express 用於網站和專案(U)"> </p><p>如果您是系統出了錯，請 Check 應用程式集區是否設定成了 「啟用32位元應用程式」哦!</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近同事詢問他們使用 Crytal Report Viewer 時，會發生 log4net 版本衝突的問題。如下圖所示， &lt;/p&gt;
&lt;img src=&quot;/2018/02/14/2018009/2018009001.png&quot; alt=&quot;CrystalReportViewer 
      
    
    </summary>
    
    
      <category term="log4net" scheme="https://rainmakerho.github.io/tags/log4net/"/>
    
      <category term="1.2.10.0" scheme="https://rainmakerho.github.io/tags/1-2-10-0/"/>
    
      <category term="692fbea5521e1304" scheme="https://rainmakerho.github.io/tags/692fbea5521e1304/"/>
    
      <category term="1b44e1d426115821" scheme="https://rainmakerho.github.io/tags/1b44e1d426115821/"/>
    
  </entry>
  
  <entry>
    <title>Bot Framework Custom Error Messages and Exception Handling</title>
    <link href="https://rainmakerho.github.io/2018/02/13/2018008/"/>
    <id>https://rainmakerho.github.io/2018/02/13/2018008/</id>
    <published>2018-02-13T03:06:26.000Z</published>
    <updated>2018-02-13T03:50:53.010Z</updated>
    
    <content type="html"><![CDATA[<p>使用 Bot Framework 開發 Bot 時，當發生 Exception 時，會出現 <strong>“Sorry, my bot code is having an issue.”</strong> ，那如果我們要自行處理錯誤呢? 可以參考<a href="https://desflanagan.wordpress.com/2017/09/01/bot-framework-custom-error-messages-and-exception-handling/" target="_blank" rel="external">Bot Framework Custom Error Messages and Exception Handling, Autofac</a>，一個是建立一個 ExceptionHandleDialog 去包，另一個是俢改 PostUnhandledExceptionToUser 這個 Class ，然後再透過 Autofac 來置換成我們的 Class。 </p><p>所以作者建立一個「PostUnhandledExceptionToUserOverrideTask」如下，<br><figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PostUnhandledExceptionToUserOverrideTask</span> : <span class="title">IPostToBot</span></div><div class="line">&#123;</div><div class="line"><span class="keyword">private</span> <span class="keyword">readonly</span> ResourceManager resources;</div><div class="line"><span class="keyword">private</span> <span class="keyword">readonly</span> IPostToBot inner;</div><div class="line"><span class="keyword">private</span> <span class="keyword">readonly</span> IBotToUser botToUser;</div><div class="line"><span class="keyword">private</span> <span class="keyword">readonly</span> TraceListener trace;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="title">PostUnhandledExceptionToUserOverrideTask</span>(<span class="params">IPostToBot inner, IBotToUser botToUser, ResourceManager resources, TraceListener trace</span>)</span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">SetField.NotNull(<span class="keyword">out</span> <span class="keyword">this</span>.inner, <span class="keyword">nameof</span>(inner), inner);</div><div class="line">SetField.NotNull(<span class="keyword">out</span> <span class="keyword">this</span>.botToUser, <span class="keyword">nameof</span>(botToUser), botToUser);</div><div class="line">SetField.NotNull(<span class="keyword">out</span> <span class="keyword">this</span>.resources, <span class="keyword">nameof</span>(resources), resources);</div><div class="line">SetField.NotNull(<span class="keyword">out</span> <span class="keyword">this</span>.trace, <span class="keyword">nameof</span>(trace), trace);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task <span class="title">PostAsync</span>(<span class="params">IActivity activity, CancellationToken token</span>)</span></div><div class="line"><span class="function"></span>&#123;</div><div class="line"><span class="keyword">try</span></div><div class="line">&#123;</div><div class="line"><span class="keyword">await</span> inner.PostAsync(activity, token);</div><div class="line">&#125;</div><div class="line"><span class="keyword">catch</span> (Exception)</div><div class="line">&#123;</div><div class="line"><span class="keyword">try</span></div><div class="line">&#123;</div><div class="line"><span class="keyword">await</span> botToUser.PostAsync(<span class="string">"An Error Has Occurred....."</span>, cancellationToken: token);</div><div class="line">&#125;</div><div class="line"><span class="keyword">catch</span> (Exception inner)</div><div class="line">&#123;</div><div class="line">trace.WriteLine(inner);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">throw</span>;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>而作者是調整 DialogModule 中，將 PostUnhandledExceptionToUser 改成 PostUnhandledExceptionToUserOverrideTask，所以在 Global.asax.cs 中重新呼叫 RegisterAdapterChain 去 Replace，如下<br><figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">builder</div><div class="line">.RegisterKeyedType&lt;PostUnhandledExceptionToUserOverrideTask, IPostToBot&gt;()</div><div class="line">.InstancePerLifetimeScope();</div><div class="line"></div><div class="line">builder</div><div class="line">.RegisterAdapterChain&lt;IPostToBot&gt;</div><div class="line">(</div><div class="line"><span class="keyword">typeof</span>(EventLoopDialogTask),</div><div class="line"><span class="keyword">typeof</span>(SetAmbientThreadCulture),</div><div class="line"><span class="keyword">typeof</span>(QueueDrainingDialogTask),</div><div class="line"><span class="keyword">typeof</span>(PersistentDialogTask),</div><div class="line"><span class="keyword">typeof</span>(ExceptionTranslationDialogTask),</div><div class="line"><span class="keyword">typeof</span>(SerializeByConversation),</div><div class="line"><span class="keyword">typeof</span>(PostUnhandledExceptionToUserOverrideTask),</div><div class="line"><span class="keyword">typeof</span>(LogPostToBot)</div><div class="line">)</div><div class="line">.InstancePerLifetimeScope();</div></pre></td></tr></table></figure></p><p>另一個方式則是直接將 PostUnhandledExceptionToUser 置換成 PostUnhandledExceptionToUserOverrideTask，如下，<br><figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">builder</div><div class="line">.RegisterKeyedType&lt;PostUnhandledExceptionToUserOverrideTask, IPostToBot&gt;()</div><div class="line">.InstancePerLifetimeScope();</div><div class="line"></div><div class="line"><span class="comment">//在 Autofac 中 Key 為 typeof(PostUnhandledExceptionToUser) 的 Service 從 PostUnhandledExceptionToUser 改成我們寫的 PostUnhandledExceptionToUserOverrideTask</span></div><div class="line">builder</div><div class="line">.RegisterType&lt;PostUnhandledExceptionToUserOverrideTask&gt;()</div><div class="line">.Keyed&lt;IPostToBot&gt;(<span class="keyword">typeof</span>(PostUnhandledExceptionToUser))</div><div class="line">.InstancePerLifetimeScope();</div></pre></td></tr></table></figure></p><p>所以可以看到原本的 PostUnhandledExceptionToUser 已經被我們改成了 PostUnhandledExceptionToUserOverrideTask了，如下圖，<br><img src="/2018/02/13/2018008/2018008001.png" alt="LogPostToBot RegisterAdapterChain" title="LogPostToBot RegisterAdapterChain"> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;使用 Bot Framework 開發 Bot 時，當發生 Exception 時，會出現 &lt;strong&gt;“Sorry, my bot code is having an issue.”&lt;/strong&gt; ，那如果我們要自行處理錯誤呢? 可以參考&lt;a href=&quot;http
      
    
    </summary>
    
    
      <category term="botframework" scheme="https://rainmakerho.github.io/tags/botframework/"/>
    
      <category term="custom error" scheme="https://rainmakerho.github.io/tags/custom-error/"/>
    
      <category term="exception handling" scheme="https://rainmakerho.github.io/tags/exception-handling/"/>
    
      <category term="PostUnhandledExceptionToUser" scheme="https://rainmakerho.github.io/tags/PostUnhandledExceptionToUser/"/>
    
      <category term="IPostToBot" scheme="https://rainmakerho.github.io/tags/IPostToBot/"/>
    
      <category term="DialogModule" scheme="https://rainmakerho.github.io/tags/DialogModule/"/>
    
  </entry>
  
  <entry>
    <title>The bot&#39;s MSA appId or password is incorrect.</title>
    <link href="https://rainmakerho.github.io/2018/02/01/2018007/"/>
    <id>https://rainmakerho.github.io/2018/02/01/2018007/</id>
    <published>2018-02-01T03:52:05.000Z</published>
    <updated>2018-02-01T05:48:31.390Z</updated>
    
    <content type="html"><![CDATA[<p>今天使用 botframework-emulator 在 local 測試 bot 時， botframework-emulator 居然出現 The bot’s MSA appId or password is incorrect. 的錯誤，如下圖，<br><img src="/2018/02/01/2018007/2018007001.png" alt="MSA_appId/password is incorrect" title="MSA_appId/password is incorrect"><br>我輸入的 App Id 跟 Password 明明就是從 web.config 中 Copy 出來的呀~ 之前都 Run 的好好的，現在居然噴錯。  </p><p>於是使用 Fiddler 來錄一下看看是什麼狀況，如下圖，<br><img src="/2018/02/01/2018007/2018007002.png" alt="Fiddler" title="Fiddler"> </p><p>從上圖可以發現， botframework-emulator 會依 bot 的 MSA appId 及 password 到 <a href="https://login.microsoftonline.com/botframework.com/oauth2/v2.0/token" target="_blank" rel="external">https://login.microsoftonline.com/botframework.com/oauth2/v2.0/token</a> 去取回 token ，然後再放在 Request 的 Header 之中，做為 Authorization token。但卻 bot 卻判斷它是無效的，所以就回 401 。 </p><p>查看 botframework-emulator 在 GitHub 上的異動記錄 <a href="https://github.com/Microsoft/BotFramework-Emulator/commit/714b6d4597653c13cb30941416e512e4ecf96972#diff-43482499e76e08e445f4ba0e0b580401" target="_blank" rel="external">Support Bot Framework authentication v3.1 (#256)</a> 有將取 token 的 endpoint 從 common/oauth2/v2.0/token 改到了 botframework.com/oauth2/v2.0/token 。<br><img src="/2018/02/01/2018007/2018007003.png" alt="src/server/settings.ts" title="src/server/settings.ts"> </p><p>似乎是 token 的問題，而目前我們 bot 使用的 BotBuilder 是 3.8 版，而它的 System.IdentityModel.Tokens.Jwt 使用的是 v4.0403061554 ，如下，<br><img src="/2018/02/01/2018007/2018007004.png" alt="System.IdentityModel.Tokens.Jwt" title="System.IdentityModel.Tokens.Jwt"> </p><p>所以筆者試著將 System.IdentityModel.Tokens.Jwt 更新到 v5.1.4 ，重建置專案，再測試一次就沒問題了哦! 或者是您連同 BotBuilder 升級到最新的版本也是可以的哦! </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今天使用 botframework-emulator 在 local 測試 bot 時， botframework-emulator 居然出現 The bot’s MSA appId or password is incorrect. 的錯誤，如下圖，&lt;br&gt;&lt;img sr
      
    
    </summary>
    
    
      <category term="botframework" scheme="https://rainmakerho.github.io/tags/botframework/"/>
    
      <category term="MSA appId or password is incorrect" scheme="https://rainmakerho.github.io/tags/MSA-appId-or-password-is-incorrect/"/>
    
      <category term="c#" scheme="https://rainmakerho.github.io/tags/c/"/>
    
      <category term="botframework-emulator" scheme="https://rainmakerho.github.io/tags/botframework-emulator/"/>
    
  </entry>
  
  <entry>
    <title>使用 Botframework 的 Bot 如何 Debug 到 BotBuilder Source ?</title>
    <link href="https://rainmakerho.github.io/2018/02/01/2018006/"/>
    <id>https://rainmakerho.github.io/2018/02/01/2018006/</id>
    <published>2018-02-01T01:47:18.000Z</published>
    <updated>2018-02-13T04:00:06.377Z</updated>
    
    <content type="html"><![CDATA[<p>我們透過 VS.NET 建立出 Bot 後，預設 Nuget 中安裝 BotBuilder 相關的套件，如果我們從 GitHub 將 <a href="https://github.com/Microsoft/BotBuilder" target="_blank" rel="external">Microsoft/BotBuilder</a> 到方案之中，我們要如何 Debug 進到 BotBuilder 的 Source Code 之中呢? </p><ul><li>移除 Nuget 中的 Microsoft.Bot.Builder 套件 </li><li><p>在方案中加入以下的專案(在 BotBuilder\CSharp\Library 目錄中)</p><ul><li>Microsoft.Bot.Builder (Microsoft.Bot.Builder.csproj)</li><li>Microsoft.Bot.Builder.Autofac (Microsoft.Bot.Builder.Autofac.csproj)</li><li>Microsoft.Bot.Connector.NetFramework (Microsoft.Bot.Connector.NetFramework.csproj)</li><li>Microsoft.Bot.Connector.Shared (Microsoft.Bot.Connector.Shared.shproj) </li><li><img src="/2018/02/01/2018006/2018006001.png" alt="加入Microsoft.Bot.Builder相關專案" title="加入Microsoft.Bot.Builder相關專案"></li></ul></li><li><p>先建置 Microsoft.Bot.Connector.NetFramework 專案，沒問題後再建置 Microsoft.Bot.Builder 及 Microsoft.Bot.Builder.Autofac </p></li><li>我們的 Bot 專案加入 Microsoft.Bot.Builder、Microsoft.Bot.Builder 及 Microsoft.Bot.Builder.Autofac 參考，如下，<img src="/2018/02/01/2018006/2018006003.png" alt="加入參考" title="加入參考"> </li></ul><p>如果重建成功就可以順利的 Debug 進去了哦! 如下圖所示，<br><img src="/2018/02/01/2018006/2018006002.png" alt="Debug到DialogModule" title="Debug到DialogModule"> </p><ul><li>註: 因為新版 Microsoft.Bot.Builder 使用的 Newtonsoft.Json 版本為 9，所以 Bot 專案也要更新到 9 以上哦! </li></ul><h4 id="參考資訊"><a href="#參考資訊" class="headerlink" title="參考資訊"></a>參考資訊</h4><p><a href="https://stackoverflow.com/questions/43971422/how-to-debug-into-microsoft-bot-builder-c-sharp-project-source-code" target="_blank" rel="external">how to debug into Microsoft.Bot.Builder C# project source code?</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;我們透過 VS.NET 建立出 Bot 後，預設 Nuget 中安裝 BotBuilder 相關的套件，如果我們從 GitHub 將 &lt;a href=&quot;https://github.com/Microsoft/BotBuilder&quot; target=&quot;_blank&quot; rel=
      
    
    </summary>
    
    
      <category term="botframework" scheme="https://rainmakerho.github.io/tags/botframework/"/>
    
      <category term="C#" scheme="https://rainmakerho.github.io/tags/C/"/>
    
      <category term="BotBuilder" scheme="https://rainmakerho.github.io/tags/BotBuilder/"/>
    
      <category term="debug" scheme="https://rainmakerho.github.io/tags/debug/"/>
    
  </entry>
  
  <entry>
    <title>Call luis.ai predictions api 的 3 種方式</title>
    <link href="https://rainmakerho.github.io/2018/01/29/2018005/"/>
    <id>https://rainmakerho.github.io/2018/01/29/2018005/</id>
    <published>2018-01-29T06:19:50.000Z</published>
    <updated>2018-02-15T02:55:30.785Z</updated>
    
    <content type="html"><![CDATA[<h3 id="luis-ai-api-價格說明"><a href="#luis-ai-api-價格說明" class="headerlink" title="luis.ai api 價格說明"></a>luis.ai api 價格說明</h3><p>我們使用 luis.ai 的 api 後，很多人都於它的價格都不清楚，在這裡說明一下，</p><ol><li>LUIS API - 免費: 每月最多可以 Call 10,000 次</li><li>LUIS API - 基本: 每月最多可以 Call 10,000 次，超過後，每 Call 1,000 次約台幣 45.09 元<br>詳細請參考 <a href="https://azure.microsoft.com/zh-tw/pricing/details/cognitive-services/language-understanding-intelligent-services/" target="_blank" rel="external">認知服務定價 - Language Understanding (LUIS)</a></li></ol><h3 id="Call-luis-ai-predictions-api-的-3-種方式"><a href="#Call-luis-ai-predictions-api-的-3-種方式" class="headerlink" title="Call luis.ai predictions api 的 3 種方式"></a>Call luis.ai predictions api 的 3 種方式</h3><p>在 <a href="https://westus.dev.cognitive.microsoft.com/docs/services/5819c76f40a6350ce09de1ac/operations/5819c77140a63516d81aee78" target="_blank" rel="external">LUIS predictions GET api</a> 中有各語言的使用範例，以C#來看，使用非常方便，只要設定一些參數就可以取回 LUIS 解析的資料，本文將跟大家分享 Call 正式 api 的 GET/POST 方式，及 Call 測試 api 的方式，共 3 透方式。</p><ul><li><p>call 正式 api 使用 GET，如下， </p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">async</span> Task&lt;<span class="keyword">string</span>&gt; <span class="title">GetLuisResult</span>(<span class="params"><span class="keyword">string</span> reqString</span>)</span></div><div class="line"><span class="function"></span>&#123;</div><div class="line"><span class="comment">//最多是 500 個 ascii chars，中文我先取 230 個</span></div><div class="line"><span class="keyword">if</span> (reqString.Length &gt; <span class="number">230</span>)</div><div class="line">&#123;</div><div class="line">reqString = reqString.Substring(<span class="number">0</span>, <span class="number">230</span>);</div><div class="line">&#125;</div><div class="line"><span class="keyword">var</span> client = <span class="keyword">new</span> HttpClient();</div><div class="line"><span class="keyword">var</span> queryString = HttpUtility.ParseQueryString(<span class="keyword">string</span>.Empty);</div><div class="line"><span class="keyword">const</span> <span class="keyword">string</span> appId = <span class="string">"你的appid"</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">string</span> subscriptionKey = <span class="string">"你的訂閱key"</span>;</div><div class="line"><span class="comment">// Request headers</span></div><div class="line">client.DefaultRequestHeaders.Add(<span class="string">"Ocp-Apim-Subscription-Key"</span>, subscriptionKey);</div><div class="line"></div><div class="line"><span class="comment">// Request parameters</span></div><div class="line"><span class="comment">//如果回傳的內容中需要各 Intent 的話，請將 verbose 設定為 true </span></div><div class="line">queryString[<span class="string">"verbose"</span>] = <span class="string">"true"</span>;</div><div class="line"><span class="comment">//queryString["spellCheck"] = "&#123;boolean&#125;";</span></div><div class="line"><span class="comment">//queryString["staging"] = "&#123;boolean&#125;";</span></div><div class="line"><span class="comment">//queryString["bing-spell-check-subscription-key"] = "bing key";</span></div><div class="line"><span class="comment">//queryString["log"] = "&#123;boolean&#125;";</span></div><div class="line"></div><div class="line"><span class="keyword">var</span> uri = <span class="string">$"https://eastasia.api.cognitive.microsoft.com/luis/v2.0/apps/<span class="subst">&#123;appId&#125;</span>?q="</span> + HttpUtility.UrlEncode(reqString)+ <span class="string">"&amp;"</span> + queryString;;</div><div class="line"><span class="keyword">var</span> response = <span class="keyword">await</span> client.GetAsync(uri);</div><div class="line"><span class="keyword">var</span> result = <span class="keyword">await</span> response.Content.ReadAsStringAsync();</div><div class="line"><span class="keyword">return</span> result;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li><li><p>call 正式 api 使用 POST (筆者試了老半天都試不出來，後來詢問 MS Herman 大大才知道，POST 的 body 前後要加 雙引號)，如下， </p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">async</span> Task&lt;<span class="keyword">string</span>&gt; <span class="title">GetLuisResultPost</span>(<span class="params"><span class="keyword">string</span> reqString</span>)</span></div><div class="line"><span class="function"></span>&#123;</div><div class="line"><span class="comment">//最多是 500 個 ascii chars，中文我先取 230 個</span></div><div class="line"><span class="keyword">if</span> (reqString.Length &gt; <span class="number">230</span>)</div><div class="line">&#123;</div><div class="line">reqString = reqString.Substring(<span class="number">0</span>, <span class="number">230</span>);</div><div class="line">&#125;</div><div class="line"><span class="keyword">var</span> client = <span class="keyword">new</span> HttpClient();</div><div class="line"><span class="keyword">var</span> queryString = HttpUtility.ParseQueryString(<span class="keyword">string</span>.Empty);</div><div class="line"><span class="keyword">const</span> <span class="keyword">string</span> appId = <span class="string">"你的appid"</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">string</span> subscriptionKey = <span class="string">"你的訂閱key"</span>;</div><div class="line"><span class="comment">// Request headers</span></div><div class="line">client.DefaultRequestHeaders.Add(<span class="string">"Ocp-Apim-Subscription-Key"</span>, subscriptionKey);</div><div class="line"> </div><div class="line"><span class="comment">// Request parameters</span></div><div class="line"><span class="comment">//如果回傳的內容中需要各 Intent 的話，請將 verbose 設定為 true </span></div><div class="line">queryString[<span class="string">"verbose"</span>] = <span class="string">"true"</span>;</div><div class="line"><span class="comment">//queryString["spellCheck"] = "&#123;boolean&#125;";</span></div><div class="line"><span class="comment">//queryString["staging"] = "&#123;boolean&#125;";</span></div><div class="line"><span class="comment">//queryString["bing-spell-check-subscription-key"] = "bing key";</span></div><div class="line"><span class="comment">//queryString["log"] = "&#123;boolean&#125;";</span></div><div class="line"><span class="keyword">var</span> uri = <span class="string">$"https://westus.api.cognitive.microsoft.com/luis/v2.0/apps/<span class="subst">&#123;appId&#125;</span>?"</span> + queryString;</div><div class="line"></div><div class="line">HttpResponseMessage response;</div><div class="line"></div><div class="line"><span class="comment">// Request body，前後要加上 雙引號 哦! </span></div><div class="line"><span class="keyword">byte</span>[] byteData = Encoding.UTF8.GetBytes(<span class="string">"\""</span> + reqString + <span class="string">"\""</span>);</div><div class="line"><span class="keyword">using</span> (<span class="keyword">var</span> content = <span class="keyword">new</span> ByteArrayContent(byteData))</div><div class="line">&#123;</div><div class="line">response = <span class="keyword">await</span> client.PostAsync(uri, content);</div><div class="line"><span class="keyword">var</span> result = <span class="keyword">await</span> response.Content.ReadAsStringAsync();</div><div class="line"><span class="keyword">return</span> result;</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li><li><p>註: 在 LUIS 設定好，按下 Train 後，請記得要到 PUBLISH , 按下 「Publish to production slot」，這樣才會部到各區域去哦!  </p></li></ul><p>知道如何 Call Production 的 api 之後，如果我們想要像 <a href="https://rainmakerho.github.io/2018/01/25/2018003/">線上客服 + BOT 之路</a> 一文中，先用個 Excel 檔去試看看的話(目前 luis.ai 上 support 上傳 json , 整批測試)，多試個幾次，免費的 quota 應該一下子就沒了吧! 如下所示，<br><img src="/2018/01/29/2018005/2018005001.png" alt="超過免費可呼叫的Quota" title="超過免費可呼叫的Quota">  </p><p>那怎麼辦呢? </p><ul><li><p>1.到 Azure 那買個服務，然後再將訂閱的 Key 加到 luis.ai 之中，如下， </p><img src="/2018/01/29/2018005/2018005002.png" alt="從Azure買付費的方案" title="從Azure買付費的方案">  </li><li><p>2.使用 luis.ai 測試的 api ，您可以在測試時，錄一下 network ，如下，  </p><img src="/2018/01/29/2018005/2018005005.png" alt="luis.ai 測試的 api" title="luis.ai 測試的 api"> </li></ul><p>所以 Call luis.ai 測試 api 的方式如下，<br><figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">async</span> Task&lt;<span class="keyword">string</span>&gt; <span class="title">GetLuisResultTest</span>(<span class="params"><span class="keyword">string</span> reqString</span>)</span></div><div class="line"><span class="function"></span>&#123;</div><div class="line"><span class="comment">//最多是 500 個 ascii chars，中文我先取 230 個</span></div><div class="line"><span class="keyword">if</span> (reqString.Length &gt; <span class="number">230</span>)</div><div class="line">&#123;</div><div class="line">reqString = reqString.Substring(<span class="number">0</span>, <span class="number">230</span>);</div><div class="line">&#125;</div><div class="line"><span class="keyword">var</span> client = <span class="keyword">new</span> HttpClient();</div><div class="line"><span class="keyword">var</span> queryString = HttpUtility.ParseQueryString(<span class="keyword">string</span>.Empty);</div><div class="line"><span class="keyword">const</span> <span class="keyword">string</span> appId = <span class="string">"你的appid"</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">string</span> subscriptionKey = <span class="string">"你的免費訂閱key"</span>;</div><div class="line"><span class="comment">// Request headers</span></div><div class="line">client.DefaultRequestHeaders.Add(<span class="string">"Ocp-Apim-Subscription-Key"</span>, subscriptionKey);</div><div class="line"><span class="keyword">var</span> uri = <span class="string">$"https://westus.api.cognitive.microsoft.com/luis/webapi/v2.0/apps/<span class="subst">&#123;appId&#125;</span>/versions/0.1/predict?example="</span> + HttpUtility.UrlEncode(reqString);</div><div class="line"><span class="keyword">var</span> response = <span class="keyword">await</span> client.GetAsync(uri);</div><div class="line"><span class="keyword">var</span> result = <span class="keyword">await</span> response.Content.ReadAsStringAsync();</div><div class="line"><span class="keyword">return</span> result;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>這個測試的 api 跟正式機的差別除了內容不太相同，它取出的 Entity 中間會有空白，所以再使用上需要將空白清掉哦! 因為它是測試用的，所以在整批 Call 的時候，有時會 block 一段時間，我的做法是如果出錯就停個 15 秒，讓它再重試一次，後來就可以正常再 Call 了哦!</p><p>正式 api 的結果如下 ( verbose 參數為 true, 內容才會有 intents )，<br><figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  <span class="attr">"query"</span>: <span class="string">"下載下來可以用了，可是什麼是網址識別"</span>,</div><div class="line">  <span class="attr">"topScoringIntent"</span>: &#123;</div><div class="line">    <span class="attr">"intent"</span>: <span class="string">"FAQ"</span>,</div><div class="line">    <span class="attr">"score"</span>: <span class="number">1.0</span></div><div class="line">  &#125;,</div><div class="line">  <span class="attr">"intents"</span>: [</div><div class="line">    &#123;</div><div class="line">      <span class="attr">"intent"</span>: <span class="string">"FAQ"</span>,</div><div class="line">      <span class="attr">"score"</span>: <span class="number">1.0</span></div><div class="line">    &#125;,</div><div class="line">    &#123;</div><div class="line">      <span class="attr">"intent"</span>: <span class="string">"None"</span>,</div><div class="line">      <span class="attr">"score"</span>: <span class="number">0.05330094</span></div><div class="line">    &#125;</div><div class="line">  ],</div><div class="line">  <span class="attr">"entities"</span>: [</div><div class="line">    &#123;</div><div class="line">      <span class="attr">"entity"</span>: <span class="string">"網址"</span>,</div><div class="line">      <span class="attr">"type"</span>: <span class="string">"Keyword"</span>,</div><div class="line">      <span class="attr">"startIndex"</span>: <span class="number">14</span>,</div><div class="line">      <span class="attr">"endIndex"</span>: <span class="number">15</span>,</div><div class="line">      <span class="attr">"score"</span>: <span class="number">0.9081365</span></div><div class="line">    &#125;,</div><div class="line">    &#123;</div><div class="line">      <span class="attr">"entity"</span>: <span class="string">"識別"</span>,</div><div class="line">      <span class="attr">"type"</span>: <span class="string">"Keyword"</span>,</div><div class="line">      <span class="attr">"startIndex"</span>: <span class="number">16</span>,</div><div class="line">      <span class="attr">"endIndex"</span>: <span class="number">17</span>,</div><div class="line">      <span class="attr">"score"</span>: <span class="number">0.9102927</span></div><div class="line">    &#125;,</div><div class="line">    &#123;</div><div class="line">      <span class="attr">"entity"</span>: <span class="string">"下載"</span>,</div><div class="line">      <span class="attr">"type"</span>: <span class="string">"Action"</span>,</div><div class="line">      <span class="attr">"startIndex"</span>: <span class="number">0</span>,</div><div class="line">      <span class="attr">"endIndex"</span>: <span class="number">1</span>,</div><div class="line">      <span class="attr">"score"</span>: <span class="number">0.9999258</span></div><div class="line">    &#125;</div><div class="line">  ]</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>測試 api 的結果如下( entityPredictions 中的 phrase 字之間會有空白哦!!! )， </p><pre><code class="json">{    <span class="attr">"id"</span>: <span class="literal">null</span>,    <span class="attr">"text"</span>: <span class="string">"下載下來可以用了，可是什麼是網址識別"</span>,    <span class="attr">"alteredText"</span>: <span class="string">"下載下來可以用了，可是什麼是網址識別"</span>,    <span class="attr">"tokenizedText"</span>: [        <span class="string">"下"</span>    ],    <span class="attr">"intentPredictions"</span>: [        {            <span class="attr">"id"</span>: <span class="string">"9e70ed0a-561c-45f4-b8a4-2439de42acb1"</span>,            <span class="attr">"name"</span>: <span class="string">"FAQ"</span>,            <span class="attr">"score"</span>: <span class="number">1.0</span>        },        {            <span class="attr">"id"</span>: <span class="string">"8d898fa2-667f-471d-b87f-309011627b5d"</span>,            <span class="attr">"name"</span>: <span class="string">"None"</span>,            <span class="attr">"score"</span>: <span class="number">0.05</span>        }    ],    <span class="attr">"entityPredictions"</span>: [        {            <span class="attr">"id"</span>: <span class="string">"cb403a63-347c-448c-9b08-3e48d6ac0c61"</span>,            <span class="attr">"entityName"</span>: <span class="string">"Keyword"</span>,            <span class="attr">"startTokenIndex"</span>: <span class="number">14</span>,            <span class="attr">"endTokenIndex"</span>: <span class="number">15</span>,            <span class="attr">"phrase"</span>: <span class="string">"網 址"</span>,            <span class="attr">"entityType"</span>: <span class="number">1</span>        },        {            <span class="attr">"id"</span>: <span class="string">"cb403a63-347c-448c-9b08-3e48d6ac0c61"</span>,            <span class="attr">"entityName"</span>: <span class="string">"Keyword"</span>,            <span class="attr">"startTokenIndex"</span>: <span class="number">16</span>,            <span class="attr">"endTokenIndex"</span>: <span class="number">17</span>,            <span class="attr">"phrase"</span>: <span class="string">"識 別"</span>,            <span class="attr">"entityType"</span>: <span class="number">1</span>        },        {            <span class="attr">"id"</span>: <span class="string">"1771cbab-fb7b-4a83-b46d-4c085ba88341"</span>,            <span class="attr">"entityName"</span>: <span class="string">"Action"</span>,            <span class="attr">"startTokenIndex"</span>: <span class="number">0</span>,            <span class="attr">"endTokenIndex"</span>: <span class="number">1</span>,            <span class="attr">"phrase"</span>: <span class="string">"下 載"</span>,            <span class="attr">"entityType"</span>: <span class="number">1</span>        }    ],    <span class="attr">"tokenMetadata"</span>: <span class="literal">null</span>}</code></pre><p>預設 call 正式 api 時，會 log 查詢的資料，最近幾筆資料可以從 「 Review endpoint utterances 」 看到，如下<br><img src="/2018/01/29/2018005/2018005003.png" alt="Review endpoint utterances" title="Review endpoint utterances">  </p><p>那如果我需要的是全部的 Log 呢? 可以到「 My apps 」，在那個 app 右邊的 … ，選取「 Export Endpoint Log 」，就可以了哦，如下，<br><img src="/2018/01/29/2018005/2018005004.png" alt="Export Endpoint Logs" title="Export Endpoint Logs"> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;luis-ai-api-價格說明&quot;&gt;&lt;a href=&quot;#luis-ai-api-價格說明&quot; class=&quot;headerlink&quot; title=&quot;luis.ai api 價格說明&quot;&gt;&lt;/a&gt;luis.ai api 價格說明&lt;/h3&gt;&lt;p&gt;我們使用 luis.ai 的
      
    
    </summary>
    
    
      <category term="luis.ai" scheme="https://rainmakerho.github.io/tags/luis-ai/"/>
    
      <category term="predictions api" scheme="https://rainmakerho.github.io/tags/predictions-api/"/>
    
      <category term="luis.ai 價格" scheme="https://rainmakerho.github.io/tags/luis-ai-%E5%83%B9%E6%A0%BC/"/>
    
  </entry>
  
  <entry>
    <title>客製 BotDataStore ，將 Bot State 資料存到 SQL Server之中</title>
    <link href="https://rainmakerho.github.io/2018/01/26/2018004/"/>
    <id>https://rainmakerho.github.io/2018/01/26/2018004/</id>
    <published>2018-01-26T05:11:04.000Z</published>
    <updated>2018-01-26T06:34:50.534Z</updated>
    
    <content type="html"><![CDATA[<p>不知大家在使用 botframework-emulator 測試 chatbot 時，有沒有發現，對話一開始時，會先將 Bot State 取出來(BotConversationData, BotPrivateConversationData 及 BotUserData)，而在對話後，則將這些資料存回去，如下圖所示，<br><img src="/2018/01/26/2018004/2018004001.png" alt="對話中BotState的處理順序" title="對話中BotState的處理順序"><br>那大家會好奇那些 Bot State 都存到那裡去了呢?<br>預設的 BotDataStore 是使用 <a href="https://github.com/Microsoft/BotBuilder/blob/master/CSharp/Library/Microsoft.Bot.Builder/ConnectorEx/BotData.cs#L197" target="_blank" rel="external">ConnectorStore</a> ，它依 StateClient.BotState 去儲存，而 url 就是 {serverUrl}/v3/botstate/{channelId}/conversations/{conversationId} ， {serverUrl}/v3/botstate/{channelId}/conversations/{conversationId}/users/{userId} 及 {serverUrl}/v3/botstate/{channelId}/users/{userId} ，詳細可以參考 <a href="https://github.com/Microsoft/BotBuilder/blob/master/CSharp/Library/Microsoft.Bot.Connector.Shared/StateAPI/BotState.cs" target="_blank" rel="external">BotState.cs</a> ，serverUrl 是 activity.ServiceUrl ，詳細可以參考 <a href="https://github.com/Microsoft/BotBuilder/blob/master/CSharp/Library/Microsoft.Bot.Connector.Shared/StateAPI/StateClient.cs" target="_blank" rel="external">StateClient.cs</a>。 </p><p>在 <a href="https://blog.botframework.com/2017/07/26/saving-state-sql-dotnet/" target="_blank" rel="external">Saving State data in SQL with .NET</a> 這篇之中，說明如何實作 IBotDataStore<botdata> 然後將 Bot State 存到 SQL Server 之中。<br>客製的 BotDataStore 寫好了之後，記得要在 global.asax 中去設定讓 autofac 使用我們的 SqlBotDataStore，如下， </botdata></p><pre><code class="csharp"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">Application_Start</span>(<span class="params"></span>)</span><span class="function"></span>{    Conversation.UpdateContainer(builder =&gt;    {        <span class="keyword">var</span> store = <span class="keyword">new</span> SqlBotDataStore(<span class="string">"BotDataContextConnectionString"</span>);        builder.Register(c =&gt; <span class="keyword">new</span> CachingBotDataStore(store              , CachingBotDataStoreConsistencyPolicy.LastWriteWins))            .As&lt;IBotDataStore&lt;BotData&gt;&gt;()            .AsSelf()            .InstancePerLifetimeScope();    });    GlobalConfiguration.Configure(WebApiConfig.Register);}</code></pre><p>這樣在SQL中就可以看到 Bot State 存到了 SQL DB 之中，如下，<br><img src="/2018/01/26/2018004/2018004002.png" alt="StateInSQLDB" title="StateInSQLDB"> </p><p>另外，像我們之前寫的 Local Direct Line Server <a href="https://rainmakerhoblog.wordpress.com/2017/08/30/20170830/" target="_blank" rel="external">使用 Microsoft Bot Framework 地端的 WebChat 機器人(企業內)</a>，我們會將 Channel 的資料放在 ChannelData 之中，而在存 State 時， ChannelId 要取自 activity 的 channelData ，則可以改自 ConnectorStore ，加入讀取 activity ，如下，</p><pre><code class="csharp"><span class="comment">//modify from ConnectorStore</span>public class LDLDataStore : IBotDataStore&lt;BotData&gt;{    <span class="keyword">private</span> <span class="keyword">readonly</span> IStateClient stateClient;    <span class="keyword">private</span> <span class="keyword">readonly</span> IActivity activity;    <span class="function"><span class="keyword">public</span> <span class="title">LDLDataStore</span>(<span class="params">IStateClient stateClient, IActivity activity</span>)</span><span class="function">    </span>{        SetField.NotNull(<span class="keyword">out</span> <span class="keyword">this</span>.stateClient, <span class="keyword">nameof</span>(stateClient), stateClient);        SetField.NotNull(<span class="keyword">out</span> <span class="keyword">this</span>.activity, <span class="keyword">nameof</span>(activity), activity);    }    <span class="keyword">async</span> Task&lt;BotData&gt; IBotDataStore&lt;BotData&gt;.LoadAsync(IAddress key, BotStoreType botStoreType, CancellationToken cancellationToken)    {        <span class="keyword">var</span> channelId = GetChannelId(key);        BotData botData;        <span class="keyword">switch</span> (botStoreType)        {            <span class="keyword">case</span> BotStoreType.BotConversationData:                botData = <span class="keyword">await</span> stateClient.BotState.GetConversationDataAsync(channelId, key.ConversationId, cancellationToken);                <span class="keyword">break</span>;            <span class="keyword">case</span> BotStoreType.BotUserData:                botData = <span class="keyword">await</span> stateClient.BotState.GetUserDataAsync(channelId, key.UserId, cancellationToken);                <span class="keyword">break</span>;            <span class="keyword">case</span> BotStoreType.BotPrivateConversationData:                botData = <span class="keyword">await</span> stateClient.BotState.GetPrivateConversationDataAsync(channelId, key.ConversationId, key.UserId, cancellationToken);                <span class="keyword">break</span>;            <span class="keyword">default</span>:                <span class="keyword">throw</span> <span class="keyword">new</span> ArgumentException(<span class="string">$"<span class="subst">{botStoreType}</span> is not a valid store type!"</span>);        }        <span class="keyword">return</span> botData;    }    <span class="keyword">async</span> Task IBotDataStore&lt;BotData&gt;.SaveAsync(IAddress key, BotStoreType botStoreType, BotData botData, CancellationToken cancellationToken)    {        <span class="keyword">var</span> channelId = GetChannelId(key);        <span class="keyword">switch</span> (botStoreType)        {            <span class="keyword">case</span> BotStoreType.BotConversationData:                <span class="keyword">await</span> stateClient.BotState.SetConversationDataAsync(channelId, key.ConversationId, botData, cancellationToken);                <span class="keyword">break</span>;            <span class="keyword">case</span> BotStoreType.BotUserData:                <span class="keyword">await</span> stateClient.BotState.SetUserDataAsync(channelId, key.UserId, botData, cancellationToken);                <span class="keyword">break</span>;            <span class="keyword">case</span> BotStoreType.BotPrivateConversationData:                <span class="keyword">await</span> stateClient.BotState.SetPrivateConversationDataAsync(channelId, key.ConversationId, key.UserId, botData, cancellationToken);                <span class="keyword">break</span>;            <span class="keyword">default</span>:                <span class="keyword">throw</span> <span class="keyword">new</span> ArgumentException(<span class="string">$"<span class="subst">{botStoreType}</span> is not a valid store type!"</span>);        }    }    Task&lt;<span class="keyword">bool</span>&gt; IBotDataStore&lt;BotData&gt;.FlushAsync(IAddress key, CancellationToken cancellationToken)    {        <span class="comment">// Everything is saved. Flush is no-op</span>        <span class="keyword">return</span> Task.FromResult(<span class="literal">true</span>);    }    <span class="function"><span class="keyword">private</span> <span class="keyword">string</span> <span class="title">GetChannelId</span>(<span class="params">IAddress key</span>)</span><span class="function">    </span>{        <span class="keyword">var</span> channelData = JObject.FromObject(activity.ChannelData);        <span class="keyword">string</span> channelId = channelData.SelectToken(<span class="string">"channelId"</span>)?.ToString();        <span class="keyword">if</span> (<span class="keyword">string</span>.IsNullOrWhiteSpace(channelId))        {            channelId = key.ChannelId;        }        <span class="keyword">return</span> channelId;    }}</code></pre><p>而在 global.asax 之中，我們的 LDLDataStore 需要多傳入 Activity ，如下， </p><pre><code class="csharp"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">Application_Start</span>(<span class="params"></span>)</span><span class="function"></span>{    Conversation.UpdateContainer(builder =&gt;    {        builder.Register(c =&gt; <span class="keyword">new</span> CachingBotDataStore(<span class="keyword">new</span> LDLDataStore(c.Resolve&lt;IStateClient&gt;(), c.Resolve&lt;IActivity&gt;())            , CachingBotDataStoreConsistencyPolicy.LastWriteWins))            .As&lt;IBotDataStore&lt;BotData&gt;&gt;()            .AsSelf()            .InstancePerLifetimeScope();     });     GlobalConfiguration.Configure(WebApiConfig.Register);}</code></pre><p>知道如何在 global.asax 中置換 BotDataStore ，只要實作 IBotDataStore<botdata> 便可以輕易的更換 BotDataStore 哦! </botdata></p><h3 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h3><p><a href="https://blog.botframework.com/2017/07/26/saving-state-sql-dotnet/" target="_blank" rel="external">Saving State data in SQL with .NET</a><br><a href="https://docs.microsoft.com/en-us/bot-framework/dotnet/bot-builder-dotnet-state#Botstatemethods" target="_blank" rel="external">Manage state data</a> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;不知大家在使用 botframework-emulator 測試 chatbot 時，有沒有發現，對話一開始時，會先將 Bot State 取出來(BotConversationData, BotPrivateConversationData 及 BotUserData)，
      
    
    </summary>
    
    
      <category term="chatbot" scheme="https://rainmakerho.github.io/tags/chatbot/"/>
    
      <category term="botframework" scheme="https://rainmakerho.github.io/tags/botframework/"/>
    
      <category term="BotDataStore" scheme="https://rainmakerho.github.io/tags/BotDataStore/"/>
    
      <category term="ConnectorStore" scheme="https://rainmakerho.github.io/tags/ConnectorStore/"/>
    
  </entry>
  
  <entry>
    <title>線上客服 + BOT 之路</title>
    <link href="https://rainmakerho.github.io/2018/01/25/2018003/"/>
    <id>https://rainmakerho.github.io/2018/01/25/2018003/</id>
    <published>2018-01-25T08:10:47.000Z</published>
    <updated>2018-01-26T06:38:51.976Z</updated>
    
    <content type="html"><![CDATA[<p>相信很多產品都會有線上客服系統及線上 FAQ 系統，提供給使用者線上詢問或查詢來排除操作系統所發生的問題。<br>如果加上 FAQ Chatbot 可以服務更多的使用者(當線上客服人員下班時)，也可以讓線上客服人員可以服務復雜的問題。<br>我們要如何加上 FAQ Chatbot 呢? 讓我們繼續看下去 … </p><p>FAQ系統是使用 keyword 來 Search 的，如下，<br><img src="/2018/01/25/2018003/2018003001.png" alt="FAQ關鍵字Search" title="FAQ關鍵字Search">   </p><p>但是當使用者輸入「一句話」，FAQ可能就查不出資料了，如下，<br><img src="/2018/01/25/2018003/2018003002.png" alt="FAQ一句話Search" title="FAQ一句話Search"> </p><p>Microsoft 有一個 <a href="https://qnamaker.ai/" target="_blank" rel="external">QnAMaker</a>，剛好符合我們的需求，只要將 Q and A 匯進去，呼叫它的 api 就可以回傳合適的答案。<br>於是我們就將 FAQ 中的資料匯到了 <a href="https://qnamaker.ai/" target="_blank" rel="external">QnAMaker</a> 之中(大約有230個問題)，如下<br><img src="/2018/01/25/2018003/2018003003.png" alt="已匯入資料的QnAMaker" title="已匯入資料的QnAMaker"><br>用中文來測試，有些 OK，有些又不太 OK。 於是有看到「Alternative Phrasing」，目前用的狀況是「中文真的不OK~」。 所以我們就只好改成，依不同的問法分別建立一個 QnA pair 。<br>另外一個狀況就是，目前它是 Preview ，所以會限速 … <a href="https://docs.microsoft.com/en-us/azure/cognitive-services/qnamaker/faqs" target="_blank" rel="external">Current transaction limits are 10 calls per minute and 10,000 calls per month…</a>，所以在 Call 它的 api 時，常常會出現 429 的錯誤。(Error code 429: Rate limit is exceeded. Try again or upgrade to a higher pricing tier with a higher rate limit (if available).)  </p><p>接下來我們就使用 1645 個問題來試看看 QnA Maker ，結果它有回答 336 筆，約 20% 。 </p><ul><li>註: 因為 QnA Maker 目前還是 Preview, 所以持續 Call 時，要停個 500 ms, 如果發生錯誤時，就再等個 10 秒再試一次哦! </li></ul><p>怎麼辦呢? 這樣子 FAQ Bot 不就沒人要用 !!!<br>詢問 MS Tom 哥後，他給我們的建議是用 <a href="https://www.luis.ai/" target="_blank" rel="external">LUIS</a> + <a href="http://www.vitalsesp.com/" target="_blank" rel="external">Vital ESP</a>(FAQ系統)。<br>可以透過 <a href="https://www.luis.ai/" target="_blank" rel="external">LUIS</a> 解析使用者的問題，解析出「意圖」及「關鍵字」，然後再把「關鍵字」送到 FAQ 去查詢，這樣正確率就會比較高。<br>一開始我的想法是一個問題建立一個 Intent (LUIS now allows you to create 500 intents and 100 entities)，但是這樣子蠻不準的。<br>Tom 哥說，<a href="https://www.luis.ai/" target="_blank" rel="external">LUIS</a> 是依句型去解析的，類似的句型不同的 Intent 反而會造成混亂。<br>所以我們就建立一個 FAQ 的 Intent ，然後將 FAQ 系統中 230 個問題都匯進 FAQ Intent 之中，然後我們再進去設定關鍵字(Entity)。<br>不過這樣子設定的人要針對 230 個問題一個一個地去設定 Entity ，也還蠻累的。<br>後來同事 Alex 大大測試，即然 <a href="https://www.luis.ai/" target="_blank" rel="external">LUIS</a> 是依句型去解析的，那我們只需要建立一些使用者會詢問的句型，然後 關鍵字(Entity)就設定2種(action, keyword)，再依 action 及 keyword 建立 Phrase lists ，例如 keyword Phrase lists 裡面就有 App, 行事曆, 客戶, 會員, 網址, 權限 等等的詞，這樣子解析出來的狀況還蠻不錯的。如下，<br><img src="/2018/01/25/2018003/2018003004.png" alt="少量 Utterance + 2 個 Entities" title="少量 Utterance + 2 個 Entities"><br><img src="/2018/01/25/2018003/2018003005.png" alt="相同 Phrase List 建立很多" title="相同 Phrase List 建立很多"><br>註:目前 Phrase List 可以建立 5,000 個<a href="https://docs.microsoft.com/en-us/azure/cognitive-services/luis/luis-resources-faq" target="_blank" rel="external">Language Understanding FAQ</a>。  </p><p>所以當使用者輸入「請問如何快速新增行事曆」，透過 <a href="https://www.luis.ai/" target="_blank" rel="external">LUIS</a> 就可以找到關鍵字為 新增 及 行事曆 ，如下，<br><img src="/2018/01/25/2018003/2018003006.png" alt="LUIS Parse Entities" title="LUIS Parse Entities"> </p><p>所以我們再到 <a href="http://www.vitalsesp.com/" target="_blank" rel="external">Vital ESP</a>(FAQ系統)，輸入「新增 行事曆」，就可以正確查到資料了，如下，<br><img src="/2018/01/25/2018003/2018003007.png" alt="LUIS Parse Entities" title="LUIS Parse Entities">  </p><p>所以我們一樣使用 1645 個問題來試看看 <a href="https://www.luis.ai/" target="_blank" rel="external">LUIS</a> + <a href="http://www.vitalsesp.com/" target="_blank" rel="external">Vital ESP</a>(FAQ系統) ，有找出結果的約有 968 個，約 50 %。<br>註:我們會產生一個 Excel 的結果檔如下，<br><img src="/2018/01/25/2018003/2018003008.png" alt="測試結果的Excel內容" title="測試結果的Excel內容"> </p><p>架構類似如下，<br><img src="/2018/01/25/2018003/2018003010.png" alt="架構圖" title="架構圖"></p><p>而透過 Chatbot 去封裝的話，畫面如下，<br><img src="/2018/01/25/2018003/2018003009.png" alt="FAQ chatbot" title="FAQ chatbot"> </p><p>之後在 Chatbot 中就可以再去記錄一些使用者的行為，讓 Chatbot 更智能。 </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;相信很多產品都會有線上客服系統及線上 FAQ 系統，提供給使用者線上詢問或查詢來排除操作系統所發生的問題。&lt;br&gt;如果加上 FAQ Chatbot 可以服務更多的使用者(當線上客服人員下班時)，也可以讓線上客服人員可以服務復雜的問題。&lt;br&gt;我們要如何加上 FAQ Chat
      
    
    </summary>
    
    
      <category term="QnA Maker" scheme="https://rainmakerho.github.io/tags/QnA-Maker/"/>
    
      <category term="LUIS" scheme="https://rainmakerho.github.io/tags/LUIS/"/>
    
      <category term="Vital ESP" scheme="https://rainmakerho.github.io/tags/Vital-ESP/"/>
    
      <category term="chatbot" scheme="https://rainmakerho.github.io/tags/chatbot/"/>
    
      <category term="FAQ" scheme="https://rainmakerho.github.io/tags/FAQ/"/>
    
  </entry>
  
</feed>
